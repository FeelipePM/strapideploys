{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _Plus = _interopRequireDefault(require(\"@strapi/icons/Plus\"));\n\nvar _ArrowLeft = _interopRequireDefault(require(\"@strapi/icons/ArrowLeft\"));\n\nvar _Check = _interopRequireDefault(require(\"@strapi/icons/Check\"));\n\nvar _Pencil = _interopRequireDefault(require(\"@strapi/icons/Pencil\"));\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _Link = require(\"@strapi/design-system/Link\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _has = _interopRequireDefault(require(\"lodash/has\"));\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _upperFirst = _interopRequireDefault(require(\"lodash/upperFirst\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _List = _interopRequireDefault(require(\"../../components/List\"));\n\nvar _ListRow = _interopRequireDefault(require(\"../../components/ListRow\"));\n\nvar _useDataManager2 = _interopRequireDefault(require(\"../../hooks/useDataManager\"));\n\nvar _useFormModalNavigation = _interopRequireDefault(require(\"../../hooks/useFormModalNavigation\"));\n\nvar _getAttributeDisplayedType = _interopRequireDefault(require(\"../../utils/getAttributeDisplayedType\"));\n\nvar _getTrad = _interopRequireDefault(require(\"../../utils/getTrad\"));\n\nvar _LinkToCMSettingsView = _interopRequireDefault(require(\"./LinkToCMSettingsView\"));\n\n/* eslint-disable indent */\nvar ListView = function ListView() {\n  var _useDataManager = (0, _useDataManager2[\"default\"])(),\n      initialData = _useDataManager.initialData,\n      modifiedData = _useDataManager.modifiedData,\n      isInDevelopmentMode = _useDataManager.isInDevelopmentMode,\n      isInContentTypeView = _useDataManager.isInContentTypeView,\n      submitData = _useDataManager.submitData;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var match = (0, _reactRouterDom.useRouteMatch)('/plugins/content-type-builder/:kind/:currentUID');\n\n  var _useFormModalNavigati = (0, _useFormModalNavigation[\"default\"])(),\n      onOpenModalAddComponentsToDZ = _useFormModalNavigati.onOpenModalAddComponentsToDZ,\n      onOpenModalAddField = _useFormModalNavigati.onOpenModalAddField,\n      onOpenModalEditField = _useFormModalNavigati.onOpenModalEditField,\n      onOpenModalEditSchema = _useFormModalNavigati.onOpenModalEditSchema;\n\n  var firstMainDataPath = isInContentTypeView ? 'contentType' : 'component';\n  var mainDataTypeAttributesPath = [firstMainDataPath, 'schema', 'attributes'];\n  var targetUid = (0, _get[\"default\"])(modifiedData, [firstMainDataPath, 'uid']);\n  var isTemporary = (0, _get[\"default\"])(modifiedData, [firstMainDataPath, 'isTemporary'], false);\n  var contentTypeKind = (0, _get[\"default\"])(modifiedData, [firstMainDataPath, 'schema', 'kind'], null);\n  var attributes = (0, _get[\"default\"])(modifiedData, mainDataTypeAttributesPath, []);\n  var isFromPlugin = (0, _has[\"default\"])(initialData, [firstMainDataPath, 'plugin']);\n  var hasModelBeenModified = !(0, _isEqual[\"default\"])(modifiedData, initialData);\n  var forTarget = isInContentTypeView ? 'contentType' : 'component';\n\n  var handleClickAddComponentToDZ = function handleClickAddComponentToDZ(dynamicZoneTarget) {\n    onOpenModalAddComponentsToDZ({\n      dynamicZoneTarget: dynamicZoneTarget,\n      targetUid: targetUid\n    });\n  };\n\n  var handleClickEditField = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(forTarget, targetUid, attributeName, type) {\n      var attributeType, step;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              attributeType = (0, _getAttributeDisplayedType[\"default\"])(type);\n              step = type === 'component' ? '2' : null;\n              onOpenModalEditField({\n                forTarget: forTarget,\n                targetUid: targetUid,\n                attributeName: attributeName,\n                attributeType: attributeType,\n                step: step\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleClickEditField(_x, _x2, _x3, _x4) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var label = (0, _get[\"default\"])(modifiedData, [firstMainDataPath, 'schema', 'displayName'], '');\n  var kind = (0, _get[\"default\"])(modifiedData, [firstMainDataPath, 'schema', 'kind'], '');\n  var isCreatingFirstContentType = (match === null || match === void 0 ? void 0 : match.params.currentUID) === 'create-content-type';\n\n  if (!label && isCreatingFirstContentType) {\n    label = formatMessage({\n      id: (0, _getTrad[\"default\"])('button.model.create'),\n      defaultMessage: 'Create new collection type'\n    });\n  }\n\n  var onEdit = function onEdit() {\n    var contentType = kind || firstMainDataPath;\n\n    if (contentType === 'collectionType') {\n      trackUsage('willEditNameOfContentType');\n    }\n\n    if (contentType === 'singleType') {\n      trackUsage('willEditNameOfSingleType');\n    }\n\n    onOpenModalEditSchema({\n      modalType: firstMainDataPath,\n      forTarget: firstMainDataPath,\n      targetUid: targetUid,\n      kind: contentType\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Prompt, {\n    message: formatMessage({\n      id: (0, _getTrad[\"default\"])('prompt.unsaved')\n    }),\n    when: hasModelBeenModified\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Layout.HeaderLayout, {\n    id: \"title\",\n    primaryAction: isInDevelopmentMode && /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n      horizontal: true,\n      spacing: 2\n    }, !isCreatingFirstContentType && /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null),\n      variant: \"secondary\",\n      onClick: function onClick() {\n        onOpenModalAddField({\n          forTarget: forTarget,\n          targetUid: targetUid\n        });\n      }\n    }, formatMessage({\n      id: (0, _getTrad[\"default\"])('button.attributes.add.another')\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Check[\"default\"], null),\n      onClick: function onClick() {\n        return submitData();\n      },\n      type: \"submit\",\n      disabled: (0, _isEqual[\"default\"])(modifiedData, initialData)\n    }, formatMessage({\n      id: (0, _getTrad[\"default\"])('form.button.save'),\n      defaultMessage: 'Save'\n    }))),\n    secondaryAction: isInDevelopmentMode && !isFromPlugin && !isCreatingFirstContentType && /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Pencil[\"default\"], null),\n      variant: \"tertiary\",\n      onClick: onEdit\n    }, formatMessage({\n      id: (0, _getTrad[\"default\"])('app.utils.edit'),\n      defaultMessage: 'Edit'\n    })),\n    title: (0, _upperFirst[\"default\"])(label),\n    subtitle: formatMessage({\n      id: (0, _getTrad[\"default\"])('listView.headerLayout.description'),\n      defaultMessage: 'Build the data architecture of your content'\n    }),\n    navigationAction: /*#__PURE__*/_react[\"default\"].createElement(_Link.Link, {\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_ArrowLeft[\"default\"], null),\n      to: \"/plugins/content-type-builder/\"\n    }, formatMessage({\n      id: 'app.components.go-back',\n      defaultMessage: 'Back'\n    }))\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Layout.ContentLayout, null, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 4\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    justifyContent: \"flex-end\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    horizontal: true,\n    spacing: 2\n  }, /*#__PURE__*/_react[\"default\"].createElement(_LinkToCMSettingsView[\"default\"], {\n    key: \"link-to-cm-settings-view\",\n    targetUid: targetUid,\n    isTemporary: isTemporary,\n    isInContentTypeView: isInContentTypeView,\n    contentTypeKind: contentTypeKind,\n    disabled: isCreatingFirstContentType\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    background: \"neutral0\",\n    shadow: \"filterShadow\",\n    hasRadius: true\n  }, /*#__PURE__*/_react[\"default\"].createElement(_List[\"default\"], {\n    items: attributes,\n    customRowComponent: function customRowComponent(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_ListRow[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        onClick: handleClickEditField\n      }));\n    },\n    addComponentToDZ: handleClickAddComponentToDZ,\n    targetUid: targetUid,\n    editTarget: forTarget,\n    isMain: true\n  })))));\n};\n\nvar _default = ListView;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}