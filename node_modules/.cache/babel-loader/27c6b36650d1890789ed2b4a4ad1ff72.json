{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssetCard = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _ImageAssetCard = require(\"./ImageAssetCard\");\n\nvar _VideoAssetCard = require(\"./VideoAssetCard\");\n\nvar _DocAssetCard = require(\"./DocAssetCard\");\n\nvar _AudioAssetCard = require(\"./AudioAssetCard\");\n\nvar _constants = require(\"../../constants\");\n\nvar _createAssetUrl = require(\"../../utils/createAssetUrl\");\n\nvar _toSingularTypes = _interopRequireDefault(require(\"../../utils/toSingularTypes\"));\n\nvar AssetCard = function AssetCard(_ref) {\n  var allowedTypes = _ref.allowedTypes,\n      asset = _ref.asset,\n      isSelected = _ref.isSelected,\n      onSelect = _ref.onSelect,\n      onEdit = _ref.onEdit,\n      onRemove = _ref.onRemove,\n      size = _ref.size,\n      local = _ref.local;\n  var singularTypes = (0, _toSingularTypes[\"default\"])(allowedTypes);\n  var fileType = asset.mime.split('/')[0];\n  var handleSelect = onSelect ? function () {\n    return onSelect(asset);\n  } : undefined;\n  var canSelectAsset = singularTypes.includes(fileType) || singularTypes.includes('file') && !['video', 'image', 'audio'].includes(fileType);\n  var commonAssetCardProps = {\n    id: asset.id,\n    extension: (0, _helperPlugin.getFileExtension)(asset.ext),\n    key: asset.id,\n    name: asset.name,\n    url: local ? asset.url : (0, _createAssetUrl.createAssetUrl)(asset, true),\n    mime: asset.mime,\n    onEdit: onEdit ? function () {\n      return onEdit(asset);\n    } : undefined,\n    onSelect: !canSelectAsset && !isSelected ? undefined : handleSelect,\n    onRemove: onRemove ? function () {\n      return onRemove(asset);\n    } : undefined,\n    selected: isSelected,\n    size: size\n  };\n\n  if (asset.mime.includes(_constants.AssetType.Video)) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_VideoAssetCard.VideoAssetCard, commonAssetCardProps);\n  }\n\n  if (asset.mime.includes(_constants.AssetType.Image)) {\n    var _asset$formats, _asset$formats$thumbn;\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_ImageAssetCard.ImageAssetCard, (0, _extends2[\"default\"])({}, commonAssetCardProps, {\n      alt: asset.alternativeText || asset.name,\n      height: asset.height,\n      thumbnail: (0, _helperPlugin.prefixFileUrlWithBackendUrl)((asset === null || asset === void 0 ? void 0 : (_asset$formats = asset.formats) === null || _asset$formats === void 0 ? void 0 : (_asset$formats$thumbn = _asset$formats.thumbnail) === null || _asset$formats$thumbn === void 0 ? void 0 : _asset$formats$thumbn.url) || asset.url),\n      width: asset.width\n    }));\n  }\n\n  if (asset.mime.includes(_constants.AssetType.Audio)) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_AudioAssetCard.AudioAssetCard, commonAssetCardProps);\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_DocAssetCard.DocAssetCard, commonAssetCardProps);\n};\n\nexports.AssetCard = AssetCard;\nAssetCard.defaultProps = {\n  allowedTypes: ['images', 'files', 'videos', 'audios'],\n  isSelected: false,\n  // Determine if the asset is loaded locally or from a remote resource\n  local: false,\n  onSelect: undefined,\n  onEdit: undefined,\n  onRemove: undefined,\n  size: 'M'\n};\nAssetCard.propTypes = {\n  allowedTypes: _propTypes[\"default\"].array,\n  asset: _constants.AssetDefinition.isRequired,\n  local: _propTypes[\"default\"].bool,\n  onSelect: _propTypes[\"default\"].func,\n  onEdit: _propTypes[\"default\"].func,\n  onRemove: _propTypes[\"default\"].func,\n  isSelected: _propTypes[\"default\"].bool,\n  size: _propTypes[\"default\"].oneOf(['S', 'M'])\n};","map":null,"metadata":{},"sourceType":"script"}