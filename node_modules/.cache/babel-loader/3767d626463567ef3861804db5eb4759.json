{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.addSubjectToPermissionsArray = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar addSubjectToPermissionsArray = function addSubjectToPermissionsArray(array, uid) {\n  return array.map(function (data) {\n    return _objectSpread(_objectSpread({}, data), {}, {\n      subject: uid\n    });\n  });\n};\n\nexports.addSubjectToPermissionsArray = addSubjectToPermissionsArray;\n\nvar generatePermissionsObject = function generatePermissionsObject(uid) {\n  var permissions = {\n    create: [{\n      action: 'plugin::content-manager.explorer.create',\n      subject: null\n    }],\n    \"delete\": [{\n      action: 'plugin::content-manager.explorer.delete',\n      subject: null\n    }],\n    publish: [{\n      action: 'plugin::content-manager.explorer.publish',\n      subject: null\n    }],\n    read: [{\n      action: 'plugin::content-manager.explorer.read',\n      subject: null\n    }],\n    update: [{\n      action: 'plugin::content-manager.explorer.update',\n      subject: null\n    }]\n  };\n  return Object.keys(permissions).reduce(function (acc, current) {\n    acc[current] = addSubjectToPermissionsArray(permissions[current], uid);\n    return acc;\n  }, {});\n};\n\nvar _default = generatePermissionsObject;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}