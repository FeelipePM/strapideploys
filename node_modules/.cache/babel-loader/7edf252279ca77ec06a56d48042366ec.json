{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.ProvidersPage = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _has = _interopRequireDefault(require(\"lodash/has\"));\n\nvar _upperFirst = _interopRequireDefault(require(\"lodash/upperFirst\"));\n\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _Main = require(\"@strapi/design-system/Main\");\n\nvar _LiveRegions = require(\"@strapi/design-system/LiveRegions\");\n\nvar _Table = require(\"@strapi/design-system/Table\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _VisuallyHidden = require(\"@strapi/design-system/VisuallyHidden\");\n\nvar _IconButton = require(\"@strapi/design-system/IconButton\");\n\nvar _Pencil = _interopRequireDefault(require(\"@strapi/icons/Pencil\"));\n\nvar _reactQuery = require(\"react-query\");\n\nvar _forms = _interopRequireDefault(require(\"./utils/forms\"));\n\nvar _api = require(\"./utils/api\");\n\nvar _createProvidersArray = _interopRequireDefault(require(\"./utils/createProvidersArray\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\nvar _FormModal = _interopRequireDefault(require(\"../../components/FormModal\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar ProvidersPage = function ProvidersPage() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  (0, _helperPlugin.useFocusWhenNavigate)();\n\n  var _useNotifyAT = (0, _LiveRegions.useNotifyAT)(),\n      notifyStatus = _useNotifyAT.notifyStatus;\n\n  var queryClient = (0, _reactQuery.useQueryClient)();\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var trackUsageRef = (0, _react.useRef)(trackUsage);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isSubmiting = _useState4[0],\n      setIsSubmiting = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(null),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      providerToEditName = _useState6[0],\n      setProviderToEditName = _useState6[1];\n\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useOverlayBlocker = (0, _helperPlugin.useOverlayBlocker)(),\n      lockApp = _useOverlayBlocker.lockApp,\n      unlockApp = _useOverlayBlocker.unlockApp;\n\n  var updatePermissions = (0, _react.useMemo)(function () {\n    return {\n      update: _permissions[\"default\"].updateProviders\n    };\n  }, []);\n\n  var _useRBAC = (0, _helperPlugin.useRBAC)(updatePermissions),\n      isLoadingForPermissions = _useRBAC.isLoading,\n      canUpdate = _useRBAC.allowedActions.canUpdate;\n\n  var _useQuery = (0, _reactQuery.useQuery)('get-providers', function () {\n    return (0, _api.fetchData)(toggleNotification);\n  }, {\n    onSuccess: function onSuccess() {\n      notifyStatus(formatMessage({\n        id: (0, _utils.getTrad)('Providers.data.loaded'),\n        defaultMessage: 'Providers have been loaded'\n      }));\n    },\n    initialData: {}\n  }),\n      isLoadingForData = _useQuery.isLoading,\n      modifiedData = _useQuery.data,\n      isFetching = _useQuery.isFetching;\n\n  var isLoading = isLoadingForData || isFetching;\n  var submitMutation = (0, _reactQuery.useMutation)(_api.putProvider, {\n    onSuccess: function () {\n      var _onSuccess = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return queryClient.invalidateQueries('get-providers');\n\n              case 2:\n                toggleNotification({\n                  type: 'info',\n                  message: {\n                    id: (0, _utils.getTrad)('notification.success.submit')\n                  }\n                });\n                trackUsageRef.current('didEditAuthenticationProvider');\n                setIsSubmiting(false);\n                handleToggleModal();\n                unlockApp();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSuccess() {\n        return _onSuccess.apply(this, arguments);\n      }\n\n      return onSuccess;\n    }(),\n    onError: function onError() {\n      toggleNotification({\n        type: 'warning',\n        message: {\n          id: 'notification.error'\n        }\n      });\n      unlockApp();\n      setIsSubmiting(false);\n    },\n    refetchActive: false\n  });\n  var providers = (0, _react.useMemo)(function () {\n    return (0, _createProvidersArray[\"default\"])(modifiedData);\n  }, [modifiedData]);\n  var rowCount = providers.length;\n  var isProviderWithSubdomain = (0, _react.useMemo)(function () {\n    if (!providerToEditName) {\n      return false;\n    }\n\n    var providerToEdit = providers.find(function (obj) {\n      return obj.name === providerToEditName;\n    });\n    return (0, _has[\"default\"])(providerToEdit, 'subdomain');\n  }, [providers, providerToEditName]);\n  var pageTitle = formatMessage({\n    id: (0, _utils.getTrad)('HeaderNav.link.providers'),\n    defaultMessage: 'Providers'\n  });\n  var layoutToRender = (0, _react.useMemo)(function () {\n    if (providerToEditName === 'email') {\n      return _forms[\"default\"].email;\n    }\n\n    if (isProviderWithSubdomain) {\n      return _forms[\"default\"].providersWithSubdomain;\n    }\n\n    return _forms[\"default\"].providers;\n  }, [providerToEditName, isProviderWithSubdomain]);\n\n  var handleToggleModal = function handleToggleModal() {\n    setIsOpen(function (prev) {\n      return !prev;\n    });\n  };\n\n  var handleClickEdit = function handleClickEdit(provider) {\n    if (canUpdate) {\n      setProviderToEditName(provider.name);\n      handleToggleModal();\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(values) {\n      var body;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsSubmiting(true);\n              lockApp();\n              trackUsageRef.current('willEditAuthenticationProvider');\n              body = _objectSpread(_objectSpread({}, modifiedData), {}, (0, _defineProperty2[\"default\"])({}, providerToEditName, values));\n              submitMutation.mutate({\n                providers: body\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Layout.Layout, null, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.SettingsPageTitle, {\n    name: pageTitle\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, null, /*#__PURE__*/_react[\"default\"].createElement(_Layout.HeaderLayout, {\n    title: formatMessage({\n      id: (0, _utils.getTrad)('HeaderNav.link.providers'),\n      defaultMessage: 'Providers'\n    })\n  }), isLoading || isLoadingForPermissions ? /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.LoadingIndicatorPage, null) : /*#__PURE__*/_react[\"default\"].createElement(_Layout.ContentLayout, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Table, {\n    colCount: 4,\n    rowCount: rowCount + 1\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Table.Thead, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Tr, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_VisuallyHidden.VisuallyHidden, null, formatMessage({\n    id: (0, _utils.getTrad)('Providers.image'),\n    defaultMessage: 'Image'\n  })))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('Providers.name'),\n    defaultMessage: 'Name'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('Providers.status'),\n    defaultMessage: 'Status'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_VisuallyHidden.VisuallyHidden, null, formatMessage({\n    id: (0, _utils.getTrad)('Providers.settings'),\n    defaultMessage: 'Settings'\n  })))))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Tbody, null, providers.map(function (provider) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Table.Tr, (0, _extends2[\"default\"])({\n      key: provider.name\n    }, (0, _helperPlugin.onRowClick)({\n      fn: function fn() {\n        return handleClickEdit(provider);\n      },\n      condition: canUpdate\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Table.Td, {\n      width: \"\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n      icon: provider.icon\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Table.Td, {\n      width: \"45%\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n      fontWeight: \"semiBold\",\n      textColor: \"neutral800\"\n    }, provider.name)), /*#__PURE__*/_react[\"default\"].createElement(_Table.Td, {\n      width: \"65%\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n      textColor: provider.enabled ? 'success600' : 'danger600',\n      \"data-testid\": \"enable-\".concat(provider.name)\n    }, provider.enabled ? formatMessage({\n      id: (0, _utils.getTrad)('Providers.enabled'),\n      defaultMessage: 'Enabled'\n    }) : formatMessage({\n      id: (0, _utils.getTrad)('Providers.disabled'),\n      defaultMessage: 'Disabled'\n    }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Td, _helperPlugin.stopPropagation, canUpdate && /*#__PURE__*/_react[\"default\"].createElement(_IconButton.IconButton, {\n      onClick: function onClick() {\n        return handleClickEdit(provider);\n      },\n      noBorder: true,\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Pencil[\"default\"], null),\n      label: \"Edit\"\n    })));\n  }))))), /*#__PURE__*/_react[\"default\"].createElement(_FormModal[\"default\"], {\n    initialData: modifiedData[providerToEditName],\n    isOpen: isOpen,\n    isSubmiting: isSubmiting,\n    layout: layoutToRender,\n    headerBreadcrumbs: [formatMessage({\n      id: (0, _utils.getTrad)('PopUpForm.header.edit.providers'),\n      defaultMessage: 'Edit Provider'\n    }), (0, _upperFirst[\"default\"])(providerToEditName)],\n    onToggle: handleToggleModal,\n    onSubmit: handleSubmit,\n    providerToEditName: providerToEditName\n  }));\n};\n\nexports.ProvidersPage = ProvidersPage;\n\nvar ProtectedProvidersPage = function ProtectedProvidersPage() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.CheckPagePermissions, {\n    permissions: _permissions[\"default\"].readProviders\n  }, /*#__PURE__*/_react[\"default\"].createElement(ProvidersPage, null));\n};\n\nvar _default = ProtectedProvidersPage;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}