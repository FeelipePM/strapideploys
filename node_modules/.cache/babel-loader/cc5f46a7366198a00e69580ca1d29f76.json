{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Select = require(\"@strapi/design-system/Select\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _useDataManager2 = _interopRequireDefault(require(\"../../hooks/useDataManager\"));\n\nvar _findAttribute = _interopRequireDefault(require(\"../../utils/findAttribute\"));\n\nvar _utils = require(\"../../utils\");\n\n/**\n *\n * SelectComponents\n *\n */\nvar SelectComponents = function SelectComponents(_ref) {\n  var dynamicZoneTarget = _ref.dynamicZoneTarget,\n      intlLabel = _ref.intlLabel,\n      name = _ref.name,\n      _onChange = _ref.onChange,\n      value = _ref.value;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useDataManager = (0, _useDataManager2[\"default\"])(),\n      componentsGroupedByCategory = _useDataManager.componentsGroupedByCategory,\n      modifiedData = _useDataManager.modifiedData;\n\n  var dzSchema = (0, _findAttribute[\"default\"])(modifiedData.contentType.schema.attributes, dynamicZoneTarget) || {};\n  var alreadyUsedComponents = dzSchema.components || [];\n  var filteredComponentsGroupedByCategory = Object.keys(componentsGroupedByCategory).reduce(function (acc, current) {\n    var filteredComponents = componentsGroupedByCategory[current].filter(function (_ref2) {\n      var uid = _ref2.uid;\n      return !alreadyUsedComponents.includes(uid);\n    });\n\n    if (filteredComponents.length > 0) {\n      acc[current] = filteredComponents;\n    }\n\n    return acc;\n  }, {});\n  var options = Object.entries(filteredComponentsGroupedByCategory).reduce(function (acc, current) {\n    var _current = (0, _slicedToArray2[\"default\"])(current, 2),\n        categoryName = _current[0],\n        components = _current[1];\n\n    var section = {\n      label: categoryName,\n      children: components.map(function (_ref3) {\n        var uid = _ref3.uid,\n            displayName = _ref3.schema.displayName;\n        return {\n          label: displayName,\n          value: uid\n        };\n      })\n    };\n    acc.push(section);\n    return acc;\n  }, []);\n  var displayedValue = formatMessage({\n    id: (0, _utils.getTrad)('components.SelectComponents.displayed-value'),\n    defaultMessage: '{number, plural, =0 {# components} one {# component} other {# components}} selected'\n  }, {\n    number: value.length\n  });\n  return /*#__PURE__*/_react[\"default\"].createElement(_Select.MultiSelectNested, {\n    id: \"select1\",\n    label: formatMessage(intlLabel),\n    customizeContent: function customizeContent() {\n      return displayedValue;\n    },\n    name: name,\n    onChange: function onChange(values) {\n      _onChange({\n        target: {\n          name: name,\n          value: values,\n          type: 'select-components'\n        }\n      });\n    },\n    options: options,\n    value: value || []\n  });\n};\n\nSelectComponents.propTypes = {\n  intlLabel: _propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].string.isRequired,\n    defaultMessage: _propTypes[\"default\"].string.isRequired,\n    values: _propTypes[\"default\"].object\n  }).isRequired,\n  dynamicZoneTarget: _propTypes[\"default\"].string.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  onChange: _propTypes[\"default\"].func.isRequired,\n  value: _propTypes[\"default\"].array.isRequired\n};\nvar _default = SelectComponents;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}