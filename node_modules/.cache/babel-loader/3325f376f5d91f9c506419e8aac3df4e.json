{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DynamicZone = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _reactFastCompare = _interopRequireDefault(require(\"react-fast-compare\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nvar _connect = _interopRequireDefault(require(\"./utils/connect\"));\n\nvar _select = _interopRequireDefault(require(\"./utils/select\"));\n\nvar _AddComponentButton = _interopRequireDefault(require(\"./components/AddComponentButton\"));\n\nvar _DzLabel = _interopRequireDefault(require(\"./components/DzLabel\"));\n\nvar _Component = _interopRequireDefault(require(\"./components/Component\"));\n\nvar _ComponentPicker = _interopRequireDefault(require(\"./components/ComponentPicker\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/* eslint-disable react/no-array-index-key */\nvar createCollapses = function createCollapses(arrayLength) {\n  return Array.from({\n    length: arrayLength\n  }).map(function () {\n    return {\n      isOpen: false\n    };\n  });\n};\n\nvar DynamicZone = function DynamicZone(_ref) {\n  var name = _ref.name,\n      addComponentToDynamicZone = _ref.addComponentToDynamicZone,\n      formErrors = _ref.formErrors,\n      isCreatingEntry = _ref.isCreatingEntry,\n      isFieldAllowed = _ref.isFieldAllowed,\n      isFieldReadable = _ref.isFieldReadable,\n      labelAction = _ref.labelAction,\n      moveComponentUp = _ref.moveComponentUp,\n      moveComponentDown = _ref.moveComponentDown,\n      removeComponentFromDynamicZone = _ref.removeComponentFromDynamicZone,\n      dynamicDisplayedComponents = _ref.dynamicDisplayedComponents,\n      fieldSchema = _ref.fieldSchema,\n      metadatas = _ref.metadatas;\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      shouldOpenAddedComponent = _useState4[0],\n      setShouldOpenAddedComponent = _useState4[1];\n\n  var dynamicDisplayedComponentsLength = dynamicDisplayedComponents.length;\n  var intlDescription = metadatas.description ? {\n    id: metadatas.description,\n    defaultMessage: metadatas.description\n  } : null;\n\n  var _useState5 = (0, _react.useState)(createCollapses(dynamicDisplayedComponentsLength)),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      componentCollapses = _useState6[0],\n      setComponentsCollapses = _useState6[1];\n\n  (0, _react.useEffect)(function () {\n    setComponentsCollapses(createCollapses(dynamicDisplayedComponentsLength));\n  }, [dynamicDisplayedComponentsLength]);\n  (0, _react.useEffect)(function () {\n    if (shouldOpenAddedComponent) {\n      setComponentsCollapses(function (prev) {\n        return prev.map(function (collapse, index) {\n          if (index === prev.length - 1) {\n            return _objectSpread(_objectSpread({}, collapse), {}, {\n              isOpen: true\n            });\n          }\n\n          return collapse;\n        });\n      });\n      setShouldOpenAddedComponent(false);\n    }\n  }, [shouldOpenAddedComponent]); // We cannot use the default props here\n\n  var _fieldSchema$max = fieldSchema.max,\n      max = _fieldSchema$max === void 0 ? Infinity : _fieldSchema$max,\n      _fieldSchema$min = fieldSchema.min,\n      min = _fieldSchema$min === void 0 ? -Infinity : _fieldSchema$min;\n  var dynamicZoneErrors = (0, _react.useMemo)(function () {\n    return Object.keys(formErrors).filter(function (key) {\n      return key === name;\n    }).map(function (key) {\n      return formErrors[key];\n    });\n  }, [formErrors, name]);\n  var dynamicZoneAvailableComponents = (0, _react.useMemo)(function () {\n    return fieldSchema.components || [];\n  }, [fieldSchema]);\n  var missingComponentNumber = min - dynamicDisplayedComponentsLength;\n  var hasError = dynamicZoneErrors.length > 0;\n  var hasMinError = dynamicZoneErrors.length > 0 && (0, _get[\"default\"])(dynamicZoneErrors, [0, 'id'], '').includes('min');\n  var hasMaxError = hasError && (0, _get[\"default\"])(dynamicZoneErrors, [0, 'id'], '') === 'components.Input.error.validation.max';\n  var handleAddComponent = (0, _react.useCallback)(function (componentUid) {\n    setIsOpen(false);\n    addComponentToDynamicZone(name, componentUid, hasError);\n    setShouldOpenAddedComponent(true);\n  }, [addComponentToDynamicZone, hasError, name]);\n\n  var handleClickOpenPicker = function handleClickOpenPicker() {\n    if (dynamicDisplayedComponentsLength < max) {\n      setIsOpen(function (prev) {\n        return !prev;\n      });\n    } else {\n      toggleNotification({\n        type: 'info',\n        message: {\n          id: (0, _utils.getTrad)('components.notification.info.maximum-requirement')\n        }\n      });\n    }\n  };\n\n  var handleToggleComponent = function handleToggleComponent(indexToToggle) {\n    setComponentsCollapses(function (prev) {\n      return prev.map(function (_ref2, index) {\n        var isOpen = _ref2.isOpen;\n\n        if (index === indexToToggle) {\n          return {\n            isOpen: !isOpen\n          };\n        }\n\n        return {\n          isOpen: isOpen\n        };\n      });\n    });\n  };\n\n  var handleMoveComponentDown = function handleMoveComponentDown(name, currentIndex) {\n    moveComponentDown(name, currentIndex);\n    setComponentsCollapses(function (prev) {\n      return prev.map(function (_ref3, index, refArray) {\n        var isOpen = _ref3.isOpen;\n\n        if (index === currentIndex + 1) {\n          return {\n            isOpen: refArray[currentIndex].isOpen\n          };\n        }\n\n        if (index === currentIndex) {\n          return {\n            isOpen: refArray[index + 1].isOpen\n          };\n        }\n\n        return {\n          isOpen: isOpen\n        };\n      });\n    });\n  };\n\n  var handleMoveComponentUp = function handleMoveComponentUp(name, currentIndex) {\n    moveComponentUp(name, currentIndex);\n    setComponentsCollapses(function (prev) {\n      return prev.map(function (_ref4, index, refArray) {\n        var isOpen = _ref4.isOpen;\n\n        if (index === currentIndex - 1) {\n          return {\n            isOpen: refArray[currentIndex].isOpen\n          };\n        }\n\n        if (index === currentIndex) {\n          return {\n            isOpen: refArray[index - 1].isOpen\n          };\n        }\n\n        return {\n          isOpen: isOpen\n        };\n      });\n    });\n  };\n\n  var handleRemoveComponent = function handleRemoveComponent(name, currentIndex) {\n    removeComponentFromDynamicZone(name, currentIndex);\n  };\n\n  if (!isFieldAllowed && isCreatingEntry) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.NotAllowedInput, {\n      description: intlDescription,\n      intlLabel: {\n        id: metadatas.label,\n        defaultMessage: metadatas.label\n      },\n      labelAction: labelAction,\n      name: name\n    });\n  }\n\n  if (!isFieldAllowed && !isFieldReadable && !isCreatingEntry) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.NotAllowedInput, {\n      description: intlDescription,\n      intlLabel: {\n        id: metadatas.label,\n        defaultMessage: metadatas.label\n      },\n      labelAction: labelAction,\n      name: name\n    });\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 6\n  }, dynamicDisplayedComponentsLength > 0 && /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, null, /*#__PURE__*/_react[\"default\"].createElement(_DzLabel[\"default\"], {\n    intlDescription: intlDescription,\n    label: metadatas.label,\n    labelAction: labelAction,\n    name: name,\n    numberOfComponents: dynamicDisplayedComponentsLength,\n    required: fieldSchema.required || false\n  }), dynamicDisplayedComponents.map(function (componentUid, index) {\n    var _componentCollapses$i;\n\n    var showDownIcon = isFieldAllowed && dynamicDisplayedComponentsLength > 0 && index < dynamicDisplayedComponentsLength - 1;\n    var showUpIcon = isFieldAllowed && dynamicDisplayedComponentsLength > 0 && index > 0;\n    var isOpen = ((_componentCollapses$i = componentCollapses[index]) === null || _componentCollapses$i === void 0 ? void 0 : _componentCollapses$i.isOpen) || false;\n    return /*#__PURE__*/_react[\"default\"].createElement(_Component[\"default\"], {\n      componentUid: componentUid,\n      formErrors: formErrors,\n      key: index,\n      index: index,\n      isOpen: isOpen,\n      isFieldAllowed: isFieldAllowed,\n      moveComponentDown: handleMoveComponentDown,\n      moveComponentUp: handleMoveComponentUp,\n      onToggle: handleToggleComponent,\n      name: name,\n      removeComponentFromDynamicZone: handleRemoveComponent,\n      showDownIcon: showDownIcon,\n      showUpIcon: showUpIcon\n    });\n  })), /*#__PURE__*/_react[\"default\"].createElement(_AddComponentButton[\"default\"], {\n    hasError: hasError,\n    hasMaxError: hasMaxError,\n    hasMinError: hasMinError,\n    isDisabled: !isFieldAllowed,\n    label: metadatas.label,\n    missingComponentNumber: missingComponentNumber,\n    isOpen: isOpen,\n    name: name,\n    onClick: handleClickOpenPicker\n  }), /*#__PURE__*/_react[\"default\"].createElement(_ComponentPicker[\"default\"], {\n    isOpen: isOpen,\n    components: dynamicZoneAvailableComponents,\n    onClickAddComponent: handleAddComponent\n  }));\n};\n\nexports.DynamicZone = DynamicZone;\nDynamicZone.defaultProps = {\n  dynamicDisplayedComponents: [],\n  fieldSchema: {\n    max: Infinity,\n    min: -Infinity\n  },\n  labelAction: null\n};\nDynamicZone.propTypes = {\n  addComponentToDynamicZone: _propTypes[\"default\"].func.isRequired,\n  dynamicDisplayedComponents: _propTypes[\"default\"].array,\n  fieldSchema: _propTypes[\"default\"].shape({\n    components: _propTypes[\"default\"].array.isRequired,\n    max: _propTypes[\"default\"].number,\n    min: _propTypes[\"default\"].number,\n    required: _propTypes[\"default\"].bool\n  }),\n  formErrors: _propTypes[\"default\"].object.isRequired,\n  isCreatingEntry: _propTypes[\"default\"].bool.isRequired,\n  isFieldAllowed: _propTypes[\"default\"].bool.isRequired,\n  isFieldReadable: _propTypes[\"default\"].bool.isRequired,\n  labelAction: _propTypes[\"default\"].element,\n  metadatas: _propTypes[\"default\"].shape({\n    description: _propTypes[\"default\"].string,\n    label: _propTypes[\"default\"].string\n  }).isRequired,\n  moveComponentUp: _propTypes[\"default\"].func.isRequired,\n  moveComponentDown: _propTypes[\"default\"].func.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  removeComponentFromDynamicZone: _propTypes[\"default\"].func.isRequired\n};\nvar Memoized = /*#__PURE__*/(0, _react.memo)(DynamicZone, _reactFastCompare[\"default\"]);\n\nvar _default = (0, _connect[\"default\"])(Memoized, _select[\"default\"]);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}