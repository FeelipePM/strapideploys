{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _getRelationType = _interopRequireDefault(require(\"../../../utils/getRelationType\"));\n\nvar canEditContentType = function canEditContentType(data, modifiedData) {\n  var kind = (0, _get[\"default\"])(data, ['contentType', 'schema', 'kind'], ''); // if kind isn't modified or content type is a single type, there is no need to check attributes.\n\n  if (kind === 'singleType' || kind === modifiedData.kind) {\n    return true;\n  }\n\n  var contentTypeAttributes = (0, _get[\"default\"])(data, ['contentType', 'schema', 'attributes'], []);\n  var relationAttributes = contentTypeAttributes.filter(function (_ref) {\n    var relation = _ref.relation,\n        type = _ref.type,\n        targetAttribute = _ref.targetAttribute;\n    var relationType = (0, _getRelationType[\"default\"])(relation, targetAttribute);\n    return type === 'relation' && !['oneWay', 'manyWay'].includes(relationType);\n  });\n  return relationAttributes.length === 0;\n};\n\nvar _default = canEditContentType;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}