{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.crudInitialState = void 0;\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _constants = require(\"./constants\");\n\n/* eslint-disable consistent-return */\n// NOTE: instead of creating a shared reducer here, we could also create a hook\n// that returns the dispatch and the state, however it will mess with the linter\n// and force us to either disable the linter for the hooks dependencies array rule or\n// require us to add the dispatch to the array wich is not wanted. This refacto does not require us to\n// to do any of this.\nvar crudInitialState = {\n  componentsDataStructure: {},\n  contentTypeDataStructure: {},\n  isLoading: true,\n  data: null,\n  status: 'resolved'\n};\nexports.crudInitialState = crudInitialState;\n\nvar crudReducer = function crudReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : crudInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return (0, _immer[\"default\"])(state, function (draftState) {\n    switch (action.type) {\n      case _constants.GET_DATA:\n        {\n          draftState.isLoading = true;\n          draftState.data = null;\n          break;\n        }\n\n      case _constants.GET_DATA_SUCCEEDED:\n        {\n          draftState.isLoading = false;\n          draftState.data = action.data;\n          break;\n        }\n\n      case _constants.INIT_FORM:\n        {\n          if (action.data) {\n            draftState.isLoading = false;\n            draftState.data = action.data;\n            break;\n          }\n\n          draftState.isLoading = false;\n          draftState.data = state.contentTypeDataStructure;\n          break;\n        }\n\n      case _constants.RESET_PROPS:\n        {\n          return crudInitialState;\n        }\n\n      case _constants.SET_DATA_STRUCTURES:\n        {\n          draftState.componentsDataStructure = action.componentsDataStructure;\n          draftState.contentTypeDataStructure = action.contentTypeDataStructure;\n          break;\n        }\n\n      case _constants.SET_STATUS:\n        {\n          draftState.status = action.status;\n          break;\n        }\n\n      case _constants.SUBMIT_SUCCEEDED:\n        {\n          draftState.data = action.data;\n          break;\n        }\n\n      default:\n        return draftState;\n    }\n  });\n};\n\nvar _default = crudReducer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}