{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _utils = require(\"../../../core/utils\");\n\nvar _formatLayouts = _interopRequireDefault(require(\"./utils/formatLayouts\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar _selectors = require(\"../../pages/App/selectors\");\n\nvar _utils2 = require(\"../../utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar useFetchContentTypeLayout = function useFetchContentTypeLayout(contentTypeUID) {\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      error = _useReducer2$.error,\n      isLoading = _useReducer2$.isLoading,\n      layout = _useReducer2$.layout,\n      layouts = _useReducer2$.layouts,\n      dispatch = _useReducer2[1];\n\n  var schemasSelector = (0, _react.useMemo)(_selectors.makeSelectModelAndComponentSchemas, []);\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return schemasSelector(state);\n  }, _reactRedux.shallowEqual),\n      schemas = _useSelector.schemas;\n\n  var isMounted = (0, _react.useRef)(true);\n  var getData = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(uid, source) {\n      var endPoint, _yield$axiosInstance$, data;\n\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!layouts[uid]) {\n                _context.next = 3;\n                break;\n              }\n\n              dispatch({\n                type: 'SET_LAYOUT_FROM_STATE',\n                uid: uid\n              });\n              return _context.abrupt(\"return\");\n\n            case 3:\n              dispatch({\n                type: 'GET_DATA'\n              });\n              _context.prev = 4;\n              endPoint = (0, _utils2.getRequestUrl)(\"content-types/\".concat(uid, \"/configuration\"));\n              _context.next = 8;\n              return _utils.axiosInstance.get(endPoint, {\n                cancelToken: source.token\n              });\n\n            case 8:\n              _yield$axiosInstance$ = _context.sent;\n              data = _yield$axiosInstance$.data.data;\n              dispatch({\n                type: 'GET_DATA_SUCCEEDED',\n                data: (0, _formatLayouts[\"default\"])(data, schemas)\n              });\n              _context.next = 19;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](4);\n\n              if (!_axios[\"default\"].isCancel(_context.t0)) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 17:\n              if (isMounted.current) {\n                console.error(_context.t0);\n              }\n\n              if (isMounted.current) {\n                dispatch({\n                  type: 'GET_DATA_ERROR',\n                  error: _context.t0\n                });\n              }\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 13]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [layouts, schemas]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  (0, _react.useEffect)(function () {\n    var CancelToken = _axios[\"default\"].CancelToken;\n    var source = CancelToken.source();\n    getData(contentTypeUID, source);\n    return function () {\n      source.cancel('Operation canceled by the user.');\n    };\n  }, [contentTypeUID, getData]);\n  var updateLayout = (0, _react.useCallback)(function (newLayout) {\n    dispatch({\n      type: 'UPDATE_LAYOUT',\n      newLayout: (0, _formatLayouts[\"default\"])({\n        contentType: newLayout,\n        components: {}\n      }, schemas)\n    });\n  }, [schemas]);\n  return {\n    error: error,\n    isLoading: isLoading,\n    layout: layout,\n    updateLayout: updateLayout\n  };\n};\n\nvar _default = useFetchContentTypeLayout;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}