{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _BaseCheckbox = require(\"@strapi/design-system/BaseCheckbox\");\n\nvar _Checkbox = require(\"@strapi/design-system/Checkbox\");\n\nvar _upperFirst = _interopRequireDefault(require(\"lodash/upperFirst\"));\n\nvar EventRow = function EventRow(_ref) {\n  var disabledEvents = _ref.disabledEvents,\n      name = _ref.name,\n      events = _ref.events,\n      inputValue = _ref.inputValue,\n      handleChange = _ref.handleChange,\n      handleChangeAll = _ref.handleChangeAll;\n  var enabledCheckboxes = events.filter(function (event) {\n    return !disabledEvents.includes(event);\n  });\n  var areAllCheckboxesSelected = inputValue.length === enabledCheckboxes.length;\n  var hasSomeCheckboxSelected = inputValue.length > 0;\n\n  var onChangeAll = function onChangeAll(_ref2) {\n    var name = _ref2.target.name;\n    var valueToSet = !areAllCheckboxesSelected;\n    handleChangeAll({\n      target: {\n        name: name,\n        value: valueToSet\n      }\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(\"tr\", null, /*#__PURE__*/_react[\"default\"].createElement(\"td\", null, /*#__PURE__*/_react[\"default\"].createElement(_Checkbox.Checkbox, {\n    indeterminate: hasSomeCheckboxSelected && !areAllCheckboxesSelected,\n    \"aria-label\": \"Select all entries\",\n    name: name,\n    onChange: onChangeAll,\n    value: areAllCheckboxesSelected\n  }, (0, _upperFirst[\"default\"])(name))), events.map(function (event) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"td\", {\n      key: event\n    }, /*#__PURE__*/_react[\"default\"].createElement(_BaseCheckbox.BaseCheckbox, {\n      disabled: disabledEvents.includes(event),\n      \"aria-label\": event,\n      name: event,\n      value: inputValue.includes(event),\n      onValueChange: function onValueChange(value) {\n        return handleChange({\n          target: {\n            name: event,\n            value: value\n          }\n        });\n      }\n    }));\n  }));\n};\n\nEventRow.defaultProps = {\n  disabledEvents: [],\n  events: [],\n  inputValue: [],\n  handleChange: function handleChange() {},\n  handleChangeAll: function handleChangeAll() {}\n};\nEventRow.propTypes = {\n  disabledEvents: _propTypes[\"default\"].array,\n  events: _propTypes[\"default\"].array,\n  inputValue: _propTypes[\"default\"].array,\n  handleChange: _propTypes[\"default\"].func,\n  handleChangeAll: _propTypes[\"default\"].func,\n  name: _propTypes[\"default\"].string.isRequired\n};\nvar _default = EventRow;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}