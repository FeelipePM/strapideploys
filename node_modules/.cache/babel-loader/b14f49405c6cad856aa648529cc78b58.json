{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nfunction useSelect(_ref) {\n  var isUserAllowedToEditField = _ref.isUserAllowedToEditField,\n      isUserAllowedToReadField = _ref.isUserAllowedToReadField,\n      name = _ref.name;\n\n  var _useCMEditViewDataMan = (0, _helperPlugin.useCMEditViewDataManager)(),\n      isCreatingEntry = _useCMEditViewDataMan.isCreatingEntry,\n      createActionAllowedFields = _useCMEditViewDataMan.createActionAllowedFields,\n      readActionAllowedFields = _useCMEditViewDataMan.readActionAllowedFields,\n      updateActionAllowedFields = _useCMEditViewDataMan.updateActionAllowedFields;\n\n  var isFieldAllowed = (0, _react.useMemo)(function () {\n    if (isUserAllowedToEditField === true) {\n      return true;\n    }\n\n    var allowedFields = isCreatingEntry ? createActionAllowedFields : updateActionAllowedFields;\n    return allowedFields.includes(name);\n  }, [isCreatingEntry, createActionAllowedFields, name, isUserAllowedToEditField, updateActionAllowedFields]);\n  var isFieldReadable = (0, _react.useMemo)(function () {\n    if (isUserAllowedToReadField) {\n      return true;\n    }\n\n    var allowedFields = isCreatingEntry ? [] : readActionAllowedFields;\n    return allowedFields.includes(name);\n  }, [isCreatingEntry, isUserAllowedToReadField, name, readActionAllowedFields]);\n  return {\n    isCreatingEntry: isCreatingEntry,\n    isFieldAllowed: isFieldAllowed,\n    isFieldReadable: isFieldReadable\n  };\n}\n\nvar _default = useSelect;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}