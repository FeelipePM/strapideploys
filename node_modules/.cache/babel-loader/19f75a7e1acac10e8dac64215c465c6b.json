{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SettingsPage = SettingsPage;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactHelmet = require(\"react-helmet\");\n\nvar _hooks = require(\"../../hooks\");\n\nvar _utils = require(\"../../utils\");\n\nvar _ApplicationInfosPage = _interopRequireDefault(require(\"./pages/ApplicationInfosPage\"));\n\nvar _utils2 = require(\"./utils\");\n\nvar _SettingsNav = _interopRequireDefault(require(\"./components/SettingsNav\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n *\n * SettingsPage\n *\n */\n// NOTE TO PLUGINS DEVELOPERS:\n// If you modify this file you also need to update the documentation accordingly\n// Here's the file: strapi/docs/3.0.0-beta.x/plugin-development/frontend-settings-api.md\n// IF THE DOC IS NOT UPDATED THE PULL REQUEST WILL NOT BE MERGED\nfunction SettingsPage() {\n  var _useParams = (0, _reactRouterDom.useParams)(),\n      settingId = _useParams.settingId;\n\n  var _useStrapiApp = (0, _helperPlugin.useStrapiApp)(),\n      settings = _useStrapiApp.settings;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useSettingsMenu = (0, _hooks.useSettingsMenu)(),\n      isLoading = _useSettingsMenu.isLoading,\n      menu = _useSettingsMenu.menu; // Creates the admin routes\n\n\n  var adminRoutes = (0, _react.useMemo)(function () {\n    return (0, _utils.makeUniqueRoutes)(_utils2.routes.map(function (_ref) {\n      var to = _ref.to,\n          Component = _ref.Component,\n          exact = _ref.exact;\n      return (0, _utils.createRoute)(Component, to, exact);\n    }));\n  }, []);\n  var pluginsRoutes = (0, _utils2.createSectionsRoutes)(settings); // Since the useSettingsMenu hook can make API calls in order to check the links permissions\n  // We need to add a loading state to prevent redirecting the user while permissions are being checked\n\n  if (isLoading) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.LoadingIndicatorPage, null);\n  }\n\n  if (!settingId) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Redirect, {\n      to: \"/settings/application-infos\"\n    });\n  }\n\n  var settingTitle = formatMessage({\n    id: 'app.components.LeftMenuLinkContainer.settings',\n    defaultMessage: 'Settings'\n  });\n  return /*#__PURE__*/_react[\"default\"].createElement(_Layout.Layout, {\n    sideNav: /*#__PURE__*/_react[\"default\"].createElement(_SettingsNav[\"default\"], {\n      menu: menu\n    })\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactHelmet.Helmet, {\n    title: settingTitle\n  }), /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Switch, null, /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Route, {\n    path: \"/settings/application-infos\",\n    component: _ApplicationInfosPage[\"default\"],\n    exact: true\n  }), adminRoutes, pluginsRoutes));\n}\n\nvar _default = /*#__PURE__*/(0, _react.memo)(SettingsPage);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}