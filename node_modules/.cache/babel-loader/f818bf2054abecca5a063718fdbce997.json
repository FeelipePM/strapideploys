{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateLinks = exports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _qs = require(\"qs\");\n\nvar generateLinks = function generateLinks(links, type) {\n  var configurations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return links.filter(function (link) {\n    return link.isDisplayed;\n  }).map(function (link) {\n    var collectionTypesPermissions = [{\n      action: 'plugin::content-manager.explorer.create',\n      subject: link.uid\n    }, {\n      action: 'plugin::content-manager.explorer.read',\n      subject: link.uid\n    }];\n    var singleTypesPermissions = [{\n      action: 'plugin::content-manager.explorer.read',\n      subject: link.uid\n    }];\n    var permissions = type === 'collectionTypes' ? collectionTypesPermissions : singleTypesPermissions;\n    var currentContentTypeConfig = configurations.find(function (_ref) {\n      var uid = _ref.uid;\n      return uid === link.uid;\n    });\n    var search = null;\n\n    if (currentContentTypeConfig) {\n      var searchParams = {\n        page: 1,\n        pageSize: currentContentTypeConfig.settings.pageSize,\n        sort: \"\".concat(currentContentTypeConfig.settings.defaultSortBy, \":\").concat(currentContentTypeConfig.settings.defaultSortOrder)\n      };\n      search = (0, _qs.stringify)(searchParams, {\n        encode: false\n      });\n    }\n\n    return {\n      permissions: permissions,\n      search: search,\n      kind: link.kind,\n      title: link.info.displayName,\n      to: \"/content-manager/\".concat(link.kind, \"/\").concat(link.uid),\n      uid: link.uid,\n      // Used for the list item key in the helper plugin\n      name: link.uid,\n      isDisplayed: link.isDisplayed\n    };\n  });\n};\n\nexports.generateLinks = generateLinks;\n\nvar generateModelsLinks = function generateModelsLinks(models, modelsConfigurations) {\n  var _chain$groupBy$map$so = (0, _lodash.chain)(models).groupBy('kind').map(function (value, key) {\n    return {\n      name: key,\n      links: value\n    };\n  }).sortBy('name').value(),\n      _chain$groupBy$map$so2 = (0, _slicedToArray2[\"default\"])(_chain$groupBy$map$so, 2),\n      collectionTypes = _chain$groupBy$map$so2[0],\n      singleTypes = _chain$groupBy$map$so2[1];\n\n  return {\n    collectionTypesSectionLinks: generateLinks((0, _lodash.get)(collectionTypes, 'links', []), 'collectionTypes', modelsConfigurations),\n    singleTypesSectionLinks: generateLinks((0, _lodash.get)(singleTypes, 'links', []), 'singleTypes')\n  };\n};\n\nvar _default = generateModelsLinks;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}