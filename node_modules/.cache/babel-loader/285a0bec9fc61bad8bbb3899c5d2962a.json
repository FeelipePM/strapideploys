{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _IconButton = require(\"@strapi/design-system/IconButton\");\n\nvar _Duplicate = _interopRequireDefault(require(\"@strapi/icons/Duplicate\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactCopyToClipboard = require(\"react-copy-to-clipboard\");\n\nvar _Key = _interopRequireDefault(require(\"@strapi/icons/Key\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar HeaderContentBox = function HeaderContentBox(_ref) {\n  var apiToken = _ref.apiToken;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var trackUsageRef = (0, _react.useRef)(trackUsage);\n  return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.ContentBox, {\n    endAction: apiToken && /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n      style: {\n        alignSelf: 'start'\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_reactCopyToClipboard.CopyToClipboard, {\n      onCopy: function onCopy() {\n        trackUsageRef.current('didCopyTokenKey');\n        toggleNotification({\n          type: 'success',\n          message: {\n            id: 'Settings.apiTokens.notification.copied'\n          }\n        });\n      },\n      text: apiToken\n    }, /*#__PURE__*/_react[\"default\"].createElement(_IconButton.IconButton, {\n      label: formatMessage({\n        id: 'app.component.CopyToClipboard.label',\n        defaultMessage: 'Copy to clipboard'\n      }),\n      noBorder: true,\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Duplicate[\"default\"], null),\n      style: {\n        padding: 0,\n        height: '1rem'\n      }\n    }))),\n    title: apiToken || formatMessage({\n      id: 'Settings.apiTokens.copy.editTitle',\n      defaultMessage: 'This token isn’t accessible anymore.'\n    }),\n    subtitle: apiToken ? formatMessage({\n      id: 'Settings.apiTokens.copy.lastWarning',\n      defaultMessage: 'Make sure to copy this token, you won’t be able to see it again!'\n    }) : formatMessage({\n      id: 'Settings.apiTokens.copy.editMessage',\n      defaultMessage: 'For security reasons, you can only see your token once.'\n    }),\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_Key[\"default\"], null),\n    iconBackground: \"neutral100\"\n  });\n};\n\nHeaderContentBox.defaultProps = {\n  apiToken: null\n};\nHeaderContentBox.propTypes = {\n  apiToken: _propTypes[\"default\"].string\n};\nvar _default = HeaderContentBox;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}