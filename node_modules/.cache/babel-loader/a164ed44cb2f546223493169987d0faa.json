{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _Main = require(\"@strapi/design-system/Main\");\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _LinkButton = require(\"@strapi/design-system/LinkButton\");\n\nvar _Plus = _interopRequireDefault(require(\"@strapi/icons/Plus\"));\n\nvar _reactQuery = require(\"react-query\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _utils = require(\"../../../../../core/utils\");\n\nvar _permissions = _interopRequireDefault(require(\"../../../../../permissions\"));\n\nvar _tableHeaders = _interopRequireDefault(require(\"./utils/tableHeaders\"));\n\nvar _DynamicTable = _interopRequireDefault(require(\"./DynamicTable\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ApiTokenListView = function ApiTokenListView() {\n  (0, _helperPlugin.useFocusWhenNavigate)();\n  var queryClient = (0, _reactQuery.useQueryClient)();\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useRBAC = (0, _helperPlugin.useRBAC)(_permissions[\"default\"].settings['api-tokens']),\n      _useRBAC$allowedActio = _useRBAC.allowedActions,\n      canCreate = _useRBAC$allowedActio.canCreate,\n      canDelete = _useRBAC$allowedActio.canDelete,\n      canUpdate = _useRBAC$allowedActio.canUpdate,\n      canRead = _useRBAC$allowedActio.canRead;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var _useGuidedTour = (0, _helperPlugin.useGuidedTour)(),\n      startSection = _useGuidedTour.startSection;\n\n  var startSectionRef = (0, _react.useRef)(startSection);\n  (0, _react.useEffect)(function () {\n    if (startSectionRef.current) {\n      startSectionRef.current('apiTokens');\n    }\n  }, []);\n  (0, _react.useEffect)(function () {\n    push({\n      search: _qs[\"default\"].stringify({\n        sort: 'name:ASC'\n      }, {\n        encode: false\n      })\n    });\n  }, [push]);\n\n  var _useQuery = (0, _reactQuery.useQuery)(['api-tokens'], /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var _yield$axiosInstance$, data;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            trackUsage('willAccessTokenList');\n            _context.next = 3;\n            return _utils.axiosInstance.get(\"/admin/api-tokens\");\n\n          case 3:\n            _yield$axiosInstance$ = _context.sent;\n            data = _yield$axiosInstance$.data.data;\n            trackUsage('didAccessTokenList', {\n              number: data.length\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), {\n    enabled: canRead,\n    onError: function onError() {\n      toggleNotification({\n        type: 'warning',\n        message: {\n          id: 'notification.error',\n          defaultMessage: 'An error occured'\n        }\n      });\n    }\n  }),\n      apiTokens = _useQuery.data,\n      status = _useQuery.status,\n      isFetching = _useQuery.isFetching;\n\n  var isLoading = canRead && (status !== 'success' && status !== 'error' || status === 'success' && isFetching);\n  var deleteMutation = (0, _reactQuery.useMutation)( /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(id) {\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _utils.axiosInstance[\"delete\"](\"/admin/api-tokens/\".concat(id));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), {\n    onSuccess: function () {\n      var _onSuccess = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return queryClient.invalidateQueries(['api-tokens']);\n\n              case 2:\n                trackUsage('didDeleteToken');\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function onSuccess() {\n        return _onSuccess.apply(this, arguments);\n      }\n\n      return onSuccess;\n    }(),\n    onError: function onError(err) {\n      var _err$response, _err$response$data;\n\n      if (err !== null && err !== void 0 && (_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.data) {\n        toggleNotification({\n          type: 'warning',\n          message: err.response.data.data\n        });\n      } else {\n        toggleNotification({\n          type: 'warning',\n          message: {\n            id: 'notification.error',\n            defaultMessage: 'An error occured'\n          }\n        });\n      }\n    }\n  });\n  var shouldDisplayDynamicTable = canRead && apiTokens;\n  var shouldDisplayNoContent = canRead && !apiTokens && !canCreate;\n  var shouldDisplayNoContentWithCreationButton = canRead && !apiTokens && canCreate;\n  return /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, {\n    \"aria-busy\": isLoading\n  }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.SettingsPageTitle, {\n    name: \"API Tokens\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Layout.HeaderLayout, {\n    title: formatMessage({\n      id: 'Settings.apiTokens.title',\n      defaultMessage: 'API Tokens'\n    }),\n    subtitle: formatMessage({\n      id: 'Settings.apiTokens.description',\n      defaultMessage: 'List of generated tokens to consume the API'\n    }),\n    primaryAction: canCreate ? /*#__PURE__*/_react[\"default\"].createElement(_LinkButton.LinkButton, {\n      \"data-testid\": \"create-api-token-button\",\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null),\n      size: \"L\",\n      onClick: function onClick() {\n        return trackUsage('willAddTokenFromList');\n      },\n      to: \"/settings/api-tokens/create\"\n    }, formatMessage({\n      id: 'Settings.apiTokens.create',\n      defaultMessage: 'Create new API Token'\n    })) : undefined\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Layout.ContentLayout, null, !canRead && /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.NoPermissions, null), shouldDisplayDynamicTable && /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.DynamicTable, {\n    headers: _tableHeaders[\"default\"],\n    contentType: \"api-tokens\",\n    rows: apiTokens,\n    withBulkActions: canDelete || canUpdate,\n    isLoading: isLoading,\n    onConfirmDelete: function onConfirmDelete(id) {\n      return deleteMutation.mutateAsync(id);\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_DynamicTable[\"default\"], {\n    canDelete: canDelete,\n    canUpdate: canUpdate,\n    rows: apiTokens,\n    withBulkActions: canDelete || canUpdate\n  })), shouldDisplayNoContentWithCreationButton && /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.NoContent, {\n    content: {\n      id: 'Settings.apiTokens.addFirstToken',\n      defaultMessage: 'Add your first API Token'\n    },\n    action: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      variant: \"secondary\",\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null)\n    }, formatMessage({\n      id: 'Settings.apiTokens.addNewToken',\n      defaultMessage: 'Add new API Token'\n    }))\n  }), shouldDisplayNoContent && /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.NoContent, {\n    content: {\n      id: 'Settings.apiTokens.emptyStateLayout',\n      defaultMessage: 'You don’t have any content yet...'\n    }\n  })));\n};\n\nvar _default = ApiTokenListView;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}