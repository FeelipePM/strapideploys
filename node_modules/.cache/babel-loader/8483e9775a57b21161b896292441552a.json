{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _set = _interopRequireDefault(require(\"lodash/set\"));\n\nvar initialState = {\n  webhooks: [],\n  webhooksToDelete: [],\n  webhookToDelete: null,\n  loadingWebhooks: true\n};\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (draftState) {\n      switch (action.type) {\n        case 'GET_DATA_SUCCEEDED':\n          {\n            draftState.webhooks = action.data;\n            draftState.loadingWebhooks = false;\n            break;\n          }\n\n        case 'TOGGLE_LOADING':\n          {\n            draftState.loadingWebhooks = !state.loadingWebhooks;\n            break;\n          }\n\n        case 'SET_WEBHOOK_ENABLED':\n          {\n            (0, _set[\"default\"])(draftState, ['webhooks'].concat((0, _toConsumableArray2[\"default\"])(action.keys)), action.value);\n            break;\n          }\n\n        case 'SET_WEBHOOK_TO_DELETE':\n          {\n            draftState.webhookToDelete = action.id;\n            break;\n          }\n\n        case 'SET_WEBHOOKS_TO_DELETE':\n          {\n            if (action.value) {\n              draftState.webhooksToDelete.push(action.id);\n            } else {\n              draftState.webhooksToDelete = state.webhooksToDelete.filter(function (id) {\n                return id !== action.id;\n              });\n            }\n\n            break;\n          }\n\n        case 'SET_ALL_WEBHOOKS_TO_DELETE':\n          {\n            if (state.webhooksToDelete.length === 0) {\n              draftState.webhooksToDelete = state.webhooks.map(function (webhook) {\n                return webhook.id;\n              });\n            } else {\n              draftState.webhooksToDelete = [];\n            }\n\n            break;\n          }\n\n        case 'WEBHOOKS_DELETED':\n          {\n            draftState.webhooks = state.webhooks.filter(function (webhook) {\n              return !state.webhooksToDelete.includes(webhook.id);\n            });\n            draftState.webhooksToDelete = [];\n            break;\n          }\n\n        case 'WEBHOOK_DELETED':\n          {\n            draftState.webhooks = state.webhooks.filter(function (_, index) {\n              return index !== action.index;\n            });\n            draftState.webhookToDelete = null;\n            break;\n          }\n\n        default:\n          return draftState;\n      }\n    })\n  );\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}