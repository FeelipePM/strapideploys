{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Changes all the conditions leaf when the properties are all falsy\n * @param {object} obj the modifiedData state\n * @returns {object} the mutated modifiedData\n */\nvar updateConditionsToFalse = function updateConditionsToFalse(obj) {\n  return Object.keys(obj).reduce(function (acc, current) {\n    var currentValue = obj[current];\n\n    if ((0, _lodash.isObject)(currentValue) && !(0, _lodash.has)(currentValue, 'conditions')) {\n      return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2[\"default\"])({}, current, updateConditionsToFalse(currentValue)));\n    }\n\n    if ((0, _lodash.isObject)(currentValue) && (0, _lodash.has)(currentValue, 'conditions')) {\n      var isActionEnabled = (0, _utils.createArrayOfValues)((0, _lodash.omit)(currentValue, 'conditions')).some(function (val) {\n        return val;\n      });\n\n      if (!isActionEnabled) {\n        var updatedConditions = Object.keys(currentValue.conditions).reduce(function (acc1, current) {\n          acc1[current] = false;\n          return acc1;\n        }, {});\n        return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2[\"default\"])({}, current, _objectSpread(_objectSpread({}, currentValue), {}, {\n          conditions: updatedConditions\n        })));\n      }\n    }\n\n    acc[current] = currentValue;\n    return acc;\n  }, {});\n};\n\nvar _default = updateConditionsToFalse;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}