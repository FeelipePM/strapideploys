{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDnd = require(\"react-dnd\");\n\nvar _reactDndHtml5Backend = require(\"react-dnd-html5-backend\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _Pencil = _interopRequireDefault(require(\"@strapi/icons/Pencil\"));\n\nvar _Cross = _interopRequireDefault(require(\"@strapi/icons/Cross\"));\n\nvar _Drag = _interopRequireDefault(require(\"@strapi/icons/Drag\"));\n\nvar _CardPreview = _interopRequireDefault(require(\"./CardPreview\"));\n\nvar _ellipsisCardTitle = _interopRequireDefault(require(\"../utils/ellipsisCardTitle\"));\n\nvar _utils = require(\"../../../utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ActionButton = /*#__PURE__*/_styledComponents[\"default\"].button.withConfig({\n  displayName: \"DraggableCard__ActionButton\",\n  componentId: \"sc-gn1l5y-0\"\n})([\"display:flex;align-items:center;height:\", \";&:last-child{padding:0 \", \";}\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.spaces[7];\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.spaces[3];\n});\n\nvar DragButton = /*#__PURE__*/(0, _styledComponents[\"default\"])(ActionButton).withConfig({\n  displayName: \"DraggableCard__DragButton\",\n  componentId: \"sc-gn1l5y-1\"\n})([\"padding:0 \", \";border-right:1px solid \", \";cursor:all-scroll;svg{width:\", \"rem;height:\", \"rem;}\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.spaces[3];\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.colors.neutral150;\n}, 12 / 16, 12 / 16);\nvar FieldContainer = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Flex.Flex).withConfig({\n  displayName: \"DraggableCard__FieldContainer\",\n  componentId: \"sc-gn1l5y-2\"\n})([\"max-height:\", \"rem;cursor:pointer;svg{width:\", \"rem;height:\", \"rem;path{fill:\", \";}}&:hover{background-color:\", \";border-color:\", \";svg{path{fill:\", \";}}\", \"{color:\", \";}\", \"{border-right:1px solid \", \";}}\"], 32 / 16, 10 / 16, 10 / 16, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.colors.neutral600;\n}, function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.colors.primary100;\n}, function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.colors.primary200;\n}, function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.colors.primary600;\n}, _Typography.Typography, function (_ref9) {\n  var theme = _ref9.theme;\n  return theme.colors.primary600;\n}, DragButton, function (_ref10) {\n  var theme = _ref10.theme;\n  return theme.colors.primary200;\n});\nvar FieldWrapper = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Box.Box).withConfig({\n  displayName: \"DraggableCard__FieldWrapper\",\n  componentId: \"sc-gn1l5y-3\"\n})([\"&:last-child{padding-right:\", \";}\"], function (_ref11) {\n  var theme = _ref11.theme;\n  return theme.spaces[3];\n});\n\nvar DraggableCard = function DraggableCard(_ref12) {\n  var index = _ref12.index,\n      isDraggingSibling = _ref12.isDraggingSibling,\n      labelField = _ref12.labelField,\n      onClickEditField = _ref12.onClickEditField,\n      onMoveField = _ref12.onMoveField,\n      onRemoveField = _ref12.onRemoveField,\n      name = _ref12.name,\n      setIsDraggingSibling = _ref12.setIsDraggingSibling;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var dragRef = (0, _react.useRef)(null);\n  var dropRef = (0, _react.useRef)(null);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      forceRerenderAfterDnd = _useState2[1];\n\n  var editButtonRef = (0, _react.useRef)();\n  var cardEllipsisTitle = (0, _ellipsisCardTitle[\"default\"])(labelField);\n\n  var handleClickEditRow = function handleClickEditRow() {\n    if (editButtonRef.current) {\n      editButtonRef.current.click();\n    }\n  };\n\n  var _useDrop = (0, _reactDnd.useDrop)({\n    accept: _utils.ItemTypes.FIELD,\n    hover: function hover(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n\n      var dragIndex = item.index;\n      var hoverIndex = index; // Don't replace items with themselves\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      } // Determine rectangle on screen\n\n\n      // Determine rectangle on screen\n      var hoverBoundingRect = dropRef.current.getBoundingClientRect(); // Get vertical middle\n\n      // Get vertical middle\n      var hoverMiddleX = (hoverBoundingRect.right - hoverBoundingRect.left) / 2; // Determine mouse position\n\n      // Determine mouse position\n      var clientOffset = monitor.getClientOffset(); // Get pixels to the top\n\n      // Get pixels to the top\n      var hoverClientX = clientOffset.x - hoverBoundingRect.left; // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex > hoverIndex && hoverClientX > hoverMiddleX) {\n        return;\n      } // Dragging upwards\n\n\n      // Dragging upwards\n      if (dragIndex < hoverIndex && hoverClientX < hoverMiddleX) {\n        return;\n      }\n\n      onMoveField(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n  }),\n      _useDrop2 = (0, _slicedToArray2[\"default\"])(_useDrop, 2),\n      drop = _useDrop2[1];\n\n  var _useDrag = (0, _reactDnd.useDrag)({\n    type: _utils.ItemTypes.FIELD,\n    item: function item() {\n      return {\n        index: index,\n        labelField: labelField,\n        name: name\n      };\n    },\n    collect: function collect(monitor) {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    },\n    end: function end() {\n      setIsDraggingSibling(false);\n    }\n  }),\n      _useDrag2 = (0, _slicedToArray2[\"default\"])(_useDrag, 3),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1],\n      preview = _useDrag2[2];\n\n  (0, _react.useEffect)(function () {\n    preview((0, _reactDndHtml5Backend.getEmptyImage)(), {\n      captureDraggingState: false\n    });\n  }, [preview]);\n  (0, _react.useEffect)(function () {\n    if (isDragging) {\n      setIsDraggingSibling(true);\n    }\n  }, [isDragging, setIsDraggingSibling]); // Effect in order to force a rerender after reordering the components\n  // Since we are removing the Accordion when doing the DnD  we are losing the dragRef, therefore the replaced element cannot be dragged\n  // anymore, this hack forces a rerender in order to apply the dragRef\n\n  (0, _react.useEffect)(function () {\n    if (!isDraggingSibling) {\n      forceRerenderAfterDnd(function (prev) {\n        return !prev;\n      });\n    }\n  }, [isDraggingSibling]); // Create the refs\n  // We need 1 for the drop target\n  // 1 for the drag target\n\n  var refs = {\n    dragRef: drag(dragRef),\n    dropRef: drop(dropRef)\n  };\n  return /*#__PURE__*/_react[\"default\"].createElement(FieldWrapper, {\n    ref: refs ? refs.dropRef : null\n  }, isDragging && /*#__PURE__*/_react[\"default\"].createElement(_CardPreview[\"default\"], {\n    transparent: true,\n    labelField: cardEllipsisTitle\n  }), !isDragging && isDraggingSibling && /*#__PURE__*/_react[\"default\"].createElement(_CardPreview[\"default\"], {\n    isSibling: true,\n    labelField: cardEllipsisTitle\n  }), !isDragging && !isDraggingSibling && /*#__PURE__*/_react[\"default\"].createElement(FieldContainer, {\n    borderColor: \"neutral150\",\n    background: \"neutral100\",\n    hasRadius: true,\n    justifyContent: \"space-between\",\n    onClick: handleClickEditRow,\n    isDragging: isDragging\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    horizontal: true,\n    spacing: 3\n  }, /*#__PURE__*/_react[\"default\"].createElement(DragButton, {\n    as: \"span\",\n    \"aria-label\": formatMessage({\n      id: (0, _utils.getTrad)('components.DraggableCard.move.field'),\n      defaultMessage: 'Move {item}'\n    }, {\n      item: name\n    }),\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    },\n    ref: refs.dragRef,\n    type: \"button\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Drag[\"default\"], null)), /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    fontWeight: \"bold\"\n  }, cardEllipsisTitle)), /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    paddingLeft: 3\n  }, /*#__PURE__*/_react[\"default\"].createElement(ActionButton, {\n    ref: editButtonRef,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      onClickEditField(name);\n    },\n    \"aria-label\": formatMessage({\n      id: (0, _utils.getTrad)('components.DraggableCard.edit.field'),\n      defaultMessage: 'Edit {item}'\n    }, {\n      item: name\n    }),\n    type: \"button\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Pencil[\"default\"], null)), /*#__PURE__*/_react[\"default\"].createElement(ActionButton, {\n    onClick: onRemoveField,\n    \"data-testid\": \"delete-\".concat(name),\n    \"aria-label\": formatMessage({\n      id: (0, _utils.getTrad)('components.DraggableCard.delete.field'),\n      defaultMessage: 'Delete {item}'\n    }, {\n      item: name\n    }),\n    type: \"button\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Cross[\"default\"], null)))));\n};\n\nDraggableCard.propTypes = {\n  index: _propTypes[\"default\"].number.isRequired,\n  isDraggingSibling: _propTypes[\"default\"].bool.isRequired,\n  labelField: _propTypes[\"default\"].string.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  onClickEditField: _propTypes[\"default\"].func.isRequired,\n  onMoveField: _propTypes[\"default\"].func.isRequired,\n  onRemoveField: _propTypes[\"default\"].func.isRequired,\n  setIsDraggingSibling: _propTypes[\"default\"].func.isRequired\n};\nvar _default = DraggableCard;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}