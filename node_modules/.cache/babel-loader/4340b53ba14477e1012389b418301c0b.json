{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactQuery = require(\"react-query\");\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _upperFirst = _interopRequireDefault(require(\"lodash/upperFirst\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _qs = require(\"qs\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Divider = require(\"@strapi/design-system/Divider\");\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _Link = require(\"@strapi/design-system/Link\");\n\nvar _Main = require(\"@strapi/design-system/Main\");\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _Check = _interopRequireDefault(require(\"@strapi/icons/Check\"));\n\nvar _ArrowLeft = _interopRequireDefault(require(\"@strapi/icons/ArrowLeft\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _ModelsContext = _interopRequireDefault(require(\"../../contexts/ModelsContext\"));\n\nvar _hooks = require(\"../../hooks\");\n\nvar _api = _interopRequireDefault(require(\"./utils/api\"));\n\nvar _Settings = _interopRequireDefault(require(\"./components/Settings\"));\n\nvar _SortDisplayedFields = _interopRequireDefault(require(\"./components/SortDisplayedFields\"));\n\nvar _EditFieldForm = _interopRequireDefault(require(\"./components/EditFieldForm\"));\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar _excludedSortOptions = require(\"./utils/excludedSortOptions\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ListSettingsView = function ListSettingsView(_ref) {\n  var layout = _ref.layout,\n      slug = _ref.slug;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var pluginsQueryParams = (0, _hooks.usePluginsQueryParams)();\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useContext = (0, _react.useContext)(_ModelsContext[\"default\"]),\n      refetchData = _useContext.refetchData;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      showWarningSubmit = _useState2[0],\n      setWarningSubmit = _useState2[1];\n\n  var toggleWarningSubmit = function toggleWarningSubmit() {\n    return setWarningSubmit(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isModalFormOpen = _useState4[0],\n      setIsModalFormOpen = _useState4[1];\n\n  var toggleModalForm = function toggleModalForm() {\n    return setIsModalFormOpen(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, function () {\n    return (0, _init[\"default\"])(_reducer.initialState, layout);\n  }),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var fieldToEdit = reducerState.fieldToEdit,\n      fieldForm = reducerState.fieldForm,\n      initialData = reducerState.initialData,\n      modifiedData = reducerState.modifiedData;\n  var attributes = layout.attributes;\n  var displayedFields = modifiedData.layouts.list;\n\n  var goBackUrl = function goBackUrl() {\n    var _initialData$settings = initialData.settings,\n        pageSize = _initialData$settings.pageSize,\n        defaultSortBy = _initialData$settings.defaultSortBy,\n        defaultSortOrder = _initialData$settings.defaultSortOrder,\n        kind = initialData.kind,\n        uid = initialData.uid;\n    var sort = \"\".concat(defaultSortBy, \":\").concat(defaultSortOrder);\n    var goBackSearch = \"\".concat((0, _qs.stringify)({\n      page: 1,\n      pageSize: pageSize,\n      sort: sort\n    }, {\n      encode: false\n    })).concat(pluginsQueryParams ? \"&\".concat(pluginsQueryParams) : '');\n    return \"/content-manager/\".concat(kind, \"/\").concat(uid, \"?\").concat(goBackSearch);\n  };\n\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n        name = _ref2$target.name,\n        value = _ref2$target.value;\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: name,\n      value: name === 'settings.pageSize' ? parseInt(value, 10) : value\n    });\n  };\n\n  var handleConfirm = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var body;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              body = (0, _pick[\"default\"])(modifiedData, ['layouts', 'settings', 'metadatas']);\n              submitMutation.mutate(body);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleConfirm() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleAddField = function handleAddField(item) {\n    dispatch({\n      type: 'ADD_FIELD',\n      item: item\n    });\n  };\n\n  var handleRemoveField = function handleRemoveField(e, index) {\n    e.stopPropagation();\n\n    if (displayedFields.length === 1) {\n      toggleNotification({\n        type: 'info',\n        message: {\n          id: (0, _utils.getTrad)('notification.info.minimumFields')\n        }\n      });\n    } else {\n      dispatch({\n        type: 'REMOVE_FIELD',\n        index: index\n      });\n    }\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    toggleWarningSubmit();\n    trackUsage('willSaveContentTypeLayout');\n  };\n\n  var handleClickEditField = function handleClickEditField(fieldToEdit) {\n    dispatch({\n      type: 'SET_FIELD_TO_EDIT',\n      fieldToEdit: fieldToEdit\n    });\n    toggleModalForm();\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    dispatch({\n      type: 'UNSET_FIELD_TO_EDIT'\n    });\n    toggleModalForm();\n  };\n\n  var handleSubmitFieldEdit = function handleSubmitFieldEdit(e) {\n    e.preventDefault();\n    toggleModalForm();\n    dispatch({\n      type: 'SUBMIT_FIELD_FORM'\n    });\n  };\n\n  var submitMutation = (0, _reactQuery.useMutation)(function (body) {\n    return (0, _api[\"default\"])(body, slug);\n  }, {\n    onSuccess: function onSuccess() {\n      trackUsage('didEditListSettings');\n      refetchData();\n    },\n    onError: function onError() {\n      toggleNotification({\n        type: 'warning',\n        message: {\n          id: 'notification.error'\n        }\n      });\n    }\n  });\n  var isSubmittingForm = submitMutation.isLoading;\n\n  var handleChangeEditLabel = function handleChangeEditLabel(_ref4) {\n    var _ref4$target = _ref4.target,\n        name = _ref4$target.name,\n        value = _ref4$target.value;\n    dispatch({\n      type: 'ON_CHANGE_FIELD_METAS',\n      name: name,\n      value: value\n    });\n  };\n\n  var listRemainingFields = Object.entries(attributes).reduce(function (acc, cur) {\n    var _cur = (0, _slicedToArray2[\"default\"])(cur, 2),\n        attrName = _cur[0],\n        fieldSchema = _cur[1];\n\n    var isDisplayable = (0, _utils.checkIfAttributeIsDisplayable)(fieldSchema);\n    var isAlreadyDisplayed = displayedFields.includes(attrName);\n\n    if (isDisplayable && !isAlreadyDisplayed) {\n      acc.push(attrName);\n    }\n\n    return acc;\n  }, []).sort();\n  var sortOptions = Object.entries(attributes).reduce(function (acc, cur) {\n    var _cur2 = (0, _slicedToArray2[\"default\"])(cur, 2),\n        name = _cur2[0],\n        type = _cur2[1].type;\n\n    if (!_excludedSortOptions.EXCLUDED_SORT_OPTIONS.includes(type)) {\n      acc.push(name);\n    }\n\n    return acc;\n  }, []);\n\n  var move = function move(originalIndex, atIndex) {\n    dispatch({\n      type: 'MOVE_FIELD',\n      originalIndex: originalIndex,\n      atIndex: atIndex\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Layout.Layout, null, /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, {\n    \"aria-busy\": isSubmittingForm\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Layout.HeaderLayout, {\n    navigationAction: /*#__PURE__*/_react[\"default\"].createElement(_Link.Link, {\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_ArrowLeft[\"default\"], null),\n      to: goBackUrl,\n      id: \"go-back\"\n    }, formatMessage({\n      id: 'app.components.go-back',\n      defaultMessage: 'Back'\n    })),\n    primaryAction: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      size: \"L\",\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Check[\"default\"], null),\n      disabled: (0, _isEqual[\"default\"])(modifiedData, initialData),\n      type: \"submit\"\n    }, formatMessage({\n      id: 'form.button.save',\n      defaultMessage: 'Save'\n    })),\n    subtitle: formatMessage({\n      id: (0, _utils.getTrad)('components.SettingsViewWrapper.pluginHeader.description.list-settings'),\n      defaultMessage: 'Define the settings of the list view.'\n    }),\n    title: formatMessage({\n      id: (0, _utils.getTrad)('components.SettingsViewWrapper.pluginHeader.title'),\n      defaultMessage: 'Configure the view - {name}'\n    }, {\n      name: (0, _upperFirst[\"default\"])(modifiedData.info.displayName)\n    })\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Layout.ContentLayout, null, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    background: \"neutral0\",\n    hasRadius: true,\n    shadow: \"tableShadow\",\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 7,\n    paddingRight: 7\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Settings[\"default\"], {\n    modifiedData: modifiedData,\n    onChange: handleChange,\n    sortOptions: sortOptions\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    paddingTop: 6,\n    paddingBottom: 6\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Divider.Divider, null)), /*#__PURE__*/_react[\"default\"].createElement(_SortDisplayedFields[\"default\"], {\n    listRemainingFields: listRemainingFields,\n    displayedFields: displayedFields,\n    onAddField: handleAddField,\n    onClickEditField: handleClickEditField,\n    onMoveField: move,\n    onRemoveField: handleRemoveField,\n    metadatas: modifiedData.metadatas\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.ConfirmDialog, {\n    bodyText: {\n      id: (0, _utils.getTrad)('popUpWarning.warning.updateAllSettings'),\n      defaultMessage: 'This will modify all your settings'\n    },\n    iconRightButton: /*#__PURE__*/_react[\"default\"].createElement(_Check[\"default\"], null),\n    isConfirmButtonLoading: isSubmittingForm,\n    isOpen: showWarningSubmit,\n    onToggleDialog: toggleWarningSubmit,\n    onConfirm: handleConfirm,\n    variantRightButton: \"success-light\"\n  })), isModalFormOpen && /*#__PURE__*/_react[\"default\"].createElement(_EditFieldForm[\"default\"], {\n    attributes: attributes,\n    fieldForm: fieldForm,\n    fieldToEdit: fieldToEdit,\n    onChangeEditLabel: handleChangeEditLabel,\n    onCloseModal: handleCloseModal,\n    onSubmit: handleSubmitFieldEdit,\n    type: (0, _get[\"default\"])(attributes, [fieldToEdit, 'type'], 'text')\n  })));\n};\n\nListSettingsView.propTypes = {\n  layout: _propTypes[\"default\"].shape({\n    uid: _propTypes[\"default\"].string.isRequired,\n    settings: _propTypes[\"default\"].shape({\n      bulkable: _propTypes[\"default\"].bool,\n      defaultSortBy: _propTypes[\"default\"].string,\n      defaultSortOrder: _propTypes[\"default\"].string,\n      filterable: _propTypes[\"default\"].bool,\n      pageSize: _propTypes[\"default\"].number,\n      searchable: _propTypes[\"default\"].bool\n    }).isRequired,\n    metadatas: _propTypes[\"default\"].object.isRequired,\n    options: _propTypes[\"default\"].object.isRequired,\n    attributes: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].shape({\n      type: _propTypes[\"default\"].string\n    })).isRequired\n  }).isRequired,\n  slug: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(ListSettingsView);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}