{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchUserRoles = exports.fetchStrapiLatestRelease = exports.fetchCurrentUserPermissions = exports.fetchAppInfo = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _checkLatestStrapiVersion = _interopRequireDefault(require(\"./checkLatestStrapiVersion\"));\n\nvar _utils = require(\"../../../core/utils\");\n\nvar _package = _interopRequireDefault(require(\"../../../../../package.json\"));\n\nvar strapiVersion = _package[\"default\"].version;\nvar showUpdateNotif = !JSON.parse(localStorage.getItem('STRAPI_UPDATE_NOTIF'));\n\nvar fetchStrapiLatestRelease = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(toggleNotification) {\n    var _yield$axios$get, tag_name, shouldUpdateStrapi;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _axios[\"default\"].get('https://api.github.com/repos/strapi/strapi/releases/latest');\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            tag_name = _yield$axios$get.data.tag_name;\n            shouldUpdateStrapi = (0, _checkLatestStrapiVersion[\"default\"])(strapiVersion, tag_name);\n\n            if (shouldUpdateStrapi && showUpdateNotif) {\n              toggleNotification({\n                type: 'info',\n                message: {\n                  id: 'notification.version.update.message'\n                },\n                link: {\n                  url: \"https://github.com/strapi/strapi/releases/tag/\".concat(tag_name),\n                  label: {\n                    id: 'notification.version.update.link'\n                  }\n                },\n                blockTransition: true,\n                onClose: function onClose() {\n                  return localStorage.setItem('STRAPI_UPDATE_NOTIF', true);\n                }\n              });\n            }\n\n            return _context.abrupt(\"return\", tag_name);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", strapiVersion);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function fetchStrapiLatestRelease(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.fetchStrapiLatestRelease = fetchStrapiLatestRelease;\n\nvar fetchAppInfo = /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    var _yield$axiosInstance$, data, headers;\n\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _utils.axiosInstance.get('/admin/information');\n\n          case 3:\n            _yield$axiosInstance$ = _context2.sent;\n            data = _yield$axiosInstance$.data;\n            headers = _yield$axiosInstance$.headers;\n\n            if (headers['content-type'].includes('application/json')) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw new Error('Not found');\n\n          case 8:\n            return _context2.abrupt(\"return\", data.data);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw new Error(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 11]]);\n  }));\n\n  return function fetchAppInfo() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.fetchAppInfo = fetchAppInfo;\n\nvar fetchCurrentUserPermissions = /*#__PURE__*/function () {\n  var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n    var _yield$axiosInstance$2, data, headers;\n\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _utils.axiosInstance.get('/admin/users/me/permissions');\n\n          case 3:\n            _yield$axiosInstance$2 = _context3.sent;\n            data = _yield$axiosInstance$2.data;\n            headers = _yield$axiosInstance$2.headers;\n\n            if (headers['content-type'].includes('application/json')) {\n              _context3.next = 8;\n              break;\n            }\n\n            throw new Error('Not found');\n\n          case 8:\n            return _context3.abrupt(\"return\", data.data);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            throw new Error(_context3.t0);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 11]]);\n  }));\n\n  return function fetchCurrentUserPermissions() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.fetchCurrentUserPermissions = fetchCurrentUserPermissions;\n\nvar fetchUserRoles = /*#__PURE__*/function () {\n  var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n    var _yield$axiosInstance$3, roles;\n\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _utils.axiosInstance.get('/admin/users/me');\n\n          case 3:\n            _yield$axiosInstance$3 = _context4.sent;\n            roles = _yield$axiosInstance$3.data.data.roles;\n            return _context4.abrupt(\"return\", roles);\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            throw new Error(_context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 8]]);\n  }));\n\n  return function fetchUserRoles() {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.fetchUserRoles = fetchUserRoles;","map":null,"metadata":{},"sourceType":"script"}