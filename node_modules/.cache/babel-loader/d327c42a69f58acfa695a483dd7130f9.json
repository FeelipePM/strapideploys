{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _utils = require(\"../../../core/utils\");\n\nvar _utils2 = require(\"../../utils\");\n\nvar _actions = require(\"../../sharedReducers/crudReducer/actions\");\n\nvar _selectors = _interopRequireDefault(require(\"../../sharedReducers/crudReducer/selectors\"));\n\nvar _utils3 = require(\"./utils\");\n\nvar _buildQueryString = _interopRequireDefault(require(\"../../pages/ListView/utils/buildQueryString\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// This container is used to handle the CRUD\nvar SingleTypeFormWrapper = function SingleTypeFormWrapper(_ref) {\n  var allLayoutData = _ref.allLayoutData,\n      children = _ref.children,\n      slug = _ref.slug;\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var _useGuidedTour = (0, _helperPlugin.useGuidedTour)(),\n      setCurrentStep = _useGuidedTour.setCurrentStep;\n\n  var trackUsageRef = (0, _react.useRef)(trackUsage);\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isCreatingEntry = _useState2[0],\n      setIsCreatingEntry = _useState2[1];\n\n  var _useQueryParams = (0, _helperPlugin.useQueryParams)(),\n      _useQueryParams2 = (0, _slicedToArray2[\"default\"])(_useQueryParams, 1),\n      _useQueryParams2$ = _useQueryParams2[0],\n      query = _useQueryParams2$.query,\n      rawQuery = _useQueryParams2$.rawQuery;\n\n  var searchToSend = (0, _buildQueryString[\"default\"])(query);\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useSelector = (0, _reactRedux.useSelector)(_selectors[\"default\"]),\n      componentsDataStructure = _useSelector.componentsDataStructure,\n      contentTypeDataStructure = _useSelector.contentTypeDataStructure,\n      data = _useSelector.data,\n      isLoading = _useSelector.isLoading,\n      status = _useSelector.status;\n\n  var cleanReceivedData = (0, _react.useCallback)(function (data) {\n    var cleaned = (0, _utils2.removePasswordFieldsFromData)(data, allLayoutData.contentType, allLayoutData.components); // This is needed in order to add a unique id for the repeatable components, in order to make the reorder easier\n\n    return (0, _helperPlugin.formatContentTypeData)(cleaned, allLayoutData.contentType, allLayoutData.components);\n  }, [allLayoutData]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      dispatch((0, _actions.resetProps)());\n    };\n  }, [dispatch]);\n  (0, _react.useEffect)(function () {\n    var componentsDataStructure = Object.keys(allLayoutData.components).reduce(function (acc, current) {\n      var defaultComponentForm = (0, _utils2.createDefaultForm)((0, _get[\"default\"])(allLayoutData, ['components', current, 'attributes'], {}), allLayoutData.components);\n      acc[current] = (0, _helperPlugin.formatContentTypeData)(defaultComponentForm, allLayoutData.components[current], allLayoutData.components);\n      return acc;\n    }, {});\n    var contentTypeDataStructure = (0, _utils2.createDefaultForm)(allLayoutData.contentType.attributes, allLayoutData.components);\n    var contentTypeDataStructureFormatted = (0, _helperPlugin.formatContentTypeData)(contentTypeDataStructure, allLayoutData.contentType, allLayoutData.components);\n    dispatch((0, _actions.setDataStructures)(componentsDataStructure, contentTypeDataStructureFormatted));\n  }, [allLayoutData, dispatch]); // Check if creation mode or editing mode\n\n  (0, _react.useEffect)(function () {\n    var CancelToken = _axios[\"default\"].CancelToken;\n    var source = CancelToken.source();\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(source) {\n        var _yield$axiosInstance, _data, responseStatus;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch((0, _actions.getData)());\n                setIsCreatingEntry(true);\n                _context.prev = 2;\n                _context.next = 5;\n                return (0, _utils.axiosInstance)((0, _utils3.getRequestUrl)(\"\".concat(slug).concat(searchToSend)), {\n                  cancelToken: source.token\n                });\n\n              case 5:\n                _yield$axiosInstance = _context.sent;\n                _data = _yield$axiosInstance.data;\n                dispatch((0, _actions.getDataSucceeded)(cleanReceivedData(_data)));\n                setIsCreatingEntry(false);\n                _context.next = 18;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n\n                if (!_axios[\"default\"].isCancel(_context.t0)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 15:\n                responseStatus = (0, _get[\"default\"])(_context.t0, 'response.status', null); // Creating a single type\n\n                if (responseStatus === 404) {\n                  dispatch((0, _actions.initForm)(rawQuery, true));\n                }\n\n                if (responseStatus === 403) {\n                  toggleNotification({\n                    type: 'info',\n                    message: {\n                      id: (0, _utils2.getTrad)('permissions.not-allowed.update')\n                    }\n                  });\n                  push('/');\n                }\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      return function fetchData(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData(source);\n    return function () {\n      return source.cancel('Operation canceled by the user.');\n    };\n  }, [cleanReceivedData, push, slug, dispatch, searchToSend, rawQuery, toggleNotification]);\n  var displayErrors = (0, _react.useCallback)(function (err) {\n    var errorPayload = err.response.payload;\n    console.error(errorPayload);\n    var errorMessage = (0, _get[\"default\"])(errorPayload, ['message'], 'Bad Request'); // TODO handle errors correctly when back-end ready\n\n    if (Array.isArray(errorMessage)) {\n      errorMessage = (0, _get[\"default\"])(errorMessage, ['0', 'messages', '0', 'id']);\n    }\n\n    if (typeof errorMessage === 'string') {\n      toggleNotification({\n        type: 'warning',\n        message: errorMessage\n      });\n    }\n  }, [toggleNotification]);\n  var onDelete = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(trackerProperty) {\n      var _yield$axiosInstance$, _data2;\n\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              trackUsageRef.current('willDeleteEntry', trackerProperty);\n              _context2.next = 4;\n              return _utils.axiosInstance[\"delete\"]((0, _utils3.getRequestUrl)(\"\".concat(slug).concat(searchToSend)));\n\n            case 4:\n              _yield$axiosInstance$ = _context2.sent;\n              _data2 = _yield$axiosInstance$.data;\n              toggleNotification({\n                type: 'success',\n                message: {\n                  id: (0, _utils2.getTrad)('success.record.delete')\n                }\n              });\n              trackUsageRef.current('didDeleteEntry', trackerProperty);\n              return _context2.abrupt(\"return\", Promise.resolve(_data2));\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              trackUsageRef.current('didNotDeleteEntry', _objectSpread({\n                error: _context2.t0\n              }, trackerProperty));\n              return _context2.abrupt(\"return\", Promise.reject(_context2.t0));\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [slug, toggleNotification, searchToSend]);\n  var onDeleteSucceeded = (0, _react.useCallback)(function () {\n    setIsCreatingEntry(true);\n    dispatch((0, _actions.initForm)(rawQuery, true));\n  }, [dispatch, rawQuery]);\n  var onPost = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(body, trackerProperty) {\n      var endPoint, _yield$axiosInstance$2, _data3;\n\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              endPoint = (0, _utils3.getRequestUrl)(\"\".concat(slug).concat(rawQuery));\n              _context3.prev = 1;\n              dispatch((0, _actions.setStatus)('submit-pending'));\n              _context3.next = 5;\n              return _utils.axiosInstance.put(endPoint, body);\n\n            case 5:\n              _yield$axiosInstance$2 = _context3.sent;\n              _data3 = _yield$axiosInstance$2.data;\n              trackUsageRef.current('didCreateEntry', trackerProperty);\n              toggleNotification({\n                type: 'success',\n                message: {\n                  id: (0, _utils2.getTrad)('success.record.save')\n                }\n              });\n              setCurrentStep('contentManager.success');\n              dispatch((0, _actions.submitSucceeded)(cleanReceivedData(_data3)));\n              setIsCreatingEntry(false);\n              dispatch((0, _actions.setStatus)('resolved'));\n              _context3.next = 20;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n              trackUsageRef.current('didNotCreateEntry', {\n                error: _context3.t0,\n                trackerProperty: trackerProperty\n              });\n              displayErrors(_context3.t0);\n              dispatch((0, _actions.setStatus)('resolved'));\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 15]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [cleanReceivedData, displayErrors, slug, dispatch, rawQuery, toggleNotification, setCurrentStep]);\n  var onPublish = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n    var endPoint, _yield$axiosInstance$3, _data4;\n\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            trackUsageRef.current('willPublishEntry');\n            endPoint = (0, _utils3.getRequestUrl)(\"\".concat(slug, \"/actions/publish\").concat(searchToSend));\n            dispatch((0, _actions.setStatus)('publish-pending'));\n            _context4.next = 6;\n            return _utils.axiosInstance.post(endPoint);\n\n          case 6:\n            _yield$axiosInstance$3 = _context4.sent;\n            _data4 = _yield$axiosInstance$3.data;\n            trackUsageRef.current('didPublishEntry');\n            toggleNotification({\n              type: 'success',\n              message: {\n                id: (0, _utils2.getTrad)('success.record.publish')\n              }\n            });\n            dispatch((0, _actions.submitSucceeded)(cleanReceivedData(_data4)));\n            dispatch((0, _actions.setStatus)('resolved'));\n            _context4.next = 18;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](0);\n            displayErrors(_context4.t0);\n            dispatch((0, _actions.setStatus)('resolved'));\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 14]]);\n  })), [cleanReceivedData, displayErrors, slug, searchToSend, dispatch, toggleNotification]);\n  var onPut = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(body, trackerProperty) {\n      var endPoint, _yield$axiosInstance$4, _data5;\n\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              endPoint = (0, _utils3.getRequestUrl)(\"\".concat(slug).concat(rawQuery));\n              _context5.prev = 1;\n              trackUsageRef.current('willEditEntry', trackerProperty);\n              dispatch((0, _actions.setStatus)('submit-pending'));\n              _context5.next = 6;\n              return _utils.axiosInstance.put(endPoint, body);\n\n            case 6:\n              _yield$axiosInstance$4 = _context5.sent;\n              _data5 = _yield$axiosInstance$4.data;\n              toggleNotification({\n                type: 'success',\n                message: {\n                  id: (0, _utils2.getTrad)('success.record.save')\n                }\n              });\n              trackUsageRef.current('didEditEntry', {\n                trackerProperty: trackerProperty\n              });\n              dispatch((0, _actions.submitSucceeded)(cleanReceivedData(_data5)));\n              dispatch((0, _actions.setStatus)('resolved'));\n              _context5.next = 19;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](1);\n              displayErrors(_context5.t0);\n              trackUsageRef.current('didNotEditEntry', {\n                error: _context5.t0,\n                trackerProperty: trackerProperty\n              });\n              dispatch((0, _actions.setStatus)('resolved'));\n\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 14]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), [cleanReceivedData, displayErrors, slug, dispatch, rawQuery, toggleNotification]); // The publish and unpublish method could be refactored but let's leave the duplication for now\n\n  var onUnpublish = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n    var endPoint, _yield$axiosInstance$5, _data6;\n\n    return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            endPoint = (0, _utils3.getRequestUrl)(\"\".concat(slug, \"/actions/unpublish\").concat(searchToSend));\n            dispatch((0, _actions.setStatus)('unpublish-pending'));\n            _context6.prev = 2;\n            trackUsageRef.current('willUnpublishEntry');\n            _context6.next = 6;\n            return _utils.axiosInstance.post(endPoint);\n\n          case 6:\n            _yield$axiosInstance$5 = _context6.sent;\n            _data6 = _yield$axiosInstance$5.data;\n            trackUsageRef.current('didUnpublishEntry');\n            toggleNotification({\n              type: 'success',\n              message: {\n                id: (0, _utils2.getTrad)('success.record.unpublish')\n              }\n            });\n            dispatch((0, _actions.submitSucceeded)(cleanReceivedData(_data6)));\n            dispatch((0, _actions.setStatus)('resolved'));\n            _context6.next = 18;\n            break;\n\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](2);\n            dispatch((0, _actions.setStatus)('resolved'));\n            displayErrors(_context6.t0);\n\n          case 18:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[2, 14]]);\n  })), [cleanReceivedData, toggleNotification, displayErrors, slug, dispatch, searchToSend]);\n  return children({\n    componentsDataStructure: componentsDataStructure,\n    contentTypeDataStructure: contentTypeDataStructure,\n    data: data,\n    isCreatingEntry: isCreatingEntry,\n    isLoadingForData: isLoading,\n    onDelete: onDelete,\n    onDeleteSucceeded: onDeleteSucceeded,\n    onPost: onPost,\n    onPublish: onPublish,\n    onPut: onPut,\n    onUnpublish: onUnpublish,\n    redirectionLink: '/',\n    status: status\n  });\n};\n\nSingleTypeFormWrapper.propTypes = {\n  allLayoutData: _propTypes[\"default\"].shape({\n    components: _propTypes[\"default\"].object.isRequired,\n    contentType: _propTypes[\"default\"].object.isRequired\n  }).isRequired,\n  children: _propTypes[\"default\"].func.isRequired,\n  slug: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(SingleTypeFormWrapper);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}