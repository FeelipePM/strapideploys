{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchData = exports.deleteData = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _utils = require(\"../../../../utils\");\n\nvar fetchData = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(toggleNotification, notifyStatus) {\n    var _yield$axiosInstance$, data;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _utils.axiosInstance.get((0, _utils.getRequestURL)('roles'));\n\n          case 3:\n            _yield$axiosInstance$ = _context.sent;\n            data = _yield$axiosInstance$.data;\n            notifyStatus('The roles have loaded successfully');\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            toggleNotification({\n              type: 'warning',\n              message: {\n                id: 'notification.error'\n              }\n            });\n            throw new Error('error');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function fetchData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.fetchData = fetchData;\n\nvar deleteData = /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(id, toggleNotification) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _utils.axiosInstance[\"delete\"](\"\".concat((0, _utils.getRequestURL)('roles'), \"/\").concat(id));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            toggleNotification({\n              type: 'warning',\n              message: {\n                id: 'notification.error',\n                defaultMessage: 'An error occured'\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 5]]);\n  }));\n\n  return function deleteData(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.deleteData = deleteData;","map":null,"metadata":{},"sourceType":"script"}