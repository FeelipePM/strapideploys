{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _matchSorter = _interopRequireDefault(require(\"match-sorter\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _Plus = _interopRequireDefault(require(\"@strapi/icons/Plus\"));\n\nvar _Trash = _interopRequireDefault(require(\"@strapi/icons/Trash\"));\n\nvar _Pencil = _interopRequireDefault(require(\"@strapi/icons/Pencil\"));\n\nvar _Duplicate = _interopRequireDefault(require(\"@strapi/icons/Duplicate\"));\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _Table = require(\"@strapi/design-system/Table\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _Main = require(\"@strapi/design-system/Main\");\n\nvar _VisuallyHidden = require(\"@strapi/design-system/VisuallyHidden\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _RoleRow = _interopRequireDefault(require(\"./components/RoleRow\"));\n\nvar _EmptyRole = _interopRequireDefault(require(\"./components/EmptyRole\"));\n\nvar _UpgradePlanModal = _interopRequireDefault(require(\"../../../../../components/UpgradePlanModal\"));\n\nvar _hooks = require(\"../../../../../hooks\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar useSortedRoles = function useSortedRoles() {\n  var _useRolesList = (0, _hooks.useRolesList)(),\n      roles = _useRolesList.roles,\n      isLoading = _useRolesList.isLoading;\n\n  var query = (0, _helperPlugin.useQuery)();\n\n  var _q = decodeURIComponent(query.get('_q') || '');\n\n  var sortedRoles = (0, _matchSorter[\"default\"])(roles, _q, {\n    keys: ['name', 'description']\n  });\n  return {\n    isLoading: isLoading,\n    sortedRoles: sortedRoles\n  };\n};\n\nvar useRoleActions = function useRoleActions() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isModalOpen = _useState2[0],\n      setIsModalOpen = _useState2[1];\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var handleGoTo = (0, _react.useCallback)(function (id) {\n    push(\"/settings/roles/\".concat(id));\n  }, [push]);\n  var handleToggle = (0, _react.useCallback)(function () {\n    setIsModalOpen(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var handleToggleModalForCreatingRole = (0, _react.useCallback)(function () {\n    trackUsage('didShowRBACUpgradeModal');\n    setIsModalOpen(true);\n  }, [trackUsage]);\n  var getIcons = (0, _react.useCallback)(function (role) {\n    return [{\n      onClick: handleToggle,\n      label: formatMessage({\n        id: 'app.utils.duplicate',\n        defaultMessage: 'Duplicate'\n      }),\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Duplicate[\"default\"], null)\n    }, {\n      onClick: function onClick() {\n        return handleGoTo(role.id);\n      },\n      label: formatMessage({\n        id: 'app.utils.edit',\n        defaultMessage: 'Edit'\n      }),\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Pencil[\"default\"], null)\n    }, {\n      onClick: handleToggle,\n      label: formatMessage({\n        id: 'app.utils.delete',\n        defaultMessage: 'Delete'\n      }),\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Trash[\"default\"], null)\n    }];\n  }, [formatMessage, handleToggle, handleGoTo]);\n  return {\n    isModalOpen: isModalOpen,\n    handleToggleModalForCreatingRole: handleToggleModalForCreatingRole,\n    handleToggle: handleToggle,\n    getIcons: getIcons\n  };\n};\n\nvar RoleListPage = function RoleListPage() {\n  var _useIntl2 = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl2.formatMessage;\n\n  (0, _helperPlugin.useFocusWhenNavigate)();\n\n  var _useSortedRoles = useSortedRoles(),\n      sortedRoles = _useSortedRoles.sortedRoles,\n      isLoading = _useSortedRoles.isLoading;\n\n  var _useRoleActions = useRoleActions(),\n      isModalOpen = _useRoleActions.isModalOpen,\n      handleToggle = _useRoleActions.handleToggle,\n      handleToggleModalForCreatingRole = _useRoleActions.handleToggleModalForCreatingRole,\n      getIcons = _useRoleActions.getIcons;\n\n  var rowCount = sortedRoles.length + 1;\n  var colCount = 5; // ! TODO - Add the search input\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, null, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.SettingsPageTitle, {\n    name: \"Roles\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Layout.HeaderLayout, {\n    primaryAction: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      onClick: handleToggleModalForCreatingRole,\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null),\n      size: \"L\"\n    }, formatMessage({\n      id: 'Settings.roles.list.button.add',\n      defaultMessage: 'Add new role'\n    })),\n    title: formatMessage({\n      id: 'Settings.roles.title',\n      defaultMessage: 'roles'\n    }),\n    subtitle: formatMessage({\n      id: 'Settings.roles.list.description',\n      defaultMessage: 'List of roles'\n    })\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Layout.ContentLayout, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Table, {\n    colCount: colCount,\n    rowCount: rowCount,\n    footer: /*#__PURE__*/_react[\"default\"].createElement(_Table.TFooter, {\n      onClick: handleToggleModalForCreatingRole,\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null)\n    }, formatMessage({\n      id: 'Settings.roles.list.button.add',\n      defaultMessage: 'Add new role'\n    }))\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Table.Thead, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Tr, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: 'Settings.roles.list.header.name',\n    defaultMessage: 'Name'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: 'Settings.roles.list.header.description',\n    defaultMessage: 'Description'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: 'Settings.roles.list.header.users',\n    defaultMessage: 'Users'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_VisuallyHidden.VisuallyHidden, null, formatMessage({\n    id: 'Settings.roles.list.header.actions',\n    defaultMessage: 'Actions'\n  }))))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Tbody, null, sortedRoles === null || sortedRoles === void 0 ? void 0 : sortedRoles.map(function (role) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_RoleRow[\"default\"], {\n      key: role.id,\n      id: role.id,\n      name: role.name,\n      description: role.description,\n      usersCount: role.usersCount,\n      icons: getIcons(role)\n    });\n  }))), !rowCount && !isLoading && /*#__PURE__*/_react[\"default\"].createElement(_EmptyRole[\"default\"], null)), /*#__PURE__*/_react[\"default\"].createElement(_UpgradePlanModal[\"default\"], {\n    isOpen: isModalOpen,\n    onClose: handleToggle\n  }));\n};\n\nvar _default = RoleListPage;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}