{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _isEmpty = _interopRequireDefault(require(\"lodash/isEmpty\"));\n\nvar _reactSelect = _interopRequireWildcard(require(\"react-select\"));\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _ListItem = _interopRequireDefault(require(\"./ListItem\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction SelectMany(_ref) {\n  var addRelation = _ref.addRelation,\n      components = _ref.components,\n      displayNavigationLink = _ref.displayNavigationLink,\n      mainField = _ref.mainField,\n      name = _ref.name,\n      isDisabled = _ref.isDisabled,\n      isLoading = _ref.isLoading,\n      onInputChange = _ref.onInputChange,\n      onMenuClose = _ref.onMenuClose,\n      onMenuOpen = _ref.onMenuOpen,\n      onMenuScrollToBottom = _ref.onMenuScrollToBottom,\n      _onRemove = _ref.onRemove,\n      options = _ref.options,\n      placeholder = _ref.placeholder,\n      searchToPersist = _ref.searchToPersist,\n      styles = _ref.styles,\n      targetModel = _ref.targetModel,\n      value = _ref.value,\n      description = _ref.description;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var filterConfig = {\n    ignoreCase: true,\n    ignoreAccents: true,\n    trim: false,\n    matchFrom: 'any'\n  };\n  return /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 1\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactSelect[\"default\"], {\n    components: components,\n    isDisabled: isDisabled,\n    id: name,\n    filterOption: function filterOption(candidate, input) {\n      if (!(0, _isEmpty[\"default\"])(value)) {\n        var isSelected = value.findIndex(function (item) {\n          return item.id === candidate.value.id;\n        }) !== -1;\n\n        if (isSelected) {\n          return false;\n        }\n      }\n\n      if (input) {\n        return (0, _reactSelect.createFilter)(filterConfig)(candidate, input);\n      }\n\n      return true;\n    },\n    mainField: mainField,\n    isLoading: isLoading,\n    isMulti: true,\n    isSearchable: true,\n    options: options,\n    onChange: addRelation,\n    onInputChange: onInputChange,\n    onMenuClose: onMenuClose,\n    onMenuOpen: onMenuOpen,\n    onMenuScrollToBottom: onMenuScrollToBottom,\n    placeholder: formatMessage(placeholder || {\n      id: 'components.Select.placeholder',\n      defaultMessage: 'Select...'\n    }),\n    styles: styles,\n    value: []\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    paddingTop: 3,\n    style: {\n      overflow: 'auto'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    as: \"ul\",\n    spacing: 4,\n    style: {\n      maxHeight: '128px',\n      overflowX: 'hidden'\n    }\n  }, value === null || value === void 0 ? void 0 : value.map(function (data, index) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_ListItem[\"default\"], {\n      key: data.id,\n      data: data,\n      displayNavigationLink: displayNavigationLink,\n      isDisabled: isDisabled,\n      mainField: mainField,\n      onRemove: function onRemove() {\n        if (!isDisabled) {\n          _onRemove(\"\".concat(name, \".\").concat(index));\n        }\n      },\n      searchToPersist: searchToPersist,\n      targetModel: targetModel\n    });\n  }))), description && /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"pi\",\n    textColor: \"neutral600\"\n  }, description));\n}\n\nSelectMany.defaultProps = {\n  description: '',\n  components: {},\n  placeholder: null,\n  searchToPersist: null,\n  value: null\n};\nSelectMany.propTypes = {\n  addRelation: _propTypes[\"default\"].func.isRequired,\n  components: _propTypes[\"default\"].object,\n  displayNavigationLink: _propTypes[\"default\"].bool.isRequired,\n  isDisabled: _propTypes[\"default\"].bool.isRequired,\n  isLoading: _propTypes[\"default\"].bool.isRequired,\n  mainField: _propTypes[\"default\"].shape({\n    name: _propTypes[\"default\"].string.isRequired,\n    schema: _propTypes[\"default\"].shape({\n      type: _propTypes[\"default\"].string.isRequired\n    }).isRequired\n  }).isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  onInputChange: _propTypes[\"default\"].func.isRequired,\n  onMenuClose: _propTypes[\"default\"].func.isRequired,\n  onMenuOpen: _propTypes[\"default\"].func.isRequired,\n  onMenuScrollToBottom: _propTypes[\"default\"].func.isRequired,\n  onRemove: _propTypes[\"default\"].func.isRequired,\n  options: _propTypes[\"default\"].array.isRequired,\n  placeholder: _propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].string.isRequired,\n    defaultMessage: _propTypes[\"default\"].string.isRequired\n  }),\n  searchToPersist: _propTypes[\"default\"].string,\n  styles: _propTypes[\"default\"].object.isRequired,\n  targetModel: _propTypes[\"default\"].string.isRequired,\n  value: _propTypes[\"default\"].array,\n  description: _propTypes[\"default\"].string\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(SelectMany);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}