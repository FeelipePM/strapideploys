{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar getAttributesToDisplay = function getAttributesToDisplay(contentType) {\n  var timestamps = (0, _lodash.get)(contentType, ['options', 'timestamps']); // Sometimes timestamps is false\n\n  var timestampsArray = Array.isArray(timestamps) ? timestamps : [];\n  var idsAttributes = ['id', '_id']; // For both SQL and mongo\n\n  var unwritableAttributes = [].concat(idsAttributes, (0, _toConsumableArray2[\"default\"])(timestampsArray), ['publishedAt']);\n  var schemaAttributes = (0, _lodash.get)(contentType, ['attributes'], {});\n  return Object.keys(schemaAttributes).reduce(function (acc, current) {\n    if (!unwritableAttributes.includes(current)) {\n      acc.push(_objectSpread(_objectSpread({}, schemaAttributes[current]), {}, {\n        attributeName: current\n      }));\n    }\n\n    return acc;\n  }, []);\n};\n\nvar _default = getAttributesToDisplay;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}