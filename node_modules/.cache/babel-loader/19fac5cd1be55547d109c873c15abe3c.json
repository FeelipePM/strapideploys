{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _getTrad = _interopRequireDefault(require(\"../../../utils/getTrad\"));\n\nvar _component = require(\"../component\");\n\nvar _nameField = require(\"./nameField\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar baseForm = {\n  component: function component(data, step) {\n    if (step === '1') {\n      var itemsToConcat = data.createComponent === true ? _component.componentForm.base('componentToCreate.') : [];\n      return {\n        sections: [{\n          sectionTitle: null,\n          items: [_component.componentField]\n        }].concat((0, _toConsumableArray2[\"default\"])(itemsToConcat))\n      };\n    }\n\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [_nameField.nameField, {\n          name: 'component',\n          type: 'select-component',\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('modalForm.attributes.select-component'),\n            defaultMessage: 'Select a component'\n          },\n          isMultiple: false\n        }]\n      }, {\n        sectionTitle: null,\n        items: [{\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('modalForm.attribute.text.type-selection'),\n            defaultMessage: 'Type'\n          },\n          name: 'repeatable',\n          type: 'boolean-radio-group',\n          size: 12,\n          radios: [{\n            title: {\n              id: (0, _getTrad[\"default\"])('form.attribute.component.option.repeatable'),\n              defaultMessage: 'Repeatable component'\n            },\n            description: {\n              id: (0, _getTrad[\"default\"])('form.attribute.component.option.repeatable.description'),\n              defaultMessage: 'Best for multiple instances (array) of ingredients, meta tags, etc..'\n            },\n            value: true\n          }, {\n            title: {\n              id: (0, _getTrad[\"default\"])('form.attribute.component.option.single'),\n              defaultMessage: 'Single component'\n            },\n            description: {\n              id: (0, _getTrad[\"default\"])('form.attribute.component.option.single.description'),\n              defaultMessage: 'Best for grouping fields like full address, main information, etc...'\n            },\n            value: false\n          }]\n        }]\n      }]\n    };\n  },\n  date: function date() {\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [_nameField.nameField, {\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('modalForm.attribute.text.type-selection'),\n            defaultMessage: 'Type'\n          },\n          name: 'type',\n          type: 'select-date',\n          options: [{\n            key: '__null_reset_value__',\n            value: '',\n            metadatas: {\n              intlLabel: {\n                id: 'components.InputSelect.option.placeholder',\n                defaultMessage: 'Choose here'\n              },\n              hidden: true\n            }\n          }, {\n            key: 'date',\n            value: 'date',\n            metadatas: {\n              intlLabel: {\n                id: (0, _getTrad[\"default\"])('form.attribute.item.date.type.date'),\n                defaultMessage: 'date'\n              }\n            }\n          }, {\n            key: 'datetime',\n            value: 'datetime',\n            metadatas: {\n              intlLabel: {\n                id: (0, _getTrad[\"default\"])('form.attribute.item.date.type.datetime'),\n                defaultMessage: 'datetime'\n              }\n            }\n          }, {\n            key: 'time',\n            value: 'time',\n            metadatas: {\n              intlLabel: {\n                id: (0, _getTrad[\"default\"])('form.attribute.item.date.type.time'),\n                defaultMessage: 'time'\n              }\n            }\n          }]\n        }]\n      }]\n    };\n  },\n  enumeration: function enumeration() {\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [_nameField.nameField]\n      }, {\n        sectionTitle: null,\n        items: [{\n          name: 'enum',\n          type: 'textarea-enum',\n          size: 6,\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('form.attribute.item.enumeration.rules'),\n            defaultMessage: 'Values (one line per value)'\n          },\n          placeholder: {\n            id: (0, _getTrad[\"default\"])('form.attribute.item.enumeration.placeholder'),\n            defaultMessage: 'Ex:\\nmorning\\nnoon\\nevening'\n          },\n          validations: {\n            required: true\n          }\n        }]\n      }]\n    };\n  },\n  media: function media() {\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [_nameField.nameField]\n      }, {\n        sectionTitle: null,\n        items: [{\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('modalForm.attribute.text.type-selection'),\n            defaultMessage: 'Type'\n          },\n          name: 'multiple',\n          size: 12,\n          type: 'boolean-radio-group',\n          radios: [{\n            title: {\n              id: (0, _getTrad[\"default\"])('form.attribute.media.option.multiple'),\n              defaultMessage: 'Multiple media'\n            },\n            description: {\n              id: (0, _getTrad[\"default\"])('form.attribute.media.option.multiple.description'),\n              defaultMessage: 'Best for sliders, carousels or multiple files download'\n            },\n            value: true\n          }, {\n            title: {\n              id: (0, _getTrad[\"default\"])('form.attribute.media.option.single'),\n              defaultMessage: 'Single media'\n            },\n            description: {\n              id: (0, _getTrad[\"default\"])('form.attribute.media.option.single.description'),\n              defaultMessage: 'Best for avatar, profile picture or cover'\n            },\n            value: false\n          }]\n        }]\n      }]\n    };\n  },\n  number: function number() {\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [_nameField.nameField, {\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('form.attribute.item.number.type'),\n            defaultMessage: 'Number format'\n          },\n          name: 'type',\n          type: 'select-number',\n          options: [{\n            key: '__null_reset_value__',\n            value: '',\n            metadatas: {\n              intlLabel: {\n                id: 'components.InputSelect.option.placeholder',\n                defaultMessage: 'Choose here'\n              },\n              hidden: true\n            }\n          }, {\n            key: 'integer',\n            value: 'integer',\n            metadatas: {\n              intlLabel: {\n                id: (0, _getTrad[\"default\"])('form.attribute.item.number.type.integer'),\n                defaultMessage: 'integer (ex: 10)'\n              }\n            }\n          }, {\n            key: 'biginteger',\n            value: 'biginteger',\n            metadatas: {\n              intlLabel: {\n                id: (0, _getTrad[\"default\"])('form.attribute.item.number.type.biginteger'),\n                defaultMessage: 'biginteger (ex: 123456789)'\n              }\n            }\n          }, {\n            key: 'decimal',\n            value: 'decimal',\n            metadatas: {\n              intlLabel: {\n                id: (0, _getTrad[\"default\"])('form.attribute.item.number.type.decimal'),\n                defaultMessage: 'decimal (ex: 2.22)'\n              }\n            }\n          }, {\n            key: 'float',\n            value: 'float',\n            metadatas: {\n              intlLabel: {\n                id: (0, _getTrad[\"default\"])('form.attribute.item.number.type.float'),\n                defaultMessage: 'decimal (ex: 3.3333333)'\n              }\n            }\n          }]\n        }]\n      }]\n    };\n  },\n  relation: function relation() {\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [{\n          intlLabel: {\n            id: 'FIXME',\n            defaultMessage: 'FIXME'\n          },\n          name: 'relation',\n          size: 12,\n          type: 'relation'\n        }]\n      }]\n    };\n  },\n  string: function string() {\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [_nameField.nameField]\n      }, {\n        sectionTitle: null,\n        items: [{\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('modalForm.attribute.text.type-selection'),\n            defaultMessage: 'Type'\n          },\n          name: 'type',\n          size: 12,\n          type: 'radio-group',\n          radios: [{\n            title: {\n              id: (0, _getTrad[\"default\"])('form.attribute.text.option.short-text'),\n              defaultMessage: 'Sort text'\n            },\n            description: {\n              id: (0, _getTrad[\"default\"])('form.attribute.text.option.short-text.description'),\n              defaultMessage: 'Best for titles, names, links (URL). It also enables exact search on the field.'\n            },\n            value: 'string'\n          }, {\n            title: {\n              id: (0, _getTrad[\"default\"])('form.attribute.text.option.long-text'),\n              defaultMessage: 'Long text'\n            },\n            description: {\n              id: (0, _getTrad[\"default\"])('form.attribute.text.option.long-text.description'),\n              defaultMessage: 'Best for descriptions, biography. Exact search is disabled.'\n            },\n            value: 'text'\n          }]\n        }]\n      }]\n    };\n  },\n  text: function text() {\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [_nameField.nameField]\n      }, {\n        sectionTitle: null,\n        items: [{\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('modalForm.attribute.text.type-selection'),\n            defaultMessage: 'Type'\n          },\n          name: 'type',\n          size: 12,\n          type: 'radio-group',\n          radios: [{\n            title: {\n              id: (0, _getTrad[\"default\"])('form.attribute.text.option.short-text'),\n              defaultMessage: 'Sort text'\n            },\n            description: {\n              id: (0, _getTrad[\"default\"])('form.attribute.text.option.short-text.description'),\n              defaultMessage: 'Best for titles, names, links (URL). It also enables exact search on the field.'\n            },\n            value: 'string'\n          }, {\n            title: {\n              id: (0, _getTrad[\"default\"])('form.attribute.text.option.long-text'),\n              defaultMessage: 'Long text'\n            },\n            description: {\n              id: (0, _getTrad[\"default\"])('form.attribute.text.option.long-text.description'),\n              defaultMessage: 'Best for descriptions, biography. Exact search is disabled.'\n            },\n            value: 'text'\n          }]\n        }]\n      }]\n    };\n  },\n  uid: function uid(data, step, attributes) {\n    var options = attributes.filter(function (_ref) {\n      var type = _ref.type;\n      return ['string', 'text'].includes(type);\n    }).map(function (_ref2) {\n      var name = _ref2.name;\n      return {\n        key: name,\n        value: name,\n        metadatas: {\n          intlLabel: {\n            id: \"\".concat(name, \".no-override\"),\n            defaultMessage: name\n          }\n        }\n      };\n    });\n    return {\n      sections: [{\n        sectionTitle: null,\n        items: [_objectSpread(_objectSpread({}, _nameField.nameField), {}, {\n          placeholder: {\n            id: (0, _getTrad[\"default\"])('modalForm.attribute.form.base.name.placeholder'),\n            defaultMessage: 'e.g. Slug, SEO URL, Canonical URL'\n          }\n        }), {\n          intlLabel: {\n            id: (0, _getTrad[\"default\"])('modalForm.attribute.target-field'),\n            defaultMessage: 'Attached field'\n          },\n          name: 'targetField',\n          type: 'select',\n          options: [{\n            key: '__null_reset_value__',\n            value: '',\n            metadatas: {\n              intlLabel: {\n                id: (0, _getTrad[\"default\"])('none'),\n                defaultMessage: 'None'\n              }\n            }\n          }].concat((0, _toConsumableArray2[\"default\"])(options))\n        }]\n      }]\n    };\n  }\n};\nvar _default = baseForm;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}