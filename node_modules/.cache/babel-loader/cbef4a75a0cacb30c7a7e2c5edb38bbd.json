{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDnd = require(\"react-dnd\");\n\nvar _LayoutDndProvider = _interopRequireDefault(require(\"../LayoutDndProvider\"));\n\nvar _ItemTypes = _interopRequireDefault(require(\"../../utils/ItemTypes\"));\n\nvar _DragPreview = _interopRequireDefault(require(\"../RepeatableComponent/DragPreview\"));\n\nvar _CardPreview = _interopRequireDefault(require(\"../../pages/ListSettingsView/components/CardPreview\"));\n\n// import RelationItem from '../SelectMany/Relation';\n// import { Li } from '../SelectMany/components';\n// import DraggedField from '../DraggedField';\nvar layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%'\n};\n\nfunction getItemStyles(initialOffset, currentOffset, mouseOffset) {\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n\n  var x = mouseOffset.x,\n      y = mouseOffset.y; // TODO adjust\n\n  var transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n  return {\n    transform: transform,\n    WebkitTransform: transform\n  };\n}\n\nvar CustomDragLayer = function CustomDragLayer() {\n  var _useDragLayer = (0, _reactDnd.useDragLayer)(function (monitor) {\n    return {\n      item: monitor.getItem(),\n      itemType: monitor.getItemType(),\n      initialOffset: monitor.getInitialSourceClientOffset(),\n      currentOffset: monitor.getSourceClientOffset(),\n      isDragging: monitor.isDragging(),\n      mouseOffset: monitor.getClientOffset()\n    };\n  }),\n      itemType = _useDragLayer.itemType,\n      isDragging = _useDragLayer.isDragging,\n      item = _useDragLayer.item,\n      initialOffset = _useDragLayer.initialOffset,\n      currentOffset = _useDragLayer.currentOffset,\n      mouseOffset = _useDragLayer.mouseOffset;\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_LayoutDndProvider[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: layerStyles\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: getItemStyles(initialOffset, currentOffset, mouseOffset),\n    className: \"col-md-2\"\n  }, [_ItemTypes[\"default\"].EDIT_RELATION, _ItemTypes[\"default\"].EDIT_FIELD, _ItemTypes[\"default\"].FIELD].includes(itemType) && /*#__PURE__*/_react[\"default\"].createElement(_CardPreview[\"default\"], {\n    labelField: item.labelField\n  }), itemType === _ItemTypes[\"default\"].COMPONENT && /*#__PURE__*/_react[\"default\"].createElement(_DragPreview[\"default\"], {\n    displayedValue: item.displayedValue\n  }))));\n};\n\nvar _default = CustomDragLayer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}