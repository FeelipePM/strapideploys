{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Header = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"lodash/isEmpty\"));\n\nvar _ArrowLeft = _interopRequireDefault(require(\"@strapi/icons/ArrowLeft\"));\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _Dialog = require(\"@strapi/design-system/Dialog\");\n\nvar _Link = require(\"@strapi/design-system/Link\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _ExclamationMarkCircle = _interopRequireDefault(require(\"@strapi/icons/ExclamationMarkCircle\"));\n\nvar _Check = _interopRequireDefault(require(\"@strapi/icons/Check\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactFastCompare = _interopRequireDefault(require(\"react-fast-compare\"));\n\nvar _utils = require(\"../../../utils\");\n\nvar _utils2 = require(\"./utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Header = function Header(_ref) {\n  var _ref$allowedActions = _ref.allowedActions,\n      canUpdate = _ref$allowedActions.canUpdate,\n      canCreate = _ref$allowedActions.canCreate,\n      canPublish = _ref$allowedActions.canPublish,\n      componentLayouts = _ref.componentLayouts,\n      initialData = _ref.initialData,\n      isCreatingEntry = _ref.isCreatingEntry,\n      isSingleType = _ref.isSingleType,\n      hasDraftAndPublish = _ref.hasDraftAndPublish,\n      layout = _ref.layout,\n      modifiedData = _ref.modifiedData,\n      onPublish = _ref.onPublish,\n      onUnpublish = _ref.onUnpublish,\n      status = _ref.status;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      goBack = _useHistory.goBack;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      showWarningUnpublish = _useState2[0],\n      setWarningUnpublish = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      showWarningDraftRelation = _useState4[0],\n      setShowWarningDraftRelation = _useState4[1];\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var draftRelationsCountRef = (0, _react.useRef)(0);\n  var currentContentTypeMainField = (0, _get[\"default\"])(layout, ['settings', 'mainField'], 'id');\n  var currentContentTypeName = (0, _get[\"default\"])(layout, ['info', 'displayName'], 'NOT FOUND');\n  var didChangeData = !(0, _isEqual[\"default\"])(initialData, modifiedData) || isCreatingEntry && !(0, _isEmpty[\"default\"])(modifiedData);\n  var createEntryIntlTitle = formatMessage({\n    id: (0, _utils.getTrad)('containers.Edit.pluginHeader.title.new'),\n    defaultMessage: 'Create an entry'\n  });\n  var title = createEntryIntlTitle;\n\n  if (!isCreatingEntry && !isSingleType) {\n    title = initialData[currentContentTypeMainField] || currentContentTypeName;\n  }\n\n  if (isSingleType) {\n    title = currentContentTypeName;\n  }\n\n  var checkIfHasDraftRelations = function checkIfHasDraftRelations() {\n    var count = (0, _utils2.getDraftRelations)(modifiedData, layout, componentLayouts);\n    draftRelationsCountRef.current = count;\n    return count;\n  };\n\n  var primaryAction = null;\n\n  if (isCreatingEntry && canCreate) {\n    primaryAction = /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n      horizontal: true,\n      spacing: 2\n    }, hasDraftAndPublish && /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      disabled: true,\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Check[\"default\"], null),\n      variant: \"secondary\"\n    }, formatMessage({\n      id: 'app.utils.publish',\n      defaultMessage: 'Publish'\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      disabled: !didChangeData,\n      isLoading: status === 'submit-pending',\n      type: \"submit\"\n    }, formatMessage({\n      id: (0, _utils.getTrad)('containers.Edit.submit'),\n      defaultMessage: 'Save'\n    })));\n  }\n\n  if (!isCreatingEntry && canUpdate) {\n    var shouldShowPublishButton = hasDraftAndPublish && canPublish;\n    var isPublished = !(0, _isEmpty[\"default\"])(initialData.publishedAt);\n    var isPublishButtonLoading = isPublished ? status === 'unpublish-pending' : status === 'publish-pending';\n    var pubishButtonLabel = isPublished ? {\n      id: 'app.utils.unpublish',\n      defaultMessage: 'Unpublish'\n    } : {\n      id: 'app.utils.publish',\n      defaultMessage: 'Publish'\n    };\n    /* eslint-disable indent */\n\n    var onClick = isPublished ? function () {\n      return setWarningUnpublish(true);\n    } : function () {\n      if (checkIfHasDraftRelations() === 0) {\n        onPublish();\n      } else {\n        setShowWarningDraftRelation(true);\n      }\n    };\n    /* eslint-enable indent */\n\n    primaryAction = /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, null, shouldShowPublishButton && /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      disabled: didChangeData,\n      loading: isPublishButtonLoading,\n      onClick: onClick,\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Check[\"default\"], null),\n      variant: \"secondary\"\n    }, formatMessage(pubishButtonLabel)), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n      paddingLeft: shouldShowPublishButton ? 2 : 0\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      disabled: !didChangeData,\n      loading: status === 'submit-pending',\n      type: \"submit\"\n    }, formatMessage({\n      id: (0, _utils.getTrad)('containers.Edit.submit'),\n      defaultMessage: 'Save'\n    }))));\n  }\n\n  var toggleWarningUnpublish = function toggleWarningUnpublish() {\n    return setWarningUnpublish(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var toggleWarningDraftRelation = function toggleWarningDraftRelation() {\n    return setShowWarningDraftRelation(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var handlePublish = function handlePublish() {\n    toggleWarningDraftRelation();\n    draftRelationsCountRef.current = 0;\n    onPublish();\n  };\n\n  var handleUnpublish = function handleUnpublish() {\n    toggleWarningUnpublish();\n    onUnpublish();\n  };\n\n  var subtitle = \"\".concat(formatMessage({\n    id: (0, _utils.getTrad)('api.id'),\n    defaultMessage: 'API ID '\n  }), \" : \").concat(layout.apiID);\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Layout.HeaderLayout, {\n    title: title.toString(),\n    primaryAction: primaryAction,\n    subtitle: subtitle,\n    navigationAction: /*#__PURE__*/_react[\"default\"].createElement(_Link.Link, {\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_ArrowLeft[\"default\"], null) // Needed in order to redirect the user with the correct search params\n      // Since parts is using a link from react-router-dom the best way to do it is to disable the\n      // event\n      ,\n      onClick: function onClick(e) {\n        e.preventDefault();\n        goBack();\n      },\n      to: \"/\"\n    }, formatMessage({\n      id: 'app.components.HeaderLayout.link.go-back',\n      defaultMessage: 'Back'\n    }))\n  }), showWarningUnpublish && /*#__PURE__*/_react[\"default\"].createElement(_Dialog.Dialog, {\n    onClose: toggleWarningUnpublish,\n    title: \"Confirmation\",\n    labelledBy: \"confirmation\",\n    describedBy: \"confirm-description\",\n    isOpen: showWarningUnpublish\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Dialog.DialogBody, {\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_ExclamationMarkCircle[\"default\"], null)\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 2\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    justifyContent: \"center\",\n    style: {\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    id: \"confirm-description\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('popUpWarning.warning.unpublish'),\n    defaultMessage: 'Unpublish this content will automatically change it to a draft.'\n  }, {\n    br: function br() {\n      return /*#__PURE__*/_react[\"default\"].createElement(\"br\", null);\n    }\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    justifyContent: \"center\",\n    style: {\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    id: \"confirm-description\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('popUpWarning.warning.unpublish-question'),\n    defaultMessage: 'Are you sure you want to unpublish it?'\n  }))))), /*#__PURE__*/_react[\"default\"].createElement(_Dialog.DialogFooter, {\n    startAction: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      onClick: toggleWarningUnpublish,\n      variant: \"tertiary\"\n    }, formatMessage({\n      id: 'components.popUpWarning.button.cancel',\n      defaultMessage: 'No, cancel'\n    })),\n    endAction: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      variant: \"danger-light\",\n      onClick: handleUnpublish\n    }, formatMessage({\n      id: 'components.popUpWarning.button.confirm',\n      defaultMessage: 'Yes, confirm'\n    }))\n  })), showWarningDraftRelation && /*#__PURE__*/_react[\"default\"].createElement(_Dialog.Dialog, {\n    onClose: toggleWarningDraftRelation,\n    title: \"Confirmation\",\n    labelledBy: \"confirmation\",\n    describedBy: \"confirm-description\",\n    isOpen: showWarningDraftRelation\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Dialog.DialogBody, {\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_ExclamationMarkCircle[\"default\"], null)\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 2\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    justifyContent: \"center\",\n    style: {\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    id: \"confirm-description\"\n  }, draftRelationsCountRef.current, formatMessage({\n    id: (0, _utils.getTrad)(\"popUpwarning.warning.has-draft-relations.message\"),\n    defaultMessage: '<b>{count, plural, =0 { of your content relations is} one { of your content relations is} other { of your content relations are}}</b> not published yet.<br></br>It might engender broken links and errors on your project.'\n  }, {\n    br: function br() {\n      return /*#__PURE__*/_react[\"default\"].createElement(\"br\", null);\n    },\n    b: function b(chunks) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n        fontWeight: \"bold\"\n      }, chunks);\n    },\n    count: draftRelationsCountRef.current\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    justifyContent: \"center\",\n    style: {\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    id: \"confirm-description\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('popUpWarning.warning.publish-question'),\n    defaultMessage: 'Do you still want to publish it?'\n  }))))), /*#__PURE__*/_react[\"default\"].createElement(_Dialog.DialogFooter, {\n    startAction: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      onClick: toggleWarningDraftRelation,\n      variant: \"tertiary\"\n    }, formatMessage({\n      id: 'components.popUpWarning.button.cancel',\n      defaultMessage: 'No, cancel'\n    })),\n    endAction: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      variant: \"success\",\n      onClick: handlePublish\n    }, formatMessage({\n      id: (0, _utils.getTrad)('popUpwarning.warning.has-draft-relations.button-confirm'),\n      defaultMessage: 'Yes, publish'\n    }))\n  })));\n};\n\nexports.Header = Header;\nHeader.propTypes = {\n  allowedActions: _propTypes[\"default\"].shape({\n    canUpdate: _propTypes[\"default\"].bool.isRequired,\n    canCreate: _propTypes[\"default\"].bool.isRequired,\n    canPublish: _propTypes[\"default\"].bool.isRequired\n  }).isRequired,\n  componentLayouts: _propTypes[\"default\"].object.isRequired,\n  initialData: _propTypes[\"default\"].object.isRequired,\n  isCreatingEntry: _propTypes[\"default\"].bool.isRequired,\n  isSingleType: _propTypes[\"default\"].bool.isRequired,\n  status: _propTypes[\"default\"].string.isRequired,\n  layout: _propTypes[\"default\"].object.isRequired,\n  hasDraftAndPublish: _propTypes[\"default\"].bool.isRequired,\n  modifiedData: _propTypes[\"default\"].object.isRequired,\n  onPublish: _propTypes[\"default\"].func.isRequired,\n  onUnpublish: _propTypes[\"default\"].func.isRequired\n};\nvar Memoized = /*#__PURE__*/(0, _react.memo)(Header, _reactFastCompare[\"default\"]);\n\nvar _default = (0, _utils2.connect)(Memoized, _utils2.select);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}