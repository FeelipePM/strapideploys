{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MediaLibraryInput = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _AssetDialog = require(\"../AssetDialog\");\n\nvar _constants = require(\"../../constants\");\n\nvar _CarouselAssets = require(\"./Carousel/CarouselAssets\");\n\nvar _UploadAssetDialog = require(\"../UploadAssetDialog/UploadAssetDialog\");\n\nvar _getAllowedFiles = _interopRequireDefault(require(\"../../utils/getAllowedFiles\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar Steps = {\n  SelectAsset: 'SelectAsset',\n  UploadAsset: 'UploadAsset'\n};\n\nvar MediaLibraryInput = function MediaLibraryInput(_ref) {\n  var allowedTypes = _ref.attribute.allowedTypes,\n      intlLabel = _ref.intlLabel,\n      description = _ref.description,\n      disabled = _ref.disabled,\n      error = _ref.error,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      required = _ref.required;\n  var fieldAllowedTypes = allowedTypes || ['files', 'images', 'videos', 'audios'];\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      uploadedFiles = _useState2[0],\n      setUploadedFiles = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(undefined),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      step = _useState4[0],\n      setStep = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      selectedIndex = _useState6[0],\n      setSelectedIndex = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      droppedAssets = _useState8[0],\n      setDroppedAssets = _useState8[1];\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  (0, _react.useEffect)(function () {\n    // Clear the uploaded files on close\n    if (step === undefined) {\n      setUploadedFiles([]);\n    }\n  }, [step]);\n  var selectedAssets = Array.isArray(value) ? value : [value];\n\n  var handleValidation = function handleValidation(nextSelectedAssets) {\n    onChange({\n      target: {\n        name: name,\n        value: multiple ? nextSelectedAssets : nextSelectedAssets[0]\n      }\n    });\n    setStep(undefined);\n  };\n\n  var handleDeleteAssetFromMediaLibrary = function handleDeleteAssetFromMediaLibrary() {\n    var nextValue;\n\n    if (multiple) {\n      var nextSelectedAssets = selectedAssets.filter(function (_, assetIndex) {\n        return assetIndex !== selectedIndex;\n      });\n      nextValue = nextSelectedAssets.length > 0 ? nextSelectedAssets : null;\n    } else {\n      nextValue = null;\n    }\n\n    onChange({\n      target: {\n        name: name,\n        value: nextValue\n      }\n    });\n    setSelectedIndex(0);\n  };\n\n  var handleDeleteAsset = function handleDeleteAsset(asset) {\n    var nextValue;\n\n    if (multiple) {\n      var nextSelectedAssets = selectedAssets.filter(function (prevAsset) {\n        return prevAsset.id !== asset.id;\n      });\n      nextValue = nextSelectedAssets.length > 0 ? nextSelectedAssets : null;\n    } else {\n      nextValue = null;\n    }\n\n    onChange({\n      target: {\n        name: name,\n        value: nextValue\n      }\n    });\n    setSelectedIndex(0);\n  };\n\n  var handleAssetEdit = function handleAssetEdit(asset) {\n    var nextSelectedAssets = selectedAssets.map(function (prevAsset) {\n      return prevAsset.id === asset.id ? asset : prevAsset;\n    });\n    onChange({\n      target: {\n        name: name,\n        value: multiple ? nextSelectedAssets : nextSelectedAssets[0]\n      }\n    });\n  };\n\n  var handleAssetDrop = function handleAssetDrop(assets) {\n    setDroppedAssets(assets);\n    setStep(Steps.UploadAsset);\n  };\n\n  var label = intlLabel.id ? formatMessage(intlLabel) : '';\n\n  if (multiple && selectedAssets.length > 0) {\n    label = \"\".concat(label, \" (\").concat(selectedIndex + 1, \" / \").concat(selectedAssets.length, \")\");\n  }\n\n  var handleNext = function handleNext() {\n    setSelectedIndex(function (current) {\n      return current < selectedAssets.length - 1 ? current + 1 : 0;\n    });\n  };\n\n  var handlePrevious = function handlePrevious() {\n    setSelectedIndex(function (current) {\n      return current > 0 ? current - 1 : selectedAssets.length - 1;\n    });\n  };\n\n  var handleFilesUploadSucceeded = function handleFilesUploadSucceeded(uploadedFiles) {\n    setUploadedFiles(function (prev) {\n      return [].concat((0, _toConsumableArray2[\"default\"])(prev), (0, _toConsumableArray2[\"default\"])(uploadedFiles));\n    });\n  };\n\n  var errorMessage = error ? formatMessage({\n    id: error,\n    defaultMessage: error\n  }) : '';\n  var hint = description ? formatMessage({\n    id: description.id,\n    defaultMessage: description.defaultMessage\n  }, _objectSpread({}, description.values)) : '';\n  var initiallySelectedAssets = selectedAssets;\n\n  if (uploadedFiles.length > 0) {\n    var allowedUploadedFiles = (0, _getAllowedFiles[\"default\"])(fieldAllowedTypes, uploadedFiles);\n    initiallySelectedAssets = multiple ? [].concat((0, _toConsumableArray2[\"default\"])(allowedUploadedFiles), (0, _toConsumableArray2[\"default\"])(selectedAssets)) : [allowedUploadedFiles[0]];\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_CarouselAssets.CarouselAssets, {\n    assets: selectedAssets,\n    disabled: disabled,\n    label: label,\n    onDeleteAsset: handleDeleteAsset,\n    onDeleteAssetFromMediaLibrary: handleDeleteAssetFromMediaLibrary,\n    onAddAsset: function onAddAsset() {\n      return setStep(Steps.SelectAsset);\n    },\n    onDropAsset: handleAssetDrop,\n    onEditAsset: handleAssetEdit,\n    onNext: handleNext,\n    onPrevious: handlePrevious,\n    error: errorMessage,\n    hint: hint,\n    required: required,\n    selectedAssetIndex: selectedIndex,\n    trackedLocation: \"content-manager\"\n  }), step === Steps.SelectAsset && /*#__PURE__*/_react[\"default\"].createElement(_AssetDialog.AssetDialog, {\n    allowedTypes: fieldAllowedTypes,\n    initiallySelectedAssets: initiallySelectedAssets,\n    onClose: function onClose() {\n      return setStep(undefined);\n    },\n    onValidate: handleValidation,\n    multiple: multiple,\n    onAddAsset: function onAddAsset() {\n      return setStep(Steps.UploadAsset);\n    },\n    trackedLocation: \"content-manager\"\n  }), step === Steps.UploadAsset && /*#__PURE__*/_react[\"default\"].createElement(_UploadAssetDialog.UploadAssetDialog, {\n    onClose: function onClose() {\n      return setStep(Steps.SelectAsset);\n    },\n    initialAssetsToAdd: droppedAssets,\n    addUploadedFiles: handleFilesUploadSucceeded,\n    trackedLocation: \"content-manager\"\n  }));\n};\n\nexports.MediaLibraryInput = MediaLibraryInput;\nMediaLibraryInput.defaultProps = {\n  attribute: {\n    allowedTypes: ['videos', 'files', 'images', 'audios']\n  },\n  disabled: false,\n  description: undefined,\n  error: undefined,\n  intlLabel: undefined,\n  multiple: false,\n  required: false,\n  value: []\n};\nMediaLibraryInput.propTypes = {\n  attribute: _propTypes[\"default\"].shape({\n    allowedTypes: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)\n  }),\n  disabled: _propTypes[\"default\"].bool,\n  description: _propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].string,\n    defaultMessage: _propTypes[\"default\"].string,\n    values: _propTypes[\"default\"].shape({})\n  }),\n  error: _propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].string,\n    defaultMessage: _propTypes[\"default\"].string\n  }),\n  intlLabel: _propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].string,\n    defaultMessage: _propTypes[\"default\"].string\n  }),\n  multiple: _propTypes[\"default\"].bool,\n  onChange: _propTypes[\"default\"].func.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  required: _propTypes[\"default\"].bool,\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_constants.AssetDefinition), _constants.AssetDefinition])\n};","map":null,"metadata":{},"sourceType":"script"}