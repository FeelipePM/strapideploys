{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Grid = require(\"@strapi/design-system/Grid\");\n\nvar _Select = require(\"@strapi/design-system/Select\");\n\nvar _ToggleInput = require(\"@strapi/design-system/ToggleInput\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _utils = require(\"../../../utils\");\n\nvar FlexGap = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Flex.Flex).withConfig({\n  displayName: \"Settings__FlexGap\",\n  componentId: \"sc-j3a1zy-0\"\n})([\"gap:\", \";\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.spaces[4];\n});\n\nvar Settings = function Settings(_ref2) {\n  var modifiedData = _ref2.modifiedData,\n      _onChange = _ref2.onChange,\n      sortOptions = _ref2.sortOptions;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var settings = modifiedData.settings;\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    paddingBottom: 4\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"delta\",\n    as: \"h2\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('containers.SettingPage.settings'),\n    defaultMessage: 'Settings'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(FlexGap, {\n    justifyContent: \"space-between\",\n    wrap: \"wrap\",\n    paddingBottom: 6\n  }, /*#__PURE__*/_react[\"default\"].createElement(_ToggleInput.ToggleInput, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('form.Input.search'),\n      defaultMessage: 'Enable search'\n    }),\n    onChange: function onChange(e) {\n      _onChange({\n        target: {\n          name: 'settings.searchable',\n          value: e.target.checked\n        }\n      });\n    },\n    onLabel: formatMessage({\n      id: 'app.components.ToggleCheckbox.on-label',\n      defaultMessage: 'on'\n    }),\n    offLabel: formatMessage({\n      id: 'app.components.ToggleCheckbox.off-label',\n      defaultMessage: 'off'\n    }),\n    name: \"settings.searchable\",\n    checked: settings.searchable\n  }), /*#__PURE__*/_react[\"default\"].createElement(_ToggleInput.ToggleInput, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('form.Input.filters'),\n      defaultMessage: 'Enable filters'\n    }),\n    onChange: function onChange(e) {\n      _onChange({\n        target: {\n          name: 'settings.filterable',\n          value: e.target.checked\n        }\n      });\n    },\n    onLabel: formatMessage({\n      id: 'app.components.ToggleCheckbox.on-label',\n      defaultMessage: 'on'\n    }),\n    offLabel: formatMessage({\n      id: 'app.components.ToggleCheckbox.off-label',\n      defaultMessage: 'off'\n    }),\n    name: \"settings.filterable\",\n    checked: settings.filterable\n  }), /*#__PURE__*/_react[\"default\"].createElement(_ToggleInput.ToggleInput, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('form.Input.bulkActions'),\n      defaultMessage: 'Enable bulk actions'\n    }),\n    onChange: function onChange(e) {\n      _onChange({\n        target: {\n          name: 'settings.bulkable',\n          value: e.target.checked\n        }\n      });\n    },\n    onLabel: formatMessage({\n      id: 'app.components.ToggleCheckbox.on-label',\n      defaultMessage: 'on'\n    }),\n    offLabel: formatMessage({\n      id: 'app.components.ToggleCheckbox.off-label',\n      defaultMessage: 'off'\n    }),\n    name: \"settings.bulkable\",\n    checked: settings.bulkable\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.Grid, {\n    gap: 4\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n    s: 12,\n    col: 6\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Select.Select, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('form.Input.pageEntries'),\n      defaultMessage: 'Entries per page'\n    }),\n    hint: formatMessage({\n      id: (0, _utils.getTrad)('form.Input.pageEntries.inputDescription'),\n      defaultMessage: 'Note: You can override this value in the Collection Type settings page.'\n    }),\n    onChange: function onChange(value) {\n      return _onChange({\n        target: {\n          name: 'settings.pageSize',\n          value: value\n        }\n      });\n    },\n    name: \"settings.pageSize\",\n    value: modifiedData.settings.pageSize || ''\n  }, [10, 20, 50, 100].map(function (pageSize) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Select.Option, {\n      key: pageSize,\n      value: pageSize\n    }, pageSize);\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n    s: 12,\n    col: 3\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Select.Select, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('form.Input.defaultSort'),\n      defaultMessage: 'Default sort attribute'\n    }),\n    onChange: function onChange(value) {\n      return _onChange({\n        target: {\n          name: 'settings.defaultSortBy',\n          value: value\n        }\n      });\n    },\n    name: \"settings.defaultSortBy\",\n    value: modifiedData.settings.defaultSortBy || ''\n  }, sortOptions.map(function (sortBy) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Select.Option, {\n      key: sortBy,\n      value: sortBy\n    }, sortBy);\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n    s: 12,\n    col: 3\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Select.Select, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('form.Input.sort.order'),\n      defaultMessage: 'Default sort order'\n    }),\n    onChange: function onChange(value) {\n      return _onChange({\n        target: {\n          name: 'settings.defaultSortOrder',\n          value: value\n        }\n      });\n    },\n    name: \"settings.defaultSortOrder\",\n    value: modifiedData.settings.defaultSortOrder || ''\n  }, ['ASC', 'DESC'].map(function (order) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Select.Option, {\n      key: order,\n      value: order\n    }, order);\n  })))));\n};\n\nSettings.defaultProps = {\n  modifiedData: {},\n  sortOptions: []\n};\nSettings.propTypes = {\n  modifiedData: _propTypes[\"default\"].object,\n  onChange: _propTypes[\"default\"].func.isRequired,\n  sortOptions: _propTypes[\"default\"].array\n};\nvar _default = Settings;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}