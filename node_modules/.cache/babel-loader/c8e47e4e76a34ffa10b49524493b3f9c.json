{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _omit = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _Main = require(\"@strapi/design-system/Main\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Link = require(\"@strapi/design-system/Link\");\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _TextInput = require(\"@strapi/design-system/TextInput\");\n\nvar _Checkbox = require(\"@strapi/design-system/Checkbox\");\n\nvar _Grid = require(\"@strapi/design-system/Grid\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _EyeStriked = _interopRequireDefault(require(\"@strapi/icons/EyeStriked\"));\n\nvar _Eye = _interopRequireDefault(require(\"@strapi/icons/Eye\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _formik = require(\"formik\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _UnauthenticatedLayout = _interopRequireWildcard(require(\"../../../../layouts/UnauthenticatedLayout\"));\n\nvar _UnauthenticatedLogo = _interopRequireDefault(require(\"../../../../components/UnauthenticatedLogo\"));\n\nvar _FieldActionWrapper = _interopRequireDefault(require(\"../FieldActionWrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar CenteredBox = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Box.Box).withConfig({\n  displayName: \"Register__CenteredBox\",\n  componentId: \"sc-1j1wuoi-0\"\n})([\"text-align:center;\"]);\n\nvar A = /*#__PURE__*/_styledComponents[\"default\"].a.withConfig({\n  displayName: \"Register__A\",\n  componentId: \"sc-1j1wuoi-1\"\n})([\"color:\", \";\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.colors.primary600;\n});\n\nvar PasswordInput = /*#__PURE__*/(0, _styledComponents[\"default\"])(_TextInput.TextInput).withConfig({\n  displayName: \"Register__PasswordInput\",\n  componentId: \"sc-1j1wuoi-2\"\n})([\"::-ms-reveal{display:none;}\"]);\n\nvar Register = function Register(_ref2) {\n  var authType = _ref2.authType,\n      fieldsToDisable = _ref2.fieldsToDisable,\n      noSignin = _ref2.noSignin,\n      onSubmit = _ref2.onSubmit,\n      schema = _ref2.schema;\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      passwordShown = _useState2[0],\n      setPasswordShown = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      confirmPasswordShown = _useState4[0],\n      setConfirmPasswordShown = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      submitCount = _useState6[0],\n      setSubmitCount = _useState6[1];\n\n  var _useState7 = (0, _react.useState)({}),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      userInfo = _useState8[0],\n      setUserInfo = _useState8[1];\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var query = (0, _helperPlugin.useQuery)();\n  var registrationToken = query.get('registrationToken');\n  (0, _react.useEffect)(function () {\n    if (registrationToken) {\n      var getData = /*#__PURE__*/function () {\n        var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n          var _yield$axios$get, data, errorMessage;\n\n          return _regenerator[\"default\"].wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return _axios[\"default\"].get(\"\".concat(strapi.backendURL, \"/admin/registration-info?registrationToken=\").concat(registrationToken));\n\n                case 3:\n                  _yield$axios$get = _context.sent;\n                  data = _yield$axios$get.data.data;\n\n                  if (data) {\n                    setUserInfo(data);\n                  }\n\n                  _context.next = 13;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  errorMessage = (0, _get[\"default\"])(_context.t0, ['response', 'data', 'message'], 'An error occurred');\n                  toggleNotification({\n                    type: 'warning',\n                    message: errorMessage\n                  }); // Redirect to the oops page in case of an invalid token\n                  // @alexandrebodin @JAB I am not sure it is the wanted behavior\n\n                  push(\"/auth/oops?info=\".concat(encodeURIComponent(errorMessage)));\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 8]]);\n        }));\n\n        return function getData() {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      getData();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [registrationToken]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_UnauthenticatedLayout[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_UnauthenticatedLayout.LayoutContent, null, /*#__PURE__*/_react[\"default\"].createElement(_formik.Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      firstname: userInfo.firstname || '',\n      lastname: userInfo.lastname || '',\n      email: userInfo.email || '',\n      password: '',\n      confirmPassword: '',\n      registrationToken: registrationToken || undefined,\n      news: false\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(data, formik) {\n        var errors;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return schema.validate(data, {\n                  abortEarly: false\n                });\n\n              case 3:\n                if (submitCount > 0 && authType === 'register-admin') {\n                  trackUsage('didSubmitWithErrorsFirstAdmin', {\n                    count: submitCount.toString()\n                  });\n                }\n\n                if (registrationToken) {\n                  // We need to pass the registration token in the url param to the api in order to submit another admin user\n                  onSubmit({\n                    userInfo: (0, _omit[\"default\"])(data, ['registrationToken']),\n                    registrationToken: registrationToken\n                  }, formik);\n                } else {\n                  onSubmit(data, formik);\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                errors = (0, _helperPlugin.getYupInnerErrors)(_context2.t0);\n                setSubmitCount(submitCount + 1);\n                formik.setErrors(errors);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }() // Leaving this part commented when we remove the tracking for the submitCount\n    // validationSchema={schema}\n    ,\n    validateOnChange: false\n  }, function (_ref5) {\n    var values = _ref5.values,\n        errors = _ref5.errors,\n        handleChange = _ref5.handleChange;\n    return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.Form, {\n      noValidate: true\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, null, /*#__PURE__*/_react[\"default\"].createElement(_UnauthenticatedLayout.Column, null, /*#__PURE__*/_react[\"default\"].createElement(_UnauthenticatedLogo[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n      paddingTop: 6,\n      paddingBottom: 1\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n      as: \"h1\",\n      variant: \"alpha\"\n    }, formatMessage({\n      id: 'Auth.form.welcome.title',\n      defaultMessage: 'Welcome!'\n    }))), /*#__PURE__*/_react[\"default\"].createElement(CenteredBox, {\n      paddingBottom: 7\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n      variant: \"epsilon\",\n      textColor: \"neutral600\"\n    }, formatMessage({\n      id: 'Auth.form.register.subtitle',\n      defaultMessage: 'Your credentials are only used to authenticate yourself on the admin panel. All saved data will be stored in your own database.'\n    })))), /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n      spacing: 7\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Grid.Grid, {\n      gap: 4\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n      col: 6\n    }, /*#__PURE__*/_react[\"default\"].createElement(_TextInput.TextInput, {\n      name: \"firstname\",\n      required: true,\n      value: values.firstname,\n      error: errors.firstname ? formatMessage(errors.firstname) : undefined,\n      onChange: handleChange,\n      label: formatMessage({\n        id: 'Auth.form.firstname.label',\n        defaultMessage: 'Firstname'\n      })\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n      col: 6\n    }, /*#__PURE__*/_react[\"default\"].createElement(_TextInput.TextInput, {\n      name: \"lastname\",\n      value: values.lastname,\n      onChange: handleChange,\n      label: formatMessage({\n        id: 'Auth.form.lastname.label',\n        defaultMessage: 'Lastname'\n      })\n    }))), /*#__PURE__*/_react[\"default\"].createElement(_TextInput.TextInput, {\n      name: \"email\",\n      disabled: fieldsToDisable.includes('email'),\n      value: values.email,\n      onChange: handleChange,\n      error: errors.email ? formatMessage(errors.email) : undefined,\n      required: true,\n      label: formatMessage({\n        id: 'Auth.form.email.label',\n        defaultMessage: 'Email'\n      }),\n      type: \"email\"\n    }), /*#__PURE__*/_react[\"default\"].createElement(PasswordInput, {\n      name: \"password\",\n      onChange: handleChange,\n      value: values.password,\n      error: errors.password ? formatMessage(errors.password) : undefined,\n      endAction:\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-wrap-multilines\n      _react[\"default\"].createElement(_FieldActionWrapper[\"default\"], {\n        onClick: function onClick(e) {\n          e.preventDefault();\n          setPasswordShown(function (prev) {\n            return !prev;\n          });\n        },\n        label: formatMessage(passwordShown ? {\n          id: 'Auth.form.password.show-password',\n          defaultMessage: 'Show password'\n        } : {\n          id: 'Auth.form.password.hide-password',\n          defaultMessage: 'Hide password'\n        })\n      }, passwordShown ? /*#__PURE__*/_react[\"default\"].createElement(_Eye[\"default\"], null) : /*#__PURE__*/_react[\"default\"].createElement(_EyeStriked[\"default\"], null)),\n      hint: formatMessage({\n        id: 'Auth.form.password.hint',\n        defaultMessage: 'Password must contain at least 8 characters, 1 uppercase, 1 lowercase and 1 number'\n      }),\n      required: true,\n      label: formatMessage({\n        id: 'Auth.form.password.label',\n        defaultMessage: 'Password'\n      }),\n      type: passwordShown ? 'text' : 'password'\n    }), /*#__PURE__*/_react[\"default\"].createElement(PasswordInput, {\n      name: \"confirmPassword\",\n      onChange: handleChange,\n      value: values.confirmPassword,\n      error: errors.confirmPassword ? formatMessage(errors.confirmPassword) : undefined,\n      endAction:\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-wrap-multilines\n      _react[\"default\"].createElement(_FieldActionWrapper[\"default\"], {\n        onClick: function onClick(e) {\n          e.preventDefault();\n          setConfirmPasswordShown(function (prev) {\n            return !prev;\n          });\n        },\n        label: formatMessage(confirmPasswordShown ? {\n          id: 'Auth.form.password.show-password',\n          defaultMessage: 'Show password'\n        } : {\n          id: 'Auth.form.password.hide-password',\n          defaultMessage: 'Hide password'\n        })\n      }, confirmPasswordShown ? /*#__PURE__*/_react[\"default\"].createElement(_Eye[\"default\"], null) : /*#__PURE__*/_react[\"default\"].createElement(_EyeStriked[\"default\"], null)),\n      required: true,\n      label: formatMessage({\n        id: 'Auth.form.confirmPassword.label',\n        defaultMessage: 'Confirmation Password'\n      }),\n      type: confirmPasswordShown ? 'text' : 'password'\n    }), /*#__PURE__*/_react[\"default\"].createElement(_Checkbox.Checkbox, {\n      onValueChange: function onValueChange(checked) {\n        handleChange({\n          target: {\n            value: checked,\n            name: 'news'\n          }\n        });\n      },\n      value: values.news,\n      name: \"news\",\n      \"aria-label\": \"news\"\n    }, formatMessage({\n      id: 'Auth.form.register.news.label',\n      defaultMessage: 'Keep me updated about the new features and upcoming improvements (by doing this you accept the {terms} and the {policy}).'\n    }, {\n      terms: /*#__PURE__*/_react[\"default\"].createElement(A, {\n        target: \"_blank\",\n        href: \"https://strapi.io/terms\",\n        rel: \"noreferrer\"\n      }, formatMessage({\n        id: 'Auth.privacy-policy-agreement.terms',\n        defaultMessage: 'terms'\n      })),\n      policy: /*#__PURE__*/_react[\"default\"].createElement(A, {\n        target: \"_blank\",\n        href: \"https://strapi.io/privacy\",\n        rel: \"noreferrer\"\n      }, formatMessage({\n        id: 'Auth.privacy-policy-agreement.policy',\n        defaultMessage: 'policy'\n      }))\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      fullWidth: true,\n      size: \"L\",\n      type: \"submit\"\n    }, formatMessage({\n      id: 'Auth.form.button.register',\n      defaultMessage: \"Let's start\"\n    })))));\n  }), !noSignin && /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    paddingTop: 4\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    justifyContent: \"center\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Link.Link, {\n    label: \"Auth.link.signin\",\n    to: \"/auth/login\"\n  }, formatMessage({\n    id: 'Auth.link.signin.account',\n    defaultMessage: 'Already have an account?'\n  }))))));\n};\n\nRegister.defaultProps = {\n  fieldsToDisable: [],\n  noSignin: false,\n  onSubmit: function onSubmit(e) {\n    return e.preventDefault();\n  }\n};\nRegister.propTypes = {\n  authType: _propTypes[\"default\"].string.isRequired,\n  fieldsToDisable: _propTypes[\"default\"].array,\n  noSignin: _propTypes[\"default\"].bool,\n  onSubmit: _propTypes[\"default\"].func,\n  schema: _propTypes[\"default\"].shape({\n    validate: _propTypes[\"default\"].func.isRequired,\n    type: _propTypes[\"default\"].string.isRequired\n  }).isRequired\n};\nvar _default = Register;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}