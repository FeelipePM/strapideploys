{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageAssetCard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Card = require(\"@strapi/design-system/Card\");\n\nvar _IconButton = require(\"@strapi/design-system/IconButton\");\n\nvar _Pencil = _interopRequireDefault(require(\"@strapi/icons/Pencil\"));\n\nvar _Trash = _interopRequireDefault(require(\"@strapi/icons/Trash\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _utils = require(\"../../utils\");\n\nvar Extension = /*#__PURE__*/_styledComponents[\"default\"].span.withConfig({\n  displayName: \"ImageAssetCard__Extension\",\n  componentId: \"sc-yjoyh2-0\"\n})([\"text-transform:uppercase;\"]);\n\nvar ImageAssetCard = function ImageAssetCard(_ref) {\n  var name = _ref.name,\n      extension = _ref.extension,\n      height = _ref.height,\n      width = _ref.width,\n      thumbnail = _ref.thumbnail,\n      selected = _ref.selected,\n      onSelect = _ref.onSelect,\n      onEdit = _ref.onEdit,\n      onRemove = _ref.onRemove,\n      size = _ref.size,\n      alt = _ref.alt;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage; // Prevents the browser from caching the URL for all sizes and allow react-query to make a smooth update\n  // instead of a full refresh\n\n\n  var optimizedCachingThumbnail = width && height ? \"\".concat(thumbnail, \"?width=\").concat(width, \"&height=\").concat(height) : thumbnail;\n  return /*#__PURE__*/_react[\"default\"].createElement(_Card.Card, null, /*#__PURE__*/_react[\"default\"].createElement(_Card.CardHeader, null, onSelect && /*#__PURE__*/_react[\"default\"].createElement(_Card.CardCheckbox, {\n    value: selected,\n    onValueChange: onSelect\n  }), (onRemove || onEdit) && /*#__PURE__*/_react[\"default\"].createElement(_Card.CardAction, {\n    position: \"end\"\n  }, onRemove && /*#__PURE__*/_react[\"default\"].createElement(_IconButton.IconButton, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('control-card.remove-selection'),\n      defaultMessage: 'Remove from selection'\n    }),\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_Trash[\"default\"], null),\n    onClick: onRemove\n  }), onEdit && /*#__PURE__*/_react[\"default\"].createElement(_IconButton.IconButton, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('control-card.edit'),\n      defaultMessage: 'Edit'\n    }),\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_Pencil[\"default\"], null),\n    onClick: onEdit\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Card.CardAsset, {\n    src: optimizedCachingThumbnail,\n    size: size,\n    alt: alt\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Card.CardBody, null, /*#__PURE__*/_react[\"default\"].createElement(_Card.CardContent, null, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    paddingTop: 1\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Card.CardTitle, {\n    as: \"h2\"\n  }, name)), /*#__PURE__*/_react[\"default\"].createElement(_Card.CardSubtitle, null, /*#__PURE__*/_react[\"default\"].createElement(Extension, null, extension), height && width && \" - \".concat(width, \"\\u2715\").concat(height))), /*#__PURE__*/_react[\"default\"].createElement(_Card.CardBadge, null, formatMessage({\n    id: (0, _utils.getTrad)('settings.section.image.label'),\n    defaultMessage: 'Image'\n  }))));\n};\n\nexports.ImageAssetCard = ImageAssetCard;\nImageAssetCard.defaultProps = {\n  height: undefined,\n  width: undefined,\n  selected: false,\n  onEdit: undefined,\n  onSelect: undefined,\n  onRemove: undefined,\n  size: 'M'\n};\nImageAssetCard.propTypes = {\n  alt: _propTypes[\"default\"].string.isRequired,\n  extension: _propTypes[\"default\"].string.isRequired,\n  height: _propTypes[\"default\"].number,\n  name: _propTypes[\"default\"].string.isRequired,\n  onEdit: _propTypes[\"default\"].func,\n  onSelect: _propTypes[\"default\"].func,\n  onRemove: _propTypes[\"default\"].func,\n  width: _propTypes[\"default\"].number,\n  thumbnail: _propTypes[\"default\"].string.isRequired,\n  selected: _propTypes[\"default\"].bool,\n  size: _propTypes[\"default\"].oneOf(['S', 'M'])\n};","map":null,"metadata":{},"sourceType":"script"}