{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _SimpleMenu = require(\"@strapi/design-system/SimpleMenu\");\n\nvar _useDataManager2 = _interopRequireDefault(require(\"../../../../hooks/useDataManager\"));\n\nvar _constants = require(\"../../../FormModal/constants\");\n\nvar _utils = require(\"../../../../utils\");\n\nvar RelationTargetPicker = function RelationTargetPicker(_ref) {\n  var oneThatIsCreatingARelationWithAnother = _ref.oneThatIsCreatingARelationWithAnother,\n      target = _ref.target;\n\n  var _useDataManager = (0, _useDataManager2[\"default\"])(),\n      contentTypes = _useDataManager.contentTypes,\n      sortedContentTypesList = _useDataManager.sortedContentTypesList;\n\n  var dispatch = (0, _reactRedux.useDispatch)(); // TODO: replace with an obj { relation: 'x', bidirctional: true|false }\n\n  var allowedContentTypesForRelation = sortedContentTypesList.filter(_utils.isAllowedContentTypesForRelations);\n  var plugin = (0, _get[\"default\"])(contentTypes, [target, 'plugin'], null);\n  var targetFriendlyName = (0, _get[\"default\"])(contentTypes, [target, 'schema', 'displayName'], 'error');\n  return /*#__PURE__*/_react[\"default\"].createElement(_SimpleMenu.SimpleMenu, {\n    id: \"label\",\n    label: \"\".concat(targetFriendlyName, \"\\n    \").concat(plugin ? \"(from: \".concat(plugin, \")\") : '')\n  }, allowedContentTypesForRelation.map(function (_ref2) {\n    var uid = _ref2.uid,\n        title = _ref2.title,\n        restrictRelationsTo = _ref2.restrictRelationsTo,\n        plugin = _ref2.plugin;\n\n    var handleChange = function handleChange() {\n      var selectedContentTypeFriendlyName = plugin ? \"\".concat(plugin, \"_\").concat(title) : title;\n      dispatch({\n        type: _constants.ON_CHANGE_RELATION_TARGET,\n        target: {\n          value: uid,\n          oneThatIsCreatingARelationWithAnother: oneThatIsCreatingARelationWithAnother,\n          selectedContentTypeFriendlyName: selectedContentTypeFriendlyName,\n          targetContentTypeAllowedRelations: restrictRelationsTo\n        }\n      });\n    };\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_SimpleMenu.MenuItem, {\n      key: uid,\n      onClick: handleChange\n    }, title, \"\\xA0\", plugin && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, \"(from: \", plugin, \")\"));\n  }));\n};\n\nRelationTargetPicker.defaultProps = {\n  target: null\n};\nRelationTargetPicker.propTypes = {\n  oneThatIsCreatingARelationWithAnother: _propTypes[\"default\"].string.isRequired,\n  target: _propTypes[\"default\"].string\n};\nvar _default = RelationTargetPicker;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}