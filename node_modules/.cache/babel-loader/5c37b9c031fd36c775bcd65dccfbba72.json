{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _lodash = require(\"lodash\");\n\nvar initialState = {\n  menu: [],\n  isLoading: true\n};\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (draftState) {\n      switch (action.type) {\n        case 'CHECK_PERMISSIONS_SUCCEEDED':\n          {\n            action.data.forEach(function (checkedPermissions) {\n              if (checkedPermissions.hasPermission) {\n                (0, _lodash.set)(draftState, ['menu'].concat((0, _toConsumableArray2[\"default\"])(checkedPermissions.path.split('.')), ['isDisplayed']), checkedPermissions.hasPermission);\n              }\n            }); // Remove the not needed links in each section\n\n            draftState.menu.forEach(function (section, sectionIndex) {\n              draftState.menu[sectionIndex].links = section.links.filter(function (link) {\n                return link.isDisplayed === true;\n              });\n            });\n            draftState.isLoading = false;\n            break;\n          }\n\n        default:\n          return draftState;\n      }\n    })\n  );\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}