{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _reactQuery = require(\"react-query\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _LiveRegions = require(\"@strapi/design-system/LiveRegions\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _utils = require(\"../../utils\");\n\nvar fetchDefaultLocalesList = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(toggleNotification) {\n    var data;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0, _helperPlugin.request)('/i18n/iso-locales', {\n              method: 'GET'\n            });\n\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            toggleNotification({\n              type: 'warning',\n              message: {\n                id: 'notification.error'\n              }\n            });\n            return _context.abrupt(\"return\", []);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function fetchDefaultLocalesList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar useDefaultLocales = function useDefaultLocales() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useNotifyAT = (0, _LiveRegions.useNotifyAT)(),\n      notifyStatus = _useNotifyAT.notifyStatus;\n\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useQuery = (0, _reactQuery.useQuery)('default-locales', function () {\n    return fetchDefaultLocalesList(toggleNotification).then(function (data) {\n      notifyStatus(formatMessage({\n        id: (0, _utils.getTrad)('Settings.locales.modal.locales.loaded'),\n        defaultMessage: 'The locales have been successfully loaded.'\n      }));\n      return data;\n    });\n  }),\n      isLoading = _useQuery.isLoading,\n      data = _useQuery.data;\n\n  return {\n    defaultLocales: data,\n    isLoading: isLoading\n  };\n};\n\nvar _default = useDefaultLocales;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}