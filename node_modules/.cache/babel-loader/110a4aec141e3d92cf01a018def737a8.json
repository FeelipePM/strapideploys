{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactQuery = require(\"react-query\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _contexts = require(\"../../contexts\");\n\nvar _LanguageProvider = _interopRequireDefault(require(\"../LanguageProvider\"));\n\nvar _GuidedTour = _interopRequireDefault(require(\"../GuidedTour\"));\n\nvar _AutoReloadOverlayBlockerProvider = _interopRequireDefault(require(\"../AutoReloadOverlayBlockerProvider\"));\n\nvar _Notifications = _interopRequireDefault(require(\"../Notifications\"));\n\nvar _OverlayBlocker = _interopRequireDefault(require(\"../OverlayBlocker\"));\n\nvar queryClient = new _reactQuery.QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false\n    }\n  }\n});\n\nvar Providers = function Providers(_ref) {\n  var authLogo = _ref.authLogo,\n      children = _ref.children,\n      components = _ref.components,\n      fields = _ref.fields,\n      getAdminInjectedComponents = _ref.getAdminInjectedComponents,\n      getPlugin = _ref.getPlugin,\n      localeNames = _ref.localeNames,\n      menu = _ref.menu,\n      menuLogo = _ref.menuLogo,\n      messages = _ref.messages,\n      plugins = _ref.plugins,\n      runHookParallel = _ref.runHookParallel,\n      runHookSeries = _ref.runHookSeries,\n      runHookWaterfall = _ref.runHookWaterfall,\n      settings = _ref.settings,\n      showReleaseNotification = _ref.showReleaseNotification,\n      showTutorials = _ref.showTutorials,\n      store = _ref.store;\n  return /*#__PURE__*/_react[\"default\"].createElement(_reactQuery.QueryClientProvider, {\n    client: queryClient\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react[\"default\"].createElement(_contexts.AdminContext.Provider, {\n    value: {\n      getAdminInjectedComponents: getAdminInjectedComponents\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_contexts.ConfigurationsContext.Provider, {\n    value: {\n      authLogo: authLogo,\n      menuLogo: menuLogo,\n      showReleaseNotification: showReleaseNotification,\n      showTutorials: showTutorials\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.StrapiAppProvider, {\n    getPlugin: getPlugin,\n    menu: menu,\n    plugins: plugins,\n    runHookParallel: runHookParallel,\n    runHookWaterfall: runHookWaterfall,\n    runHookSeries: runHookSeries,\n    settings: settings\n  }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.LibraryProvider, {\n    components: components,\n    fields: fields\n  }, /*#__PURE__*/_react[\"default\"].createElement(_LanguageProvider[\"default\"], {\n    messages: messages,\n    localeNames: localeNames\n  }, /*#__PURE__*/_react[\"default\"].createElement(_AutoReloadOverlayBlockerProvider[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_OverlayBlocker[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_GuidedTour[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_Notifications[\"default\"], null, children)))))))))));\n};\n\nProviders.propTypes = {\n  authLogo: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].any]).isRequired,\n  children: _propTypes[\"default\"].element.isRequired,\n  components: _propTypes[\"default\"].object.isRequired,\n  fields: _propTypes[\"default\"].object.isRequired,\n  getAdminInjectedComponents: _propTypes[\"default\"].func.isRequired,\n  getPlugin: _propTypes[\"default\"].func.isRequired,\n  localeNames: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].string).isRequired,\n  menu: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    to: _propTypes[\"default\"].string.isRequired,\n    icon: _propTypes[\"default\"].func.isRequired,\n    intlLabel: _propTypes[\"default\"].shape({\n      id: _propTypes[\"default\"].string.isRequired,\n      defaultMessage: _propTypes[\"default\"].string.isRequired\n    }).isRequired,\n    permissions: _propTypes[\"default\"].array,\n    Component: _propTypes[\"default\"].func\n  })).isRequired,\n  menuLogo: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].any]).isRequired,\n  messages: _propTypes[\"default\"].object.isRequired,\n  plugins: _propTypes[\"default\"].object.isRequired,\n  runHookParallel: _propTypes[\"default\"].func.isRequired,\n  runHookWaterfall: _propTypes[\"default\"].func.isRequired,\n  runHookSeries: _propTypes[\"default\"].func.isRequired,\n  settings: _propTypes[\"default\"].object.isRequired,\n  showReleaseNotification: _propTypes[\"default\"].bool.isRequired,\n  showTutorials: _propTypes[\"default\"].bool.isRequired,\n  store: _propTypes[\"default\"].object.isRequired\n};\nvar _default = Providers;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}