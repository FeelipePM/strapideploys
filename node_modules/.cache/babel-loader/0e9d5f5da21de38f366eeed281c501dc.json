{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar mergeMetasWithSchema = function mergeMetasWithSchema(data, schemas, mainSchemaKey) {\n  var findSchema = function findSchema(refUid) {\n    return schemas.find(function (obj) {\n      return obj.uid === refUid;\n    });\n  };\n\n  var merged = Object.assign({}, data);\n  var mainUID = data[mainSchemaKey].uid;\n  var mainSchema = findSchema(mainUID);\n  (0, _lodash.set)(merged, [mainSchemaKey], _objectSpread(_objectSpread({}, data[mainSchemaKey]), mainSchema));\n  Object.keys(data.components).forEach(function (compoUID) {\n    var compoSchema = findSchema(compoUID);\n    (0, _lodash.set)(merged, ['components', compoUID], _objectSpread(_objectSpread({}, data.components[compoUID]), compoSchema));\n  });\n  return merged;\n};\n\nvar _default = mergeMetasWithSchema;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}