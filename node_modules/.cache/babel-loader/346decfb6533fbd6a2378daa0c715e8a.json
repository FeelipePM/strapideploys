{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Alert = require(\"@strapi/design-system/Alert\");\n\nvar _Link = require(\"@strapi/design-system/Link\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Notification = function Notification(_ref) {\n  var _link$label, _link$label2, _link$label3;\n\n  var dispatch = _ref.dispatch,\n      notification = _ref.notification;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var message = notification.message,\n      link = notification.link,\n      type = notification.type,\n      id = notification.id,\n      onClose = notification.onClose,\n      timeout = notification.timeout,\n      blockTransition = notification.blockTransition;\n\n  var formattedMessage = function formattedMessage(msg) {\n    return typeof msg === 'string' ? msg : formatMessage(msg, msg.values);\n  };\n\n  var handleClose = (0, _react.useCallback)(function () {\n    if (onClose) {\n      onClose();\n    }\n\n    dispatch({\n      type: 'HIDE_NOTIFICATION',\n      id: id\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  (0, _react.useEffect)(function () {\n    var timeoutToClear;\n\n    if (!blockTransition) {\n      timeoutToClear = setTimeout(function () {\n        handleClose();\n      }, timeout || 2500);\n    }\n\n    return function () {\n      return clearTimeout(timeoutToClear);\n    };\n  }, [blockTransition, handleClose, timeout]);\n  var variant;\n  var alertTitle;\n\n  if (type === 'info') {\n    variant = 'default';\n    alertTitle = formatMessage({\n      id: 'notification.default.title',\n      defaultMessage: 'Information:'\n    });\n  } else if (type === 'warning') {\n    alertTitle = formatMessage({\n      id: 'notification.warning.title',\n      defaultMessage: 'Warning:'\n    });\n    variant = 'danger';\n  } else {\n    alertTitle = formatMessage({\n      id: 'notification.success.title',\n      defaultMessage: 'Success:'\n    });\n    variant = 'success';\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Alert.Alert, {\n    action: link ? /*#__PURE__*/_react[\"default\"].createElement(_Link.Link, {\n      href: link.url,\n      target: \"_blank\"\n    }, formatMessage({\n      id: ((_link$label = link.label) === null || _link$label === void 0 ? void 0 : _link$label.id) || link.label,\n      defaultMessage: ((_link$label2 = link.label) === null || _link$label2 === void 0 ? void 0 : _link$label2.defaultMessage) || ((_link$label3 = link.label) === null || _link$label3 === void 0 ? void 0 : _link$label3.id) || link.label\n    })) : undefined,\n    onClose: handleClose,\n    closeLabel: \"Close\",\n    title: alertTitle,\n    variant: variant\n  }, formattedMessage({\n    id: (message === null || message === void 0 ? void 0 : message.id) || message,\n    defaultMessage: (message === null || message === void 0 ? void 0 : message.defaultMessage) || (message === null || message === void 0 ? void 0 : message.id) || message\n  }));\n};\n\nNotification.defaultProps = {\n  notification: {\n    id: 1,\n    type: 'success',\n    message: {\n      id: 'notification.success.saved',\n      defaultMessage: 'Saved'\n    },\n    onClose: function onClose() {\n      return null;\n    },\n    timeout: 2500,\n    blockTransition: false\n  }\n};\nNotification.propTypes = {\n  dispatch: _propTypes[\"default\"].func.isRequired,\n  notification: _propTypes[\"default\"].shape({\n    id: _propTypes[\"default\"].number,\n    message: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].shape({\n      id: _propTypes[\"default\"].string.isRequired,\n      defaultMessage: _propTypes[\"default\"].string,\n      values: _propTypes[\"default\"].object\n    })]),\n    link: _propTypes[\"default\"].shape({\n      target: _propTypes[\"default\"].string,\n      url: _propTypes[\"default\"].string.isRequired,\n      label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].shape({\n        id: _propTypes[\"default\"].string.isRequired,\n        defaultMessage: _propTypes[\"default\"].string,\n        values: _propTypes[\"default\"].object\n      })]).isRequired\n    }),\n    type: _propTypes[\"default\"].string,\n    onClose: _propTypes[\"default\"].func,\n    timeout: _propTypes[\"default\"].number,\n    blockTransition: _propTypes[\"default\"].bool\n  })\n};\nvar _default = Notification;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}