{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _truncate = _interopRequireDefault(require(\"lodash/truncate\"));\n\nvar _pluralize = _interopRequireDefault(require(\"pluralize\"));\n\nvar _OneToOne = _interopRequireDefault(require(\"@strapi/icons/OneToOne\"));\n\nvar _OneWay = _interopRequireDefault(require(\"@strapi/icons/OneWay\"));\n\nvar _ManyWays = _interopRequireDefault(require(\"@strapi/icons/ManyWays\"));\n\nvar _OneToMany = _interopRequireDefault(require(\"@strapi/icons/OneToMany\"));\n\nvar _ManyToOne = _interopRequireDefault(require(\"@strapi/icons/ManyToOne\"));\n\nvar _ManyToMany = _interopRequireDefault(require(\"@strapi/icons/ManyToMany\"));\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _KeyboardNavigable = require(\"@strapi/design-system/KeyboardNavigable\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _useDataManager2 = _interopRequireDefault(require(\"../../../hooks/useDataManager\"));\n\nvar _constants = require(\"../../FormModal/constants\");\n\nvar _getTrad = _interopRequireDefault(require(\"../../../utils/getTrad\"));\n\nvar _components = require(\"./components\");\n\nvar relations = {\n  oneWay: _OneWay[\"default\"],\n  oneToOne: _OneToOne[\"default\"],\n  oneToMany: _OneToMany[\"default\"],\n  manyToOne: _ManyToOne[\"default\"],\n  manyToMany: _ManyToMany[\"default\"],\n  manyWay: _ManyWays[\"default\"]\n};\n\nvar RelationNaturePicker = function RelationNaturePicker(_ref) {\n  var naturePickerType = _ref.naturePickerType,\n      oneThatIsCreatingARelationWithAnother = _ref.oneThatIsCreatingARelationWithAnother,\n      relationType = _ref.relationType,\n      target = _ref.target;\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useDataManager = (0, _useDataManager2[\"default\"])(),\n      contentTypes = _useDataManager.contentTypes,\n      modifiedData = _useDataManager.modifiedData;\n\n  var ctRelations = ['oneWay', 'oneToOne', 'oneToMany', 'manyToOne', 'manyToMany', 'manyWay'];\n  var componentRelations = ['oneWay', 'manyWay'];\n  var dataType = naturePickerType === 'contentType' ? (0, _get[\"default\"])(modifiedData, [naturePickerType, 'schema', 'kind'], '') : naturePickerType;\n  var relationsType = dataType === 'collectionType' ? ctRelations : componentRelations;\n  var areDisplayedNamesInverted = relationType === 'manyToOne';\n  var targetLabel = (0, _get[\"default\"])(contentTypes, [target, 'schema', 'displayName'], 'unknown');\n  var leftTarget = areDisplayedNamesInverted ? targetLabel : oneThatIsCreatingARelationWithAnother;\n  var rightTarget = areDisplayedNamesInverted ? oneThatIsCreatingARelationWithAnother : targetLabel;\n  var leftDisplayedValue = (0, _pluralize[\"default\"])(leftTarget, relationType === 'manyToMany' ? 2 : 1);\n  var restrictedRelations = (0, _get[\"default\"])(contentTypes, [target, 'schema', 'restrictRelationsTo'], null);\n  var rightDisplayedValue = (0, _pluralize[\"default\"])(rightTarget, ['manyToMany', 'oneToMany', 'manyToOne', 'manyWay'].includes(relationType) ? 2 : 1);\n\n  if (!relationType) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    style: {\n      flex: 1\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_components.Wrapper, null, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    paddingLeft: 9,\n    paddingRight: 9,\n    paddingTop: 1,\n    justifyContent: \"center\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_KeyboardNavigable.KeyboardNavigable, {\n    tagName: \"button\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 3,\n    horizontal: true\n  }, relationsType.map(function (relation) {\n    var Asset = relations[relation];\n    var isEnabled = restrictedRelations === null || restrictedRelations.includes(relation);\n    return /*#__PURE__*/_react[\"default\"].createElement(_components.IconWrapper, {\n      as: \"button\",\n      isSelected: relationType === relation,\n      disabled: !isEnabled,\n      key: relation,\n      onClick: function onClick() {\n        if (isEnabled) {\n          dispatch({\n            type: _constants.ON_CHANGE_RELATION_TYPE,\n            target: {\n              oneThatIsCreatingARelationWithAnother: oneThatIsCreatingARelationWithAnother,\n              targetContentType: target,\n              value: relation\n            }\n          });\n        }\n      },\n      padding: 2,\n      type: \"button\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(Asset, {\n      key: relation\n    }));\n  }))))), /*#__PURE__*/_react[\"default\"].createElement(_components.InfosWrapper, {\n    justifyContent: \"center\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, null, (0, _truncate[\"default\"])(leftDisplayedValue, {\n    length: 24\n  }), \"\\xA0\"), /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    textColor: \"primary600\"\n  }, formatMessage({\n    id: (0, _getTrad[\"default\"])(\"relation.\".concat(relationType))\n  }), \"\\xA0\"), /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, null, (0, _truncate[\"default\"])(rightDisplayedValue, {\n    length: 24\n  }))));\n};\n\nRelationNaturePicker.defaultProps = {\n  relationType: null,\n  target: null\n};\nRelationNaturePicker.propTypes = {\n  naturePickerType: _propTypes[\"default\"].string.isRequired,\n  oneThatIsCreatingARelationWithAnother: _propTypes[\"default\"].string.isRequired,\n  relationType: _propTypes[\"default\"].string,\n  target: _propTypes[\"default\"].string\n};\nvar _default = RelationNaturePicker;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}