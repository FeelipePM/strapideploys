{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.putProvider = exports.fetchData = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _utils = require(\"../../../utils\");\n\n// eslint-disable-next-line import/prefer-default-export\nvar fetchData = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(toggleNotification) {\n    var _yield$axiosInstance$, data;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _utils.axiosInstance.get((0, _utils.getRequestURL)('providers'));\n\n          case 3:\n            _yield$axiosInstance$ = _context.sent;\n            data = _yield$axiosInstance$.data;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            toggleNotification({\n              type: 'warning',\n              message: {\n                id: 'notification.error'\n              }\n            });\n            throw new Error('error');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function fetchData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.fetchData = fetchData;\n\nvar putProvider = function putProvider(body) {\n  return _utils.axiosInstance.put((0, _utils.getRequestURL)('providers'), body);\n};\n\nexports.putProvider = putProvider;","map":null,"metadata":{},"sourceType":"script"}