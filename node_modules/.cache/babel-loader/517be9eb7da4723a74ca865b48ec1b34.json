{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _upperFirst = _interopRequireDefault(require(\"lodash/upperFirst\"));\n\nvar _Breadcrumbs = require(\"@strapi/design-system/Breadcrumbs\");\n\nvar _ModalLayout = require(\"@strapi/design-system/ModalLayout\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _useDataManager2 = _interopRequireDefault(require(\"../../hooks/useDataManager\"));\n\nvar _getTrad = _interopRequireDefault(require(\"../../utils/getTrad\"));\n\nvar _AttributeIcon = _interopRequireDefault(require(\"../AttributeIcon\"));\n\n/**\n *\n * FormModalHeader\n *\n */\nvar FormModalHeader = function FormModalHeader(_ref) {\n  var _modifiedData$forTarg;\n\n  var actionType = _ref.actionType,\n      attributeName = _ref.attributeName,\n      attributeType = _ref.attributeType,\n      categoryName = _ref.categoryName,\n      contentTypeKind = _ref.contentTypeKind,\n      dynamicZoneTarget = _ref.dynamicZoneTarget,\n      forTarget = _ref.forTarget,\n      modalType = _ref.modalType,\n      targetUid = _ref.targetUid;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useDataManager = (0, _useDataManager2[\"default\"])(),\n      modifiedData = _useDataManager.modifiedData;\n\n  var icon;\n  var headers = [];\n  var schema = (modifiedData === null || modifiedData === void 0 ? void 0 : (_modifiedData$forTarg = modifiedData[forTarget]) === null || _modifiedData$forTarg === void 0 ? void 0 : _modifiedData$forTarg[targetUid]) || (modifiedData === null || modifiedData === void 0 ? void 0 : modifiedData[forTarget]) || null;\n  var displayName = schema === null || schema === void 0 ? void 0 : schema.schema.displayName;\n\n  if (modalType === 'contentType') {\n    icon = contentTypeKind;\n  }\n\n  if (['component', 'editCategory'].includes(modalType)) {\n    icon = 'component';\n  }\n\n  var isCreatingMainSchema = ['component', 'contentType'].includes(modalType);\n\n  if (isCreatingMainSchema) {\n    var headerId = (0, _getTrad[\"default\"])(\"modalForm.component.header-\".concat(actionType));\n\n    if (modalType === 'contentType') {\n      headerId = (0, _getTrad[\"default\"])(\"modalForm.\".concat(contentTypeKind, \".header-create\"));\n    }\n\n    if (actionType === 'edit') {\n      headerId = (0, _getTrad[\"default\"])(\"modalForm.header-edit\");\n    }\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_ModalLayout.ModalHeader, null, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, null, /*#__PURE__*/_react[\"default\"].createElement(_AttributeIcon[\"default\"], {\n      type: icon\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n      paddingLeft: 3\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n      fontWeight: \"bold\",\n      textColor: \"neutral800\",\n      as: \"h2\",\n      id: \"title\"\n    }, formatMessage({\n      id: headerId\n    }, {\n      name: displayName\n    })))));\n  }\n\n  headers = [{\n    label: displayName,\n    info: {\n      category: (schema === null || schema === void 0 ? void 0 : schema.category) || null,\n      name: schema === null || schema === void 0 ? void 0 : schema.schema.displayName\n    }\n  }];\n\n  if (modalType === 'chooseAttribute') {\n    icon = ['component', 'components'].includes(forTarget) ? 'component' : schema.schema.kind;\n  }\n\n  if (modalType === 'addComponentToDynamicZone') {\n    icon = 'dynamiczone';\n    headers.push({\n      label: dynamicZoneTarget\n    });\n  }\n\n  if (modalType === 'attribute') {\n    icon = attributeType;\n    headers.push({\n      label: attributeName\n    });\n  }\n\n  if (modalType === 'editCategory') {\n    var label = formatMessage({\n      id: (0, _getTrad[\"default\"])('modalForm.header.categories'),\n      defaultMessage: 'Categories'\n    });\n    headers = [{\n      label: label\n    }, {\n      label: categoryName\n    }];\n  }\n\n  var breadcrumbsLabel = headers.map(function (_ref2) {\n    var label = _ref2.label;\n    return label;\n  }).join(',');\n  return /*#__PURE__*/_react[\"default\"].createElement(_ModalLayout.ModalHeader, null, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    horizontal: true,\n    spacing: 3\n  }, /*#__PURE__*/_react[\"default\"].createElement(_AttributeIcon[\"default\"], {\n    type: icon\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Breadcrumbs.Breadcrumbs, {\n    label: breadcrumbsLabel\n  }, headers.map(function (header, index) {\n    var _header$info;\n\n    var label = (0, _upperFirst[\"default\"])(header.label);\n\n    if (!label) {\n      return null;\n    }\n\n    var key = \"\".concat(header.label, \".\").concat(index);\n\n    if ((_header$info = header.info) !== null && _header$info !== void 0 && _header$info.category) {\n      var content = \"\".concat(label, \" (\").concat((0, _upperFirst[\"default\"])(header.info.category), \" - \").concat((0, _upperFirst[\"default\"])(header.info.name), \")\");\n      return /*#__PURE__*/_react[\"default\"].createElement(_Breadcrumbs.Crumb, {\n        key: key\n      }, content);\n    }\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_Breadcrumbs.Crumb, {\n      key: key\n    }, label);\n  }))));\n};\n\nFormModalHeader.defaultProps = {\n  actionType: null,\n  attributeName: null,\n  attributeType: null,\n  categoryName: null,\n  dynamicZoneTarget: null,\n  forTarget: null,\n  contentTypeKind: null,\n  targetUid: null\n};\nFormModalHeader.propTypes = {\n  actionType: _propTypes[\"default\"].string,\n  attributeName: _propTypes[\"default\"].string,\n  attributeType: _propTypes[\"default\"].string,\n  categoryName: _propTypes[\"default\"].string,\n  contentTypeKind: _propTypes[\"default\"].string,\n  dynamicZoneTarget: _propTypes[\"default\"].string,\n  forTarget: _propTypes[\"default\"].oneOf(['contentType', 'component', 'components']),\n  modalType: _propTypes[\"default\"].string.isRequired,\n  targetUid: _propTypes[\"default\"].string\n};\nvar _default = FormModalHeader;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}