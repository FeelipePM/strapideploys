{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeParams = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _qs = require(\"qs\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isObject = _interopRequireDefault(require(\"lodash/isObject\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Updates the leafs of the first argument\n * @param {object} initialParams\n * @param {object} params\n * @returns string\n */\nvar mergeParams = function mergeParams(initialParams, params) {\n  return Object.keys(initialParams).reduce(function (acc, current) {\n    var intialValue = initialParams[current];\n    var nextValue = (0, _get[\"default\"])(params, [current], intialValue);\n\n    if ((0, _isObject[\"default\"])(intialValue)) {\n      return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2[\"default\"])({}, current, mergeParams(intialValue, nextValue)));\n    }\n\n    acc[current] = nextValue;\n    return acc;\n  }, {});\n};\n\nexports.mergeParams = mergeParams;\n\nvar getRedirectionLink = function getRedirectionLink(links, slug, rawQuery) {\n  var matchingLink = links.find(function (_ref) {\n    var to = _ref.to;\n    return to.includes(slug);\n  });\n\n  if (!matchingLink) {\n    return '/';\n  }\n\n  var to = matchingLink.to,\n      search = matchingLink.search;\n  var searchQueryParams = (0, _qs.parse)(search);\n  var currentQueryParams = (0, _qs.parse)(rawQuery.substring(1));\n  var mergedParams = mergeParams(searchQueryParams, currentQueryParams);\n  var link = \"\".concat(to, \"?\").concat((0, _qs.stringify)(mergedParams, {\n    encode: false\n  }));\n  return link;\n};\n\nvar _default = getRedirectionLink;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}