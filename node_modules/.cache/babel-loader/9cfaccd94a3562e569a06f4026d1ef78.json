{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getActionIdsFromPropertyActions = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../../../utils\");\n\n/**\n * Returns a filtered array of actionId\n * @param {array<object>} propertyActions\n * @returns {string} actionId\n */\nvar getActionIdsFromPropertyActions = function getActionIdsFromPropertyActions(propertyActions) {\n  var actionIds = propertyActions.reduce(function (acc, current) {\n    if (current.isActionRelatedToCurrentProperty) {\n      acc.push(current.actionId);\n    }\n\n    return acc;\n  }, []);\n  return actionIds;\n};\n/**\n *\n * Returns the state of the left checkbox of a ActionRow main checkbox\n * @param {array} propertyActions\n * @param {object} modifiedData\n * @param {string} pathToContentType\n * @param {string} propertyToCheck\n * @param {string} targetKey\n * @returns {object}\n */\n\n\nexports.getActionIdsFromPropertyActions = getActionIdsFromPropertyActions;\n\nvar getRowLabelCheckboxeState = function getRowLabelCheckboxeState(propertyActions, modifiedData, pathToContentType, propertyToCheck, targetKey) {\n  var actionIds = getActionIdsFromPropertyActions(propertyActions);\n  var data = actionIds.reduce(function (acc, current) {\n    var pathToData = [].concat((0, _toConsumableArray2[\"default\"])(pathToContentType.split('..')), [current, 'properties', propertyToCheck, targetKey]);\n    var mainData = (0, _lodash.get)(modifiedData, pathToData, false);\n    acc[current] = mainData;\n    return acc;\n  }, {});\n  return (0, _utils.getCheckboxState)(data);\n};\n\nvar _default = getRowLabelCheckboxeState;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}