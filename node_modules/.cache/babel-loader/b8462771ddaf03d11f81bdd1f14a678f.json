{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar extendCTBInitialDataMiddleware = function extendCTBInitialDataMiddleware() {\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (action.type === 'ContentTypeBuilder/FormModal/SET_DATA_TO_EDIT' && action.modalType === 'contentType') {\n          var i18n = {\n            localized: false\n          };\n          var pluginOptions = action.data.pluginOptions ? _objectSpread(_objectSpread({}, action.data.pluginOptions), {}, {\n            i18n: i18n\n          }) : {\n            i18n: i18n\n          };\n\n          var data = _objectSpread(_objectSpread({}, action.data), {}, {\n            pluginOptions: pluginOptions\n          });\n\n          if (action.actionType === 'create') {\n            return next(_objectSpread(_objectSpread({}, action), {}, {\n              data: data\n            }));\n          } // Override the action if the pluginOption config does not contain i18n\n          // In this case we need to set the proper initialData shape\n\n\n          if (!(0, _lodash.has)(action.data.pluginOptions, 'i18n.localized')) {\n            return next(_objectSpread(_objectSpread({}, action), {}, {\n              data: data\n            }));\n          }\n        } // action is not the one we want to override\n\n\n        return next(action);\n      };\n    };\n  };\n};\n\nvar _default = extendCTBInitialDataMiddleware;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}