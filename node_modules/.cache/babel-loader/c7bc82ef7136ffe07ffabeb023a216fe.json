{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRelatedActionIdData = exports.getActionsIds = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar getActionsIds = function getActionsIds(array) {\n  return array.map(function (_ref) {\n    var actionId = _ref.actionId;\n    return actionId;\n  });\n};\n\nexports.getActionsIds = getActionsIds;\n\nvar getRelatedActionIdData = function getRelatedActionIdData(actionIdArray, dataObj) {\n  return actionIdArray.reduce(function (acc, actionId) {\n    Object.keys(dataObj).forEach(function (ctUid) {\n      var actionIdData = (0, _lodash.get)(dataObj, [ctUid, actionId], {});\n      var actionIdState = (0, _defineProperty2[\"default\"])({}, ctUid, (0, _utils.removeConditionKeyFromData)(actionIdData));\n\n      if (!acc[actionId]) {\n        acc[actionId] = actionIdState;\n      } else {\n        acc[actionId] = _objectSpread(_objectSpread({}, acc[actionId]), actionIdState);\n      }\n    });\n    return acc;\n  }, {});\n};\n\nexports.getRelatedActionIdData = getRelatedActionIdData;\n\nvar getCheckboxesState = function getCheckboxesState(properties, modifiedData) {\n  var actionsIds = getActionsIds(properties);\n  var relatedActionsData = getRelatedActionIdData(actionsIds, modifiedData);\n  var checkboxesState = Object.keys(relatedActionsData).reduce(function (acc, current) {\n    acc[current] = (0, _utils.getCheckboxState)(relatedActionsData[current]);\n    return acc;\n  }, {});\n  return checkboxesState;\n};\n\nvar _default = getCheckboxesState;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}