{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _constants = require(\"./constants\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar initialState = {\n  data: [],\n  isLoading: true,\n  contentType: {},\n  initialDisplayedHeaders: [],\n  displayedHeaders: [],\n  pagination: {\n    total: 0\n  }\n};\nexports.initialState = initialState;\n\nvar listViewReducer = function listViewReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (drafState) {\n      switch (action.type) {\n        case _constants.GET_DATA:\n          {\n            return _objectSpread(_objectSpread({}, initialState), {}, {\n              contentType: state.contentType,\n              initialDisplayedHeaders: state.initialDisplayedHeaders,\n              displayedHeaders: state.displayedHeaders\n            });\n          }\n\n        case _constants.GET_DATA_SUCCEEDED:\n          {\n            drafState.pagination = action.pagination;\n            drafState.data = action.data;\n            drafState.isLoading = false;\n            break;\n          }\n\n        case _constants.ON_CHANGE_LIST_HEADERS:\n          {\n            var _action$target = action.target,\n                name = _action$target.name,\n                value = _action$target.value;\n\n            if (!value) {\n              var _state$contentType = state.contentType,\n                  metadatas = _state$contentType.metadatas,\n                  attributes = _state$contentType.attributes,\n                  uid = _state$contentType.uid;\n              var metas = metadatas[name].list;\n              var header = {\n                name: name,\n                fieldSchema: attributes[name],\n                metadatas: metas,\n                key: \"__\".concat(name, \"_key__\")\n              };\n\n              if (attributes[name].type === 'relation') {\n                drafState.displayedHeaders.push(_objectSpread(_objectSpread({}, header), {}, {\n                  queryInfos: {\n                    defaultParams: {},\n                    endPoint: \"collection-types/\".concat(uid)\n                  }\n                }));\n              } else {\n                drafState.displayedHeaders.push(header);\n              }\n            } else {\n              drafState.displayedHeaders = state.displayedHeaders.filter(function (header) {\n                return header.name !== name;\n              });\n            }\n\n            break;\n          }\n\n        case _constants.ON_RESET_LIST_HEADERS:\n          {\n            drafState.displayedHeaders = state.initialDisplayedHeaders;\n            break;\n          }\n\n        case _constants.RESET_PROPS:\n          {\n            return initialState;\n          }\n\n        case _constants.SET_LIST_LAYOUT:\n          {\n            var contentType = action.contentType,\n                displayedHeaders = action.displayedHeaders;\n            drafState.contentType = contentType;\n            drafState.displayedHeaders = displayedHeaders;\n            drafState.initialDisplayedHeaders = displayedHeaders;\n            break;\n          }\n\n        default:\n          return drafState;\n      }\n    })\n  );\n};\n\nvar _default = listViewReducer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}