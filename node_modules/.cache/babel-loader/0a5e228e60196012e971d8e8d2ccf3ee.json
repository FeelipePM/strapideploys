{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _formik = require(\"formik\");\n\nvar _ModalLayout = require(\"@strapi/design-system/ModalLayout\");\n\nvar _Grid = require(\"@strapi/design-system/Grid\");\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _Breadcrumbs = require(\"@strapi/design-system/Breadcrumbs\");\n\nvar _Textarea = require(\"@strapi/design-system/Textarea\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _schema = _interopRequireDefault(require(\"../utils/schema\"));\n\nvar EmailForm = function EmailForm(_ref) {\n  var template = _ref.template,\n      onToggle = _ref.onToggle,\n      onSubmit = _ref.onSubmit;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_ModalLayout.ModalLayout, {\n    onClose: onToggle,\n    labelledBy: \"\".concat(formatMessage({\n      id: (0, _utils.getTrad)('PopUpForm.header.edit.email-templates'),\n      defaultMessage: 'Edit email template'\n    }), \", \").concat(formatMessage({\n      id: (0, _utils.getTrad)(template.display),\n      defaultMessage: template.display\n    }))\n  }, /*#__PURE__*/_react[\"default\"].createElement(_ModalLayout.ModalHeader, null, /*#__PURE__*/_react[\"default\"].createElement(_Breadcrumbs.Breadcrumbs, {\n    label: \"\".concat(formatMessage({\n      id: (0, _utils.getTrad)('PopUpForm.header.edit.email-templates'),\n      defaultMessage: 'Edit email template'\n    }), \", \").concat(formatMessage({\n      id: (0, _utils.getTrad)(template.display),\n      defaultMessage: template.display\n    }))\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Breadcrumbs.Crumb, null, formatMessage({\n    id: (0, _utils.getTrad)('PopUpForm.header.edit.email-templates'),\n    defaultMessage: 'Edit email template'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Breadcrumbs.Crumb, null, formatMessage({\n    id: (0, _utils.getTrad)(template.display),\n    defaultMessage: template.display\n  })))), /*#__PURE__*/_react[\"default\"].createElement(_formik.Formik, {\n    onSubmit: onSubmit,\n    initialValues: template,\n    validateOnChange: false,\n    validationSchema: _schema[\"default\"],\n    enableReinitialize: true\n  }, function (_ref2) {\n    var _errors$options, _errors$options$from, _errors$options2, _errors$options2$from, _errors$options3, _errors$options4, _errors$options5;\n\n    var errors = _ref2.errors,\n        values = _ref2.values,\n        handleChange = _ref2.handleChange,\n        isSubmitting = _ref2.isSubmitting;\n    return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.Form, null, /*#__PURE__*/_react[\"default\"].createElement(_ModalLayout.ModalBody, null, /*#__PURE__*/_react[\"default\"].createElement(_Grid.Grid, {\n      gap: 5\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n      col: 6,\n      s: 12\n    }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.GenericInput, {\n      intlLabel: {\n        id: (0, _utils.getTrad)('PopUpForm.Email.options.from.name.label'),\n        defaultMessage: 'Shipper name'\n      },\n      name: \"options.from.name\",\n      onChange: handleChange,\n      value: values.options.from.name,\n      error: errors === null || errors === void 0 ? void 0 : (_errors$options = errors.options) === null || _errors$options === void 0 ? void 0 : (_errors$options$from = _errors$options.from) === null || _errors$options$from === void 0 ? void 0 : _errors$options$from.name,\n      type: \"text\"\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n      col: 6,\n      s: 12\n    }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.GenericInput, {\n      intlLabel: {\n        id: (0, _utils.getTrad)('PopUpForm.Email.options.from.email.label'),\n        defaultMessage: 'Shipper email'\n      },\n      name: \"options.from.email\",\n      onChange: handleChange,\n      value: values.options.from.email,\n      error: errors === null || errors === void 0 ? void 0 : (_errors$options2 = errors.options) === null || _errors$options2 === void 0 ? void 0 : (_errors$options2$from = _errors$options2.from) === null || _errors$options2$from === void 0 ? void 0 : _errors$options2$from.email,\n      type: \"text\"\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n      col: 6,\n      s: 12\n    }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.GenericInput, {\n      intlLabel: {\n        id: (0, _utils.getTrad)('PopUpForm.Email.options.response_email.label'),\n        defaultMessage: 'Response email'\n      },\n      name: \"options.response_email\",\n      onChange: handleChange,\n      value: values.options.response_email,\n      error: errors === null || errors === void 0 ? void 0 : (_errors$options3 = errors.options) === null || _errors$options3 === void 0 ? void 0 : _errors$options3.response_email,\n      type: \"text\"\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n      col: 6,\n      s: 12\n    }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.GenericInput, {\n      intlLabel: {\n        id: (0, _utils.getTrad)('PopUpForm.Email.options.object.label'),\n        defaultMessage: 'Subject'\n      },\n      name: \"options.object\",\n      onChange: handleChange,\n      value: values.options.object,\n      error: errors === null || errors === void 0 ? void 0 : (_errors$options4 = errors.options) === null || _errors$options4 === void 0 ? void 0 : _errors$options4.object,\n      type: \"text\"\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n      col: 12,\n      s: 12\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Textarea.Textarea, {\n      label: formatMessage({\n        id: (0, _utils.getTrad)('PopUpForm.Email.options.message.label'),\n        defaultMessage: 'Message'\n      }),\n      name: \"options.message\",\n      onChange: handleChange,\n      value: values.options.message,\n      error: (errors === null || errors === void 0 ? void 0 : (_errors$options5 = errors.options) === null || _errors$options5 === void 0 ? void 0 : _errors$options5.message) && formatMessage({\n        id: errors.options.message,\n        defaultMessage: errors.options.message\n      })\n    })))), /*#__PURE__*/_react[\"default\"].createElement(_ModalLayout.ModalFooter, {\n      startActions: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n        onClick: onToggle,\n        variant: \"tertiary\"\n      }, \"Cancel\"),\n      endActions: /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n        loading: isSubmitting,\n        type: \"submit\"\n      }, \"Finish\")\n    }));\n  }));\n};\n\nEmailForm.propTypes = {\n  template: _propTypes[\"default\"].shape({\n    display: _propTypes[\"default\"].string,\n    icon: _propTypes[\"default\"].string,\n    options: _propTypes[\"default\"].shape({\n      from: _propTypes[\"default\"].shape({\n        name: _propTypes[\"default\"].string,\n        email: _propTypes[\"default\"].string\n      }),\n      message: _propTypes[\"default\"].string,\n      object: _propTypes[\"default\"].string,\n      response_email: _propTypes[\"default\"].string\n    })\n  }).isRequired,\n  onSubmit: _propTypes[\"default\"].func.isRequired,\n  onToggle: _propTypes[\"default\"].func.isRequired\n};\nvar _default = EmailForm;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}