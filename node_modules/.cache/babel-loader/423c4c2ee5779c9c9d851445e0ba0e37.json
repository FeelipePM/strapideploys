{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _IconButton = require(\"@strapi/design-system/IconButton\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Table = require(\"@strapi/design-system/Table\");\n\nvar _Pencil = _interopRequireDefault(require(\"@strapi/icons/Pencil\"));\n\nvar _Trash = _interopRequireDefault(require(\"@strapi/icons/Trash\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _utils = require(\"../../../../utils\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../../../pluginId\"));\n\nvar TableBody = function TableBody(_ref) {\n  var sortedRoles = _ref.sortedRoles,\n      canDelete = _ref.canDelete,\n      permissions = _ref.permissions,\n      setRoleToDelete = _ref.setRoleToDelete,\n      onDelete = _ref.onDelete;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var _onDelete = (0, _slicedToArray2[\"default\"])(onDelete, 2),\n      showConfirmDelete = _onDelete[0],\n      setShowConfirmDelete = _onDelete[1];\n\n  var checkCanDeleteRole = function checkCanDeleteRole(role) {\n    return canDelete && !['public', 'authenticated'].includes(role.type);\n  };\n\n  var handleClickDelete = function handleClickDelete(id) {\n    setRoleToDelete(id);\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  var handleClickEdit = function handleClickEdit(id) {\n    push(\"/settings/\".concat(_pluginId[\"default\"], \"/roles/\").concat(id));\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table.Tbody, null, sortedRoles === null || sortedRoles === void 0 ? void 0 : sortedRoles.map(function (role) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Table.Tr, (0, _extends2[\"default\"])({\n      key: role.name\n    }, (0, _helperPlugin.onRowClick)({\n      fn: function fn() {\n        return handleClickEdit(role.id);\n      }\n    })), /*#__PURE__*/_react[\"default\"].createElement(_Table.Td, {\n      width: \"20%\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, null, role.name)), /*#__PURE__*/_react[\"default\"].createElement(_Table.Td, {\n      width: \"50%\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, null, role.description)), /*#__PURE__*/_react[\"default\"].createElement(_Table.Td, {\n      width: \"30%\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, null, \"\".concat(role.nb_users, \" \").concat(formatMessage({\n      id: (0, _utils.getTrad)('Roles.users'),\n      defaultMessage: 'users'\n    }).toLowerCase()))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Td, null, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, (0, _extends2[\"default\"])({\n      justifyContent: \"end\"\n    }, _helperPlugin.stopPropagation), /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.CheckPermissions, {\n      permissions: permissions.updateRole\n    }, /*#__PURE__*/_react[\"default\"].createElement(_IconButton.IconButton, {\n      onClick: function onClick() {\n        return handleClickEdit(role.id);\n      },\n      noBorder: true,\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Pencil[\"default\"], null),\n      label: formatMessage({\n        id: 'app.component.table.edit',\n        defaultMessage: 'Edit {target}'\n      }, {\n        target: \"\".concat(role.name)\n      })\n    })), checkCanDeleteRole(role) && /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.CheckPermissions, {\n      permissions: permissions.deleteRole\n    }, /*#__PURE__*/_react[\"default\"].createElement(_IconButton.IconButton, {\n      onClick: function onClick() {\n        return handleClickDelete(role.id);\n      },\n      noBorder: true,\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Trash[\"default\"], null),\n      label: formatMessage({\n        id: 'app.component.table.delete',\n        defaultMessage: 'Delete {target}'\n      }, {\n        target: \"\".concat(role.name)\n      })\n    })))));\n  }));\n};\n\nvar _default = TableBody;\nexports[\"default\"] = _default;\nTableBody.defaultProps = {\n  canDelete: false\n};\nTableBody.propTypes = {\n  onDelete: _propTypes[\"default\"].array.isRequired,\n  permissions: _propTypes[\"default\"].object.isRequired,\n  setRoleToDelete: _propTypes[\"default\"].func.isRequired,\n  sortedRoles: _propTypes[\"default\"].array.isRequired,\n  canDelete: _propTypes[\"default\"].bool\n};","map":null,"metadata":{},"sourceType":"script"}