{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AudioAssetCard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Card = require(\"@strapi/design-system/Card\");\n\nvar _IconButton = require(\"@strapi/design-system/IconButton\");\n\nvar _Pencil = _interopRequireDefault(require(\"@strapi/icons/Pencil\"));\n\nvar _Trash = _interopRequireDefault(require(\"@strapi/icons/Trash\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _AudioPreview = require(\"./AudioPreview\");\n\nvar _utils = require(\"../../utils\");\n\nvar Extension = /*#__PURE__*/_styledComponents[\"default\"].span.withConfig({\n  displayName: \"AudioAssetCard__Extension\",\n  componentId: \"sc-1ghdtu-0\"\n})([\"text-transform:uppercase;\"]);\n\nvar AudioPreviewWrapper = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Box.Box).withConfig({\n  displayName: \"AudioAssetCard__AudioPreviewWrapper\",\n  componentId: \"sc-1ghdtu-1\"\n})([\"canvas,audio{display:block;max-width:100%;max-height:\", \"rem;}\"], function (_ref) {\n  var size = _ref.size;\n  return size === 'M' ? 164 / 16 : 88 / 16;\n});\n\nvar AudioAssetCard = function AudioAssetCard(_ref2) {\n  var name = _ref2.name,\n      extension = _ref2.extension,\n      url = _ref2.url,\n      selected = _ref2.selected,\n      onSelect = _ref2.onSelect,\n      onEdit = _ref2.onEdit,\n      onRemove = _ref2.onRemove,\n      size = _ref2.size;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Card.Card, null, /*#__PURE__*/_react[\"default\"].createElement(_Card.CardHeader, null, /*#__PURE__*/_react[\"default\"].createElement(_Card.CardAsset, {\n    size: size\n  }, /*#__PURE__*/_react[\"default\"].createElement(AudioPreviewWrapper, {\n    size: size\n  }, /*#__PURE__*/_react[\"default\"].createElement(_AudioPreview.AudioPreview, {\n    url: url,\n    alt: name\n  }))), onSelect && /*#__PURE__*/_react[\"default\"].createElement(_Card.CardCheckbox, {\n    value: selected,\n    onValueChange: onSelect\n  }), (onRemove || onEdit) && /*#__PURE__*/_react[\"default\"].createElement(_Card.CardAction, {\n    position: \"end\"\n  }, onRemove && /*#__PURE__*/_react[\"default\"].createElement(_IconButton.IconButton, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('control-card.remove-selection'),\n      defaultMessage: 'Remove from selection'\n    }),\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_Trash[\"default\"], null),\n    onClick: onRemove\n  }), onEdit && /*#__PURE__*/_react[\"default\"].createElement(_IconButton.IconButton, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('control-card.edit'),\n      defaultMessage: 'Edit'\n    }),\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_Pencil[\"default\"], null),\n    onClick: onEdit\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Card.CardBody, null, /*#__PURE__*/_react[\"default\"].createElement(_Card.CardContent, null, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    paddingTop: 1\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Card.CardTitle, {\n    as: \"h2\"\n  }, name)), /*#__PURE__*/_react[\"default\"].createElement(_Card.CardSubtitle, null, /*#__PURE__*/_react[\"default\"].createElement(Extension, null, extension))), /*#__PURE__*/_react[\"default\"].createElement(_Card.CardBadge, null, formatMessage({\n    id: (0, _utils.getTrad)('settings.section.audio.label'),\n    defaultMessage: 'Audio'\n  }))));\n};\n\nexports.AudioAssetCard = AudioAssetCard;\nAudioAssetCard.defaultProps = {\n  onSelect: undefined,\n  onEdit: undefined,\n  onRemove: undefined,\n  selected: false,\n  size: 'M'\n};\nAudioAssetCard.propTypes = {\n  extension: _propTypes[\"default\"].string.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  onSelect: _propTypes[\"default\"].func,\n  onEdit: _propTypes[\"default\"].func,\n  onRemove: _propTypes[\"default\"].func,\n  url: _propTypes[\"default\"].string.isRequired,\n  selected: _propTypes[\"default\"].bool,\n  size: _propTypes[\"default\"].oneOf(['S', 'M'])\n};","map":null,"metadata":{},"sourceType":"script"}