{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _Plus = _interopRequireDefault(require(\"@strapi/icons/Plus\"));\n\nvar _Trash = _interopRequireDefault(require(\"@strapi/icons/Trash\"));\n\nvar _Duplicate = _interopRequireDefault(require(\"@strapi/icons/Duplicate\"));\n\nvar _Pencil = _interopRequireDefault(require(\"@strapi/icons/Pencil\"));\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _VisuallyHidden = require(\"@strapi/design-system/VisuallyHidden\");\n\nvar _Main = require(\"@strapi/design-system/Main\");\n\nvar _Table = require(\"@strapi/design-system/Table\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _lodash = require(\"lodash\");\n\nvar _matchSorter = _interopRequireDefault(require(\"match-sorter\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _utils = require(\"../../../../../../../admin/src/core/utils\");\n\nvar _hooks = require(\"../../../../../../../admin/src/hooks\");\n\nvar _permissions = _interopRequireDefault(require(\"../../../../../../../admin/src/permissions\"));\n\nvar _EmptyRole = _interopRequireDefault(require(\"../../../../../../../admin/src/pages/SettingsPage/pages/Roles/ListPage/components/EmptyRole\"));\n\nvar _RoleRow = _interopRequireDefault(require(\"../../../../../../../admin/src/pages/SettingsPage/pages/Roles/ListPage/components/RoleRow\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar useSortedRoles = function useSortedRoles() {\n  (0, _helperPlugin.useFocusWhenNavigate)();\n\n  var _useRBAC = (0, _helperPlugin.useRBAC)(_permissions[\"default\"].settings.roles),\n      isLoadingForPermissions = _useRBAC.isLoading,\n      _useRBAC$allowedActio = _useRBAC.allowedActions,\n      canCreate = _useRBAC$allowedActio.canCreate,\n      canDelete = _useRBAC$allowedActio.canDelete,\n      canRead = _useRBAC$allowedActio.canRead,\n      canUpdate = _useRBAC$allowedActio.canUpdate;\n\n  var _useRolesList = (0, _hooks.useRolesList)(false),\n      getData = _useRolesList.getData,\n      roles = _useRolesList.roles,\n      isLoading = _useRolesList.isLoading;\n\n  var _useQueryParams = (0, _helperPlugin.useQueryParams)(),\n      _useQueryParams2 = (0, _slicedToArray2[\"default\"])(_useQueryParams, 1),\n      query = _useQueryParams2[0].query;\n\n  var _q = (query === null || query === void 0 ? void 0 : query._q) || '';\n\n  var sortedRoles = (0, _matchSorter[\"default\"])(roles, _q, {\n    keys: ['name', 'description']\n  });\n  (0, _react.useEffect)(function () {\n    if (!isLoadingForPermissions && canRead) {\n      getData();\n    }\n  }, [isLoadingForPermissions, canRead, getData]);\n  return {\n    isLoadingForPermissions: isLoadingForPermissions,\n    canCreate: canCreate,\n    canDelete: canDelete,\n    canRead: canRead,\n    canUpdate: canUpdate,\n    isLoading: isLoading,\n    getData: getData,\n    sortedRoles: sortedRoles,\n    roles: roles\n  };\n};\n\nvar useRoleActions = function useRoleActions(_ref) {\n  var getData = _ref.getData,\n      canCreate = _ref.canCreate,\n      canDelete = _ref.canDelete,\n      canUpdate = _ref.canUpdate;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isWarningDeleteAllOpened = _useState2[0],\n      setIsWarningDeleteAllOpenend = _useState2[1];\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      selectedRoles = _useReducer2$.selectedRoles,\n      showModalConfirmButtonLoading = _useReducer2$.showModalConfirmButtonLoading,\n      roleToDelete = _useReducer2$.roleToDelete,\n      dispatch = _useReducer2[1];\n\n  var handleDeleteData = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var errorIds, errorsMsg;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: 'ON_REMOVE_ROLES'\n              });\n              _context.next = 4;\n              return _utils.axiosInstance.post('/admin/roles/batch-delete', {\n                ids: [roleToDelete]\n              });\n\n            case 4:\n              _context.next = 6;\n              return getData();\n\n            case 6:\n              dispatch({\n                type: 'RESET_DATA_TO_DELETE'\n              });\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              errorIds = (0, _lodash.get)(_context.t0, ['response', 'payload', 'data', 'ids'], null);\n\n              if (errorIds && Array.isArray(errorIds)) {\n                errorsMsg = errorIds.join('\\n');\n                toggleNotification({\n                  type: 'warning',\n                  message: errorsMsg\n                });\n              } else {\n                toggleNotification({\n                  type: 'warning',\n                  message: {\n                    id: 'notification.error'\n                  }\n                });\n              }\n\n            case 13:\n              handleToggleModal();\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function handleDeleteData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onRoleDuplicate = (0, _react.useCallback)(function (id) {\n    push(\"/settings/roles/duplicate/\".concat(id));\n  }, [push]);\n\n  var handleNewRoleClick = function handleNewRoleClick() {\n    return push('/settings/roles/new');\n  };\n\n  var onRoleRemove = (0, _react.useCallback)(function (roleId) {\n    dispatch({\n      type: 'SET_ROLE_TO_DELETE',\n      id: roleId\n    });\n    handleToggleModal();\n  }, []);\n\n  var handleToggleModal = function handleToggleModal() {\n    return setIsWarningDeleteAllOpenend(function (prev) {\n      return !prev;\n    });\n  };\n\n  var handleGoTo = (0, _react.useCallback)(function (id) {\n    push(\"/settings/roles/\".concat(id));\n  }, [push]);\n  var handleClickDelete = (0, _react.useCallback)(function (e, role) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (role.usersCount) {\n      toggleNotification({\n        type: 'info',\n        message: {\n          id: 'Roles.ListPage.notification.delete-not-allowed'\n        }\n      });\n    } else {\n      onRoleRemove(role.id);\n    }\n  }, [toggleNotification, onRoleRemove]);\n  var handleClickDuplicate = (0, _react.useCallback)(function (e, role) {\n    e.preventDefault();\n    e.stopPropagation();\n    onRoleDuplicate(role.id);\n  }, [onRoleDuplicate]);\n  var getIcons = (0, _react.useCallback)(function (role) {\n    return [].concat((0, _toConsumableArray2[\"default\"])(canCreate ? [{\n      onClick: function onClick(e) {\n        return handleClickDuplicate(e, role);\n      },\n      label: formatMessage({\n        id: 'app.utils.duplicate',\n        defaultMessage: 'Duplicate'\n      }),\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Duplicate[\"default\"], null)\n    }] : []), (0, _toConsumableArray2[\"default\"])(canUpdate ? [{\n      onClick: function onClick() {\n        return handleGoTo(role.id);\n      },\n      label: formatMessage({\n        id: 'app.utils.edit',\n        defaultMessage: 'Edit'\n      }),\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Pencil[\"default\"], null)\n    }] : []), (0, _toConsumableArray2[\"default\"])(canDelete ? [{\n      onClick: function onClick(e) {\n        return handleClickDelete(e, role);\n      },\n      label: formatMessage({\n        id: 'app.utils.delete',\n        defaultMessage: 'Delete'\n      }),\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Trash[\"default\"], null)\n    }] : []));\n  }, [formatMessage, handleClickDelete, handleClickDuplicate, handleGoTo, canCreate, canUpdate, canDelete]);\n  return {\n    handleNewRoleClick: handleNewRoleClick,\n    getIcons: getIcons,\n    selectedRoles: selectedRoles,\n    isWarningDeleteAllOpened: isWarningDeleteAllOpened,\n    showModalConfirmButtonLoading: showModalConfirmButtonLoading,\n    handleToggleModal: handleToggleModal,\n    handleDeleteData: handleDeleteData\n  };\n};\n\nvar RoleListPage = function RoleListPage() {\n  var _useIntl2 = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl2.formatMessage;\n\n  var _useSortedRoles = useSortedRoles(),\n      isLoadingForPermissions = _useSortedRoles.isLoadingForPermissions,\n      canCreate = _useSortedRoles.canCreate,\n      canRead = _useSortedRoles.canRead,\n      canDelete = _useSortedRoles.canDelete,\n      canUpdate = _useSortedRoles.canUpdate,\n      isLoading = _useSortedRoles.isLoading,\n      getData = _useSortedRoles.getData,\n      sortedRoles = _useSortedRoles.sortedRoles;\n\n  var _useRoleActions = useRoleActions({\n    getData: getData,\n    canCreate: canCreate,\n    canDelete: canDelete,\n    canUpdate: canUpdate\n  }),\n      handleNewRoleClick = _useRoleActions.handleNewRoleClick,\n      getIcons = _useRoleActions.getIcons,\n      isWarningDeleteAllOpened = _useRoleActions.isWarningDeleteAllOpened,\n      showModalConfirmButtonLoading = _useRoleActions.showModalConfirmButtonLoading,\n      handleToggleModal = _useRoleActions.handleToggleModal,\n      handleDeleteData = _useRoleActions.handleDeleteData; // ! TODO - Show the search bar only if the user is allowed to read - add the search input\n  // canRead\n\n\n  var rowCount = sortedRoles.length + 1;\n  var colCount = 6;\n\n  if (isLoadingForPermissions) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, null, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.LoadingIndicatorPage, null));\n  }\n\n  var title = formatMessage({\n    id: 'Settings.roles.title',\n    defaultMessage: 'roles'\n  });\n  return /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, null, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.SettingsPageTitle, {\n    name: \"Roles\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Layout.HeaderLayout, {\n    primaryAction: canCreate ? /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n      onClick: handleNewRoleClick,\n      startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null),\n      size: \"L\"\n    }, formatMessage({\n      id: 'Settings.roles.list.button.add',\n      defaultMessage: 'Add new role'\n    })) : null,\n    title: title,\n    subtitle: formatMessage({\n      id: 'Settings.roles.list.description',\n      defaultMessage: 'List of roles'\n    }),\n    as: \"h2\"\n  }), canRead && /*#__PURE__*/_react[\"default\"].createElement(_Layout.ActionLayout, {\n    startActions: /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.SearchURLQuery, {\n      label: formatMessage({\n        id: 'app.component.search.label',\n        defaultMessage: 'Search for {target}'\n      }, {\n        target: title\n      })\n    })\n  }), canRead && /*#__PURE__*/_react[\"default\"].createElement(_Layout.ContentLayout, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Table, {\n    colCount: colCount,\n    rowCount: rowCount,\n    footer: canCreate ? /*#__PURE__*/_react[\"default\"].createElement(_Table.TFooter, {\n      onClick: handleNewRoleClick,\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null)\n    }, formatMessage({\n      id: 'Settings.roles.list.button.add',\n      defaultMessage: 'Add new role'\n    })) : null\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Table.Thead, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Tr, null, /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: 'Settings.roles.list.header.name',\n    defaultMessage: 'Name'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: 'Settings.roles.list.header.description',\n    defaultMessage: 'Description'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: 'Settings.roles.list.header.users',\n    defaultMessage: 'Users'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Th, null, /*#__PURE__*/_react[\"default\"].createElement(_VisuallyHidden.VisuallyHidden, null, formatMessage({\n    id: 'Settings.roles.list.header.actions',\n    defaultMessage: 'Actions'\n  }))))), /*#__PURE__*/_react[\"default\"].createElement(_Table.Tbody, null, sortedRoles === null || sortedRoles === void 0 ? void 0 : sortedRoles.map(function (role) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_RoleRow[\"default\"], {\n      key: role.id,\n      id: role.id,\n      name: role.name,\n      description: role.description,\n      usersCount: role.usersCount,\n      icons: getIcons(role)\n    });\n  }))), !rowCount && !isLoading && /*#__PURE__*/_react[\"default\"].createElement(_EmptyRole[\"default\"], null)), /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.ConfirmDialog, {\n    isOpen: isWarningDeleteAllOpened,\n    onConfirm: handleDeleteData,\n    isConfirmButtonLoading: showModalConfirmButtonLoading,\n    onToggleDialog: handleToggleModal\n  }));\n};\n\nvar _default = RoleListPage;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}