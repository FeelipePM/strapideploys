{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar extendCTBAttributeInitialDataMiddleware = function extendCTBAttributeInitialDataMiddleware() {\n  return function (_ref) {\n    var getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        var enhanceAction = function enhanceAction() {\n          // the block here is to catch the error when trying to access the state\n          // of the ctb when the plugin is not mounted\n          try {\n            var store = getState();\n            var hasi18nEnabled = (0, _get[\"default\"])(store, ['content-type-builder_dataManagerProvider', 'modifiedData', 'contentType', 'schema', 'pluginOptions', 'i18n', 'localized'], false);\n\n            if (hasi18nEnabled) {\n              var pluginOptions = action.options ? _objectSpread(_objectSpread({}, action.options.pluginOptions), {}, {\n                i18n: {\n                  localized: true\n                }\n              }) : {\n                i18n: {\n                  localized: true\n                }\n              };\n              return next(_objectSpread(_objectSpread({}, action), {}, {\n                options: {\n                  pluginOptions: pluginOptions\n                }\n              }));\n            }\n\n            return next(action);\n          } catch (err) {\n            return next(action);\n          }\n        };\n\n        if (action.type === 'ContentTypeBuilder/FormModal/SET_ATTRIBUTE_DATA_SCHEMA' && action.forTarget === 'contentType' && !['relation', 'component'].includes(action.attributeType) && !action.isEditing) {\n          return enhanceAction();\n        }\n\n        if ((action.type === 'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO' || action.type === 'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SAVE_CURRENT_DATA') && action.forTarget === 'contentType') {\n          return enhanceAction();\n        }\n\n        return next(action);\n      };\n    };\n  };\n};\n\nvar _default = extendCTBAttributeInitialDataMiddleware;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}