{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Divider = require(\"@strapi/design-system/Divider\");\n\nvar _Select = require(\"@strapi/design-system/Select\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _qs = require(\"qs\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _utils2 = require(\"./utils\");\n\nvar _CMEditViewCopyLocale = _interopRequireDefault(require(\"../CMEditViewCopyLocale\"));\n\nvar _Bullet = _interopRequireDefault(require(\"./Bullet\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar CMEditViewLocalePicker = function CMEditViewLocalePicker(_ref) {\n  var appLocales = _ref.appLocales,\n      createPermissions = _ref.createPermissions,\n      currentEntityId = _ref.currentEntityId,\n      currentLocaleStatus = _ref.currentLocaleStatus,\n      hasDraftAndPublishEnabled = _ref.hasDraftAndPublishEnabled,\n      isSingleType = _ref.isSingleType,\n      localizations = _ref.localizations,\n      query = _ref.query,\n      readPermissions = _ref.readPermissions,\n      setQuery = _ref.setQuery,\n      slug = _ref.slug;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var currentLocale = (0, _get[\"default\"])(query, 'plugins.i18n.locale', false);\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var handleChange = function handleChange(value) {\n    if (value === currentLocale) {\n      return;\n    }\n\n    var nextLocale = options.find(function (option) {\n      return option.value === value;\n    });\n    var status = nextLocale.status,\n        id = nextLocale.id;\n    var defaultParams = {\n      plugins: _objectSpread(_objectSpread({}, query.plugins), {}, {\n        i18n: _objectSpread(_objectSpread({}, query.plugins.i18n), {}, {\n          locale: value\n        })\n      })\n    };\n\n    if (currentEntityId) {\n      defaultParams.plugins.i18n.relatedEntityId = currentEntityId;\n    }\n\n    if (isSingleType) {\n      setQuery(defaultParams);\n      return;\n    }\n\n    if (status === 'did-not-create-locale') {\n      push({\n        pathname: \"/content-manager/collectionType/\".concat(slug, \"/create\"),\n        search: (0, _qs.stringify)(defaultParams, {\n          encode: false\n        })\n      });\n      return;\n    }\n\n    push({\n      pathname: \"/content-manager/collectionType/\".concat(slug, \"/\").concat(id),\n      search: (0, _qs.stringify)(defaultParams, {\n        encode: false\n      })\n    });\n  };\n\n  var options = (0, _utils2.createLocalesOption)(appLocales, localizations).filter(function (_ref2) {\n    var status = _ref2.status,\n        value = _ref2.value;\n\n    if (status === 'did-not-create-locale') {\n      return createPermissions.find(function (_ref3) {\n        var properties = _ref3.properties;\n        return (0, _get[\"default\"])(properties, 'locales', []).includes(value);\n      });\n    }\n\n    return readPermissions.find(function (_ref4) {\n      var properties = _ref4.properties;\n      return (0, _get[\"default\"])(properties, 'locales', []).includes(value);\n    });\n  });\n  var filteredOptions = options.filter(function (_ref5) {\n    var value = _ref5.value;\n    return value !== currentLocale;\n  });\n  var currentLocaleObject = appLocales.find(function (_ref6) {\n    var code = _ref6.code;\n    return code === currentLocale;\n  });\n  var value = options.find(function (_ref7) {\n    var value = _ref7.value;\n    return value === currentLocale;\n  }) || {\n    value: currentLocaleObject.code,\n    label: currentLocaleObject.name\n  };\n\n  if (!currentLocale) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    paddingTop: 6\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"sigma\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('plugin.name'),\n    defaultMessage: 'Internationalization'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    paddingTop: 2,\n    paddingBottom: 6\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Divider.Divider, null)), /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 2\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, null, /*#__PURE__*/_react[\"default\"].createElement(_Select.Select, {\n    label: formatMessage({\n      id: (0, _utils.getTrad)('Settings.locales.modal.locales.label')\n    }),\n    onChange: handleChange,\n    value: value === null || value === void 0 ? void 0 : value.value\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Select.Option, {\n    value: value === null || value === void 0 ? void 0 : value.value,\n    disabled: true,\n    startIcon: hasDraftAndPublishEnabled ? /*#__PURE__*/_react[\"default\"].createElement(_Bullet[\"default\"], {\n      status: currentLocaleStatus\n    }) : null\n  }, value === null || value === void 0 ? void 0 : value.label), filteredOptions.map(function (option) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Select.Option, {\n      key: option.value,\n      value: option.value,\n      startIcon: hasDraftAndPublishEnabled ? /*#__PURE__*/_react[\"default\"].createElement(_Bullet[\"default\"], {\n        status: option.status\n      }) : null\n    }, option.label);\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, null, /*#__PURE__*/_react[\"default\"].createElement(_CMEditViewCopyLocale[\"default\"], {\n    appLocales: appLocales,\n    currentLocale: currentLocale,\n    localizations: localizations,\n    readPermissions: readPermissions\n  }))));\n};\n\nCMEditViewLocalePicker.defaultProps = {\n  createPermissions: [],\n  currentEntityId: null,\n  currentLocaleStatus: 'did-not-create-locale',\n  isSingleType: false,\n  localizations: [],\n  query: {},\n  readPermissions: []\n};\nCMEditViewLocalePicker.propTypes = {\n  appLocales: _propTypes[\"default\"].array.isRequired,\n  createPermissions: _propTypes[\"default\"].array,\n  currentEntityId: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n  currentLocaleStatus: _propTypes[\"default\"].string,\n  hasDraftAndPublishEnabled: _propTypes[\"default\"].bool.isRequired,\n  isSingleType: _propTypes[\"default\"].bool,\n  localizations: _propTypes[\"default\"].array,\n  query: _propTypes[\"default\"].object,\n  readPermissions: _propTypes[\"default\"].array,\n  setQuery: _propTypes[\"default\"].func.isRequired,\n  slug: _propTypes[\"default\"].string.isRequired\n};\nvar _default = CMEditViewLocalePicker;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}