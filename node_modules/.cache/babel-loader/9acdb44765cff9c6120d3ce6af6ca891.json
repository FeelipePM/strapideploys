{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _set = _interopRequireDefault(require(\"lodash/set\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _utils = require(\"../../utils\");\n\n// current\nvar initialState = {\n  fieldForm: {},\n  fieldToEdit: '',\n  initialData: {},\n  modifiedData: {}\n};\nexports.initialState = initialState;\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (draftState) {\n      var layoutFieldListPath = ['modifiedData', 'layouts', 'list'];\n\n      switch (action.type) {\n        case 'ADD_FIELD':\n          {\n            var layoutFieldList = (0, _get[\"default\"])(state, layoutFieldListPath, []);\n            (0, _set[\"default\"])(draftState, layoutFieldListPath, [].concat((0, _toConsumableArray2[\"default\"])(layoutFieldList), [action.item]));\n            break;\n          }\n\n        case 'MOVE_FIELD':\n          {\n            var _layoutFieldList = (0, _get[\"default\"])(state, layoutFieldListPath, []);\n\n            var originalIndex = action.originalIndex,\n                atIndex = action.atIndex;\n            (0, _set[\"default\"])(draftState, layoutFieldListPath, (0, _utils.arrayMoveItem)(_layoutFieldList, originalIndex, atIndex));\n            break;\n          }\n\n        case 'ON_CHANGE':\n          {\n            (0, _set[\"default\"])(draftState, ['modifiedData'].concat((0, _toConsumableArray2[\"default\"])(action.keys.split('.'))), action.value);\n            break;\n          }\n\n        case 'ON_CHANGE_FIELD_METAS':\n          {\n            (0, _set[\"default\"])(draftState, ['fieldForm', action.name], action.value);\n            break;\n          }\n\n        case 'REMOVE_FIELD':\n          {\n            var _layoutFieldList2 = (0, _get[\"default\"])(state, layoutFieldListPath, []);\n\n            (0, _set[\"default\"])(draftState, layoutFieldListPath, _layoutFieldList2.filter(function (_, index) {\n              return action.index !== index;\n            }));\n            break;\n          }\n\n        case 'SET_FIELD_TO_EDIT':\n          {\n            var fieldToEdit = action.fieldToEdit;\n            draftState.fieldToEdit = fieldToEdit;\n            draftState.fieldForm.label = (0, _get[\"default\"])(draftState, ['modifiedData', 'metadatas', fieldToEdit, 'list', 'label'], '');\n            draftState.fieldForm.sortable = (0, _get[\"default\"])(draftState, ['modifiedData', 'metadatas', fieldToEdit, 'list', 'sortable'], '');\n            break;\n          }\n\n        case 'UNSET_FIELD_TO_EDIT':\n          {\n            draftState.fieldForm = {};\n            draftState.fieldToEdit = '';\n            break;\n          }\n\n        case 'SUBMIT_FIELD_FORM':\n          {\n            var fieldMetadataPath = ['modifiedData', 'metadatas', state.fieldToEdit, 'list'];\n            (0, _set[\"default\"])(draftState, [].concat(fieldMetadataPath, ['label']), state.fieldForm.label);\n            (0, _set[\"default\"])(draftState, [].concat(fieldMetadataPath, ['sortable']), state.fieldForm.sortable);\n            break;\n          }\n\n        default:\n          return draftState;\n      }\n    })\n  );\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}