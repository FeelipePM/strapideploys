{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../../utils\");\n\nvar generateCheckboxesActions = function generateCheckboxesActions(availableActions, modifiedData, pathToData) {\n  return availableActions.map(function (_ref) {\n    var actionId = _ref.actionId,\n        isDisplayed = _ref.isDisplayed,\n        applyToProperties = _ref.applyToProperties,\n        label = _ref.label;\n\n    if (!isDisplayed) {\n      return {\n        actionId: actionId,\n        hasSomeActionsSelected: false,\n        isDisplayed: isDisplayed\n      };\n    }\n\n    var baseCheckboxNameArray = [].concat((0, _toConsumableArray2[\"default\"])(pathToData.split('..')), [actionId]);\n    var checkboxNameArray = (0, _lodash.isEmpty)(applyToProperties) ? [].concat((0, _toConsumableArray2[\"default\"])(baseCheckboxNameArray), ['properties', 'enabled']) : baseCheckboxNameArray;\n    var checkboxName = checkboxNameArray.join('..');\n    var conditionsValue = (0, _lodash.get)(modifiedData, [].concat((0, _toConsumableArray2[\"default\"])(baseCheckboxNameArray), ['conditions']), null);\n    var hasConditions = (0, _utils.createArrayOfValues)(conditionsValue).some(function (val) {\n      return val;\n    });\n\n    if ((0, _lodash.isEmpty)(applyToProperties)) {\n      var value = (0, _lodash.get)(modifiedData, checkboxNameArray, false); // Since applyToProperties is empty it is not a parent checkbox, therefore hasAllActionsSelected is\n      // equal to hasSomeActionsSelected\n\n      return {\n        actionId: actionId,\n        checkboxName: checkboxName,\n        hasAllActionsSelected: value,\n        hasConditions: hasConditions,\n        hasSomeActionsSelected: value,\n        isDisplayed: isDisplayed,\n        isParentCheckbox: false,\n        label: label,\n        pathToConditionsObject: baseCheckboxNameArray\n      };\n    }\n\n    var mainData = (0, _lodash.get)(modifiedData, checkboxNameArray, null);\n\n    var _getCheckboxState = (0, _utils.getCheckboxState)(mainData),\n        hasAllActionsSelected = _getCheckboxState.hasAllActionsSelected,\n        hasSomeActionsSelected = _getCheckboxState.hasSomeActionsSelected;\n\n    return {\n      actionId: actionId,\n      checkboxName: checkboxName,\n      hasAllActionsSelected: hasAllActionsSelected,\n      hasConditions: hasConditions,\n      hasSomeActionsSelected: hasSomeActionsSelected,\n      isDisplayed: isDisplayed,\n      isParentCheckbox: true,\n      label: label,\n      pathToConditionsObject: baseCheckboxNameArray\n    };\n  });\n};\n\nvar _default = generateCheckboxesActions;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}