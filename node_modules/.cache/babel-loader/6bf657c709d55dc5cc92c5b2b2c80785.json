{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _ChevronDown = _interopRequireDefault(require(\"@strapi/icons/ChevronDown\"));\n\nvar _ChevronUp = _interopRequireDefault(require(\"@strapi/icons/ChevronUp\"));\n\nvar _BaseCheckbox = require(\"@strapi/design-system/BaseCheckbox\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _omit = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _hooks = require(\"../../../../../../../../hooks\");\n\nvar _ConditionsButton = _interopRequireDefault(require(\"../../ConditionsButton\"));\n\nvar _ConditionsModal = _interopRequireDefault(require(\"../../ConditionsModal\"));\n\nvar _HiddenAction = _interopRequireDefault(require(\"../../HiddenAction\"));\n\nvar _constants = require(\"../../Permissions/utils/constants\");\n\nvar _RowLabelWithCheckbox = _interopRequireDefault(require(\"../../RowLabelWithCheckbox\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _generateCheckboxesActions = _interopRequireDefault(require(\"./utils/generateCheckboxesActions\"));\n\nvar _activeStyle = _interopRequireDefault(require(\"../utils/activeStyle\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar IS_DISABLED = function () {\n  if (window && window.strapi && window.strapi.isEE) {\n    return require('../../../../../../../../../../ee/admin/pages/SettingsPage/pages/Roles/EditPage/components/ContentTypeCollapse/Collapse/utils/constants')[\"default\"];\n  }\n\n  return require('./utils/constants')[\"default\"];\n}();\n\nvar activeRowStyle = function activeRowStyle(theme, isActive) {\n  return \"\\n  \".concat(Wrapper, \" {\\n    background-color: \").concat(theme.colors.primary100, \";\\n    color: \").concat(theme.colors.primary600, \";\\n    border-radius: \").concat(isActive ? '2px 2px 0 0' : '2px', \";\\n  }\\n  \").concat(Chevron, \" {\\n    display: flex;\\n  }\\n  \").concat(_ConditionsButton[\"default\"], \" {\\n    display: block;\\n  }\\n  &:hover {\\n   \").concat((0, _activeStyle[\"default\"])(theme), \"\\n  }\\n\\n  &:focus-within {\\n    \").concat(function (_ref) {\n    var theme = _ref.theme,\n        isActive = _ref.isActive;\n    return activeRowStyle(theme, isActive);\n  }, \"\\n  }\\n  \\n\");\n};\n\nvar Wrapper = /*#__PURE__*/_styledComponents[\"default\"].div.withConfig({\n  displayName: \"Collapse__Wrapper\",\n  componentId: \"sc-132fji1-0\"\n})([\"flex:1;display:flex;align-items:center;height:\", \";background-color:\", \";border:1px solid transparent;\"], _constants.rowHeight, function (_ref2) {\n  var isGrey = _ref2.isGrey,\n      theme = _ref2.theme;\n  return isGrey ? theme.colors.neutral100 : theme.colors.neutral0;\n});\n\nvar BoxWrapper = /*#__PURE__*/_styledComponents[\"default\"].div.withConfig({\n  displayName: \"Collapse__BoxWrapper\",\n  componentId: \"sc-132fji1-1\"\n})([\"display:inline-flex;min-width:100%;\", \"{display:none;}\", \" &:hover{\", \"}\"], _ConditionsButton[\"default\"], function (_ref3) {\n  var isActive = _ref3.isActive,\n      theme = _ref3.theme;\n  return isActive && activeRowStyle(theme, isActive);\n}, function (_ref4) {\n  var theme = _ref4.theme,\n      isActive = _ref4.isActive;\n  return activeRowStyle(theme, isActive);\n});\n\nvar Cell = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Flex.Flex).withConfig({\n  displayName: \"Collapse__Cell\",\n  componentId: \"sc-132fji1-2\"\n})([\"width:\", \";position:relative;\"], _constants.cellWidth);\nvar Chevron = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Box.Box).withConfig({\n  displayName: \"Collapse__Chevron\",\n  componentId: \"sc-132fji1-3\"\n})([\"display:none;svg{width:11px;}*{fill:\", \";}\"], function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.colors.primary600;\n});\n\nvar TinyDot = /*#__PURE__*/_styledComponents[\"default\"].span.withConfig({\n  displayName: \"Collapse__TinyDot\",\n  componentId: \"sc-132fji1-4\"\n})([\"position:absolute;top:-6px;left:37px;width:6px;height:6px;border-radius:20px;background:\", \";\"], function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.colors.primary600;\n});\n\nvar AbsoluteBox = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Box.Box).withConfig({\n  displayName: \"Collapse__AbsoluteBox\",\n  componentId: \"sc-132fji1-5\"\n})([\"position:absolute;right:9px;transform:translateY(10px);\"]);\n\nvar Collapse = function Collapse(_ref7) {\n  var availableActions = _ref7.availableActions,\n      isActive = _ref7.isActive,\n      isGrey = _ref7.isGrey,\n      isFormDisabled = _ref7.isFormDisabled,\n      label = _ref7.label,\n      onClickToggle = _ref7.onClickToggle,\n      pathToData = _ref7.pathToData;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isModalOpen = _useState2[0],\n      setModalOpen = _useState2[1];\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _usePermissionsDataMa = (0, _hooks.usePermissionsDataManager)(),\n      modifiedData = _usePermissionsDataMa.modifiedData,\n      onChangeParentCheckbox = _usePermissionsDataMa.onChangeParentCheckbox,\n      onChangeSimpleCheckbox = _usePermissionsDataMa.onChangeSimpleCheckbox;\n\n  var handleToggleModalIsOpen = function handleToggleModalIsOpen() {\n    setModalOpen(function (s) {\n      return !s;\n    });\n  };\n\n  var handleModalClose = function handleModalClose() {\n    setModalOpen(false);\n  }; // This corresponds to the data related to the CT left checkbox\n  // modifiedData: { collectionTypes: { [ctuid]: {create: {properties: { fields: {f1: true} }, update: {}, ... } } } }\n\n\n  var mainData = (0, _get[\"default\"])(modifiedData, pathToData.split('..'), {}); // The utils we are using: getCheckboxState, retrieves all the boolean leafs of an object in order\n  // to return the state of checkbox. Since the conditions are not related to the property we need to remove the key from the object.\n\n  var dataWithoutCondition = (0, _react.useMemo)(function () {\n    return Object.keys(mainData).reduce(function (acc, current) {\n      acc[current] = (0, _omit[\"default\"])(mainData[current], 'conditions');\n      return acc;\n    }, {});\n  }, [mainData]);\n\n  var _getCheckboxState = (0, _utils.getCheckboxState)(dataWithoutCondition),\n      hasAllActionsSelected = _getCheckboxState.hasAllActionsSelected,\n      hasSomeActionsSelected = _getCheckboxState.hasSomeActionsSelected; // Here we create an array of <checkbox>, since the state of each one of them is used in\n  // order to know if whether or not we need to display the associated action in\n  // the <ConditionsModal />\n\n\n  var checkboxesActions = (0, _react.useMemo)(function () {\n    return (0, _generateCheckboxesActions[\"default\"])(availableActions, modifiedData, pathToData);\n  }, [availableActions, modifiedData, pathToData]);\n  var doesConditionButtonHasConditions = checkboxesActions.some(function (_ref8) {\n    var hasConditions = _ref8.hasConditions;\n    return hasConditions;\n  });\n  return /*#__PURE__*/_react[\"default\"].createElement(BoxWrapper, {\n    isActive: isActive\n  }, /*#__PURE__*/_react[\"default\"].createElement(Wrapper, {\n    isGrey: isGrey\n  }, /*#__PURE__*/_react[\"default\"].createElement(_RowLabelWithCheckbox[\"default\"], {\n    isCollapsable: true,\n    isFormDisabled: isFormDisabled,\n    label: label,\n    checkboxName: pathToData,\n    onChange: onChangeParentCheckbox,\n    onClick: onClickToggle,\n    someChecked: hasSomeActionsSelected,\n    value: hasAllActionsSelected,\n    isActive: isActive\n  }, /*#__PURE__*/_react[\"default\"].createElement(Chevron, {\n    paddingLeft: 2\n  }, isActive ? /*#__PURE__*/_react[\"default\"].createElement(_ChevronUp[\"default\"], null) : /*#__PURE__*/_react[\"default\"].createElement(_ChevronDown[\"default\"], null))), /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    style: {\n      flex: 1\n    }\n  }, checkboxesActions.map(function (_ref9) {\n    var actionId = _ref9.actionId,\n        hasConditions = _ref9.hasConditions,\n        hasAllActionsSelected = _ref9.hasAllActionsSelected,\n        hasSomeActionsSelected = _ref9.hasSomeActionsSelected,\n        isDisplayed = _ref9.isDisplayed,\n        isParentCheckbox = _ref9.isParentCheckbox,\n        checkboxName = _ref9.checkboxName,\n        permissionLabel = _ref9.label;\n\n    if (!isDisplayed) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_HiddenAction[\"default\"], {\n        key: actionId\n      });\n    }\n\n    if (isParentCheckbox) {\n      return /*#__PURE__*/_react[\"default\"].createElement(Cell, {\n        key: actionId,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }, hasConditions && /*#__PURE__*/_react[\"default\"].createElement(TinyDot, null), /*#__PURE__*/_react[\"default\"].createElement(_BaseCheckbox.BaseCheckbox, {\n        disabled: isFormDisabled || IS_DISABLED,\n        name: checkboxName,\n        \"aria-label\": formatMessage({\n          id: \"Settings.permissions.select-by-permission\",\n          defaultMessage: 'Select {label} permission'\n        }, {\n          label: \"\".concat(permissionLabel, \" \").concat(label)\n        }) // Keep same signature as packages/core/admin/admin/src/components/Roles/Permissions/index.js l.91\n        ,\n        onValueChange: function onValueChange(value) {\n          onChangeParentCheckbox({\n            target: {\n              name: checkboxName,\n              value: value\n            }\n          });\n        },\n        indeterminate: hasSomeActionsSelected,\n        value: hasAllActionsSelected\n      }));\n    }\n\n    return /*#__PURE__*/_react[\"default\"].createElement(Cell, {\n      key: actionId,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }, hasConditions && /*#__PURE__*/_react[\"default\"].createElement(TinyDot, null), /*#__PURE__*/_react[\"default\"].createElement(_BaseCheckbox.BaseCheckbox, {\n      disabled: isFormDisabled || IS_DISABLED,\n      indeterminate: hasConditions,\n      name: checkboxName // Keep same signature as packages/core/admin/admin/src/components/Roles/Permissions/index.js l.91\n      ,\n      onValueChange: function onValueChange(value) {\n        onChangeSimpleCheckbox({\n          target: {\n            name: checkboxName,\n            value: value\n          }\n        });\n      },\n      value: hasAllActionsSelected\n    }));\n  })), isModalOpen && /*#__PURE__*/_react[\"default\"].createElement(_ConditionsModal[\"default\"], {\n    headerBreadCrumbs: [label, 'app.components.LeftMenuLinkContainer.settings'],\n    actions: checkboxesActions,\n    isFormDisabled: isFormDisabled,\n    onClosed: handleModalClose,\n    onToggle: handleToggleModalIsOpen\n  })), /*#__PURE__*/_react[\"default\"].createElement(AbsoluteBox, null, /*#__PURE__*/_react[\"default\"].createElement(_ConditionsButton[\"default\"], {\n    onClick: handleToggleModalIsOpen,\n    hasConditions: doesConditionButtonHasConditions\n  })));\n};\n\nCollapse.propTypes = {\n  availableActions: _propTypes[\"default\"].array.isRequired,\n  isActive: _propTypes[\"default\"].bool.isRequired,\n  isGrey: _propTypes[\"default\"].bool.isRequired,\n  isFormDisabled: _propTypes[\"default\"].bool.isRequired,\n  label: _propTypes[\"default\"].string.isRequired,\n  onClickToggle: _propTypes[\"default\"].func.isRequired,\n  pathToData: _propTypes[\"default\"].string.isRequired\n};\nvar _default = Collapse;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}