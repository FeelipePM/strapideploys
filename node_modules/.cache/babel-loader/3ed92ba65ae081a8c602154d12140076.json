{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _getTrad = _interopRequireDefault(require(\"../../../utils/getTrad\"));\n\nvar _getRelationType = _interopRequireDefault(require(\"../../../utils/getRelationType\"));\n\nvar _toRegressedEnumValue = _interopRequireDefault(require(\"../../../utils/toRegressedEnumValue\"));\n\nvar _startsWithANumber = _interopRequireDefault(require(\"../../../utils/startsWithANumber\"));\n\nvar _common = require(\"./validation/common\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar types = {\n  date: function date(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type()\n    };\n    return yup.object(shape);\n  },\n  datetime: function datetime(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type()\n    };\n    return yup.object(shape);\n  },\n  time: function time(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type()\n    };\n    return yup.object(shape);\n  },\n  \"default\": function _default(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type()\n    };\n    return yup.object(shape);\n  },\n  biginteger: function biginteger(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      \"default\": yup.string().nullable().matches(/^-?\\d*$/),\n      unique: _common.validators.unique(),\n      required: _common.validators.required(),\n      max: yup.string().nullable().matches(/^-?\\d*$/, _helperPlugin.translatedErrors.regex),\n      min: yup.string().nullable().test(_common.isMinSuperiorThanMax).matches(/^-?\\d*$/, _helperPlugin.translatedErrors.regex)\n    };\n    return yup.object(shape);\n  },\n  \"boolean\": function boolean(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      \"default\": yup[\"boolean\"]().nullable(),\n      required: _common.validators.required(),\n      unique: _common.validators.unique()\n    };\n    return yup.object(shape);\n  },\n  component: function component(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      required: _common.validators.required(),\n      max: _common.validators.max(),\n      min: _common.validators.min(),\n      component: yup.string().required(_helperPlugin.translatedErrors.required)\n    };\n    return yup.object(shape);\n  },\n  decimal: function decimal(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      \"default\": yup.number(),\n      required: _common.validators.required(),\n      max: yup.number(),\n      min: yup.number().test(_common.isMinSuperiorThanMax)\n    };\n    return yup.object(shape);\n  },\n  dynamiczone: function dynamiczone(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      required: _common.validators.required(),\n      max: _common.validators.max(),\n      min: _common.validators.min()\n    };\n    return yup.object(shape);\n  },\n  email: function email(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      \"default\": yup.string().email().nullable(),\n      unique: _common.validators.unique(),\n      required: _common.validators.required(),\n      maxLength: _common.validators.maxLength(),\n      minLength: _common.validators.minLength()\n    };\n    return yup.object(shape);\n  },\n  enumeration: function enumeration(usedAttributeNames, reservedNames) {\n    var ENUM_REGEX = new RegExp('^[_A-Za-z][_0-9A-Za-z]*$');\n    var shape = {\n      name: yup.string().test((0, _common.alreadyUsedAttributeNames)(usedAttributeNames)).test((0, _common.isNameAllowed)(reservedNames)).matches(ENUM_REGEX, _helperPlugin.translatedErrors.regex).required(_helperPlugin.translatedErrors.required),\n      type: _common.validators.type(),\n      \"default\": _common.validators[\"default\"](),\n      unique: _common.validators.unique(),\n      required: _common.validators.required(),\n      \"enum\": yup.array().of(yup.string()).min(1, _helperPlugin.translatedErrors.min).test({\n        name: 'areEnumValuesUnique',\n        message: (0, _getTrad[\"default\"])('error.validation.enum-duplicate'),\n        test: function test(values) {\n          var normalizedEnum = values.map(_toRegressedEnumValue[\"default\"]);\n          var duplicates = (0, _lodash[\"default\"])(normalizedEnum).groupBy().pickBy(function (x) {\n            return x.length > 1;\n          }).keys().value();\n          return !duplicates.length;\n        }\n      }).test({\n        name: 'doesNotHaveEmptyValues',\n        message: (0, _getTrad[\"default\"])('error.validation.enum-empty-string'),\n        test: function test(values) {\n          return !values.some(function (val) {\n            return val === '';\n          });\n        }\n      }).test({\n        name: 'doesNotStartWithANumber',\n        message: (0, _getTrad[\"default\"])('error.validation.enum-number'),\n        test: function test(values) {\n          return !values.some(_startsWithANumber[\"default\"]);\n        }\n      }),\n      enumName: yup.string().nullable()\n    };\n    return yup.object(shape);\n  },\n  \"float\": function float(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      required: _common.validators.required(),\n      \"default\": yup.number(),\n      max: yup.number(),\n      min: yup.number().test(_common.isMinSuperiorThanMax)\n    };\n    return yup.object(shape);\n  },\n  integer: function integer(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      \"default\": yup.number().integer(),\n      unique: _common.validators.unique(),\n      required: _common.validators.required(),\n      max: _common.validators.max(),\n      min: _common.validators.min()\n    };\n    return yup.object(shape);\n  },\n  json: function json(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      required: _common.validators.required(),\n      unique: _common.validators.unique()\n    };\n    return yup.object(shape);\n  },\n  media: function media(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      multiple: yup[\"boolean\"](),\n      required: _common.validators.required(),\n      allowedTypes: yup.array().of(yup.string().oneOf(['images', 'videos', 'files', 'audios'])).min(1).nullable()\n    };\n    return yup.object(shape);\n  },\n  password: function password(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      \"default\": _common.validators[\"default\"](),\n      unique: _common.validators.unique(),\n      required: _common.validators.required(),\n      maxLength: _common.validators.maxLength(),\n      minLength: _common.validators.minLength()\n    };\n    return yup.object(shape);\n  },\n  relation: function relation(usedAttributeNames, reservedNames, alreadyTakenTargetAttributes, _ref) {\n    var initialData = _ref.initialData,\n        modifiedData = _ref.modifiedData;\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      target: yup.string().required(_helperPlugin.translatedErrors.required),\n      relation: yup.string().required(),\n      type: yup.string().required(),\n      targetAttribute: yup.lazy(function () {\n        var relationType = (0, _getRelationType[\"default\"])(modifiedData.relation, modifiedData.targetAttribute);\n\n        if (relationType === 'oneWay' || relationType === 'manyWay') {\n          return yup.string().nullable();\n        }\n\n        var schema = yup.string().test((0, _common.isNameAllowed)(reservedNames));\n        var initialForbiddenName = [].concat((0, _toConsumableArray2[\"default\"])(alreadyTakenTargetAttributes.map(function (_ref2) {\n          var name = _ref2.name;\n          return name;\n        })), [modifiedData.name]);\n        var forbiddenTargetAttributeName = initialForbiddenName.filter(function (val) {\n          return val !== initialData.targetAttribute;\n        });\n        return schema.matches(_common.NAME_REGEX, _helperPlugin.translatedErrors.regex).test({\n          name: 'forbiddenTargetAttributeName',\n          message: (0, _getTrad[\"default\"])('error.validation.relation.targetAttribute-taken'),\n          test: function test(value) {\n            if (!value) {\n              return false;\n            }\n\n            return !forbiddenTargetAttributeName.includes(value);\n          }\n        }).required(_helperPlugin.translatedErrors.required);\n      })\n    };\n    return yup.object(shape);\n  },\n  richtext: function richtext(usedAttributeNames, reservedNames) {\n    var shape = {\n      name: _common.validators.name(usedAttributeNames, reservedNames),\n      type: _common.validators.type(),\n      \"default\": _common.validators[\"default\"](),\n      unique: _common.validators.unique(),\n      required: _common.validators.required(),\n      maxLength: _common.validators.maxLength(),\n      minLength: _common.validators.minLength()\n    };\n    return yup.object(shape);\n  },\n  string: function string(usedAttributeNames, reservedNames) {\n    var shape = (0, _common.createTextShape)(usedAttributeNames, reservedNames);\n    return yup.object(shape);\n  },\n  text: function text(usedAttributeNames, reservedNames) {\n    var shape = (0, _common.createTextShape)(usedAttributeNames, reservedNames);\n    return yup.object(shape);\n  },\n  uid: function uid(usedAttributeNames, reservedNames) {\n    var shape = (0, _common.createTextShape)(usedAttributeNames, reservedNames);\n    return yup.object(shape);\n  }\n};\nvar _default2 = types;\nexports[\"default\"] = _default2;","map":null,"metadata":{},"sourceType":"script"}