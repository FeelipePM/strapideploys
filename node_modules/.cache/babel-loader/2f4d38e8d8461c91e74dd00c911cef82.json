{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _PlusCircle = _interopRequireDefault(require(\"@strapi/icons/PlusCircle\"));\n\nvar _BaseButton = require(\"@strapi/design-system/BaseButton\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _utils = require(\"../../../../utils\");\n\n/**\n *\n * AddComponentButton\n *\n */\nvar StyledAddIcon = /*#__PURE__*/(0, _styledComponents[\"default\"])(_PlusCircle[\"default\"]).withConfig({\n  displayName: \"AddComponentButton__StyledAddIcon\",\n  componentId: \"sc-1yhda8c-0\"\n})([\"transform:\", \";> circle{fill:\", \";}> path{fill:\", \";}\"], function (_ref) {\n  var $isOpen = _ref.$isOpen;\n  return $isOpen ? 'rotate(45deg)' : 'rotate(0deg)';\n}, function (_ref2) {\n  var theme = _ref2.theme,\n      $hasError = _ref2.$hasError;\n  return $hasError ? theme.colors.danger200 : theme.colors.neutral150;\n}, function (_ref3) {\n  var theme = _ref3.theme,\n      $hasError = _ref3.$hasError;\n  return $hasError ? theme.colors.danger600 : theme.colors.neutral600;\n});\nvar StyledButton = /*#__PURE__*/(0, _styledComponents[\"default\"])(_BaseButton.BaseButton).withConfig({\n  displayName: \"AddComponentButton__StyledButton\",\n  componentId: \"sc-1yhda8c-1\"\n})([\"border-radius:26px;border-color:\", \";background:\", \";padding-top:\", \";padding-right:\", \";padding-bottom:\", \";padding-left:\", \";box-shadow:\", \";svg{height:\", \";width:\", \";> path{fill:\", \";}}&:hover{color:\", \" !important;\", \"{color:\", \" !important;}\", \"{> circle{fill:\", \";}> path{fill:\", \";}}}&:active{\", \"{color:\", \";}\", \"{> circle{fill:\", \";}> path{fill:\", \";}}}\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.colors.neutral150;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.colors.neutral0;\n}, function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.spaces[3];\n}, function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.spaces[4];\n}, function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.spaces[3];\n}, function (_ref9) {\n  var theme = _ref9.theme;\n  return theme.spaces[4];\n}, function (_ref10) {\n  var theme = _ref10.theme;\n  return theme.shadows.filterShadow;\n}, function (_ref11) {\n  var theme = _ref11.theme;\n  return theme.spaces[6];\n}, function (_ref12) {\n  var theme = _ref12.theme;\n  return theme.spaces[6];\n}, function (_ref13) {\n  var theme = _ref13.theme;\n  return theme.colors.neutral600;\n}, function (_ref14) {\n  var theme = _ref14.theme;\n  return theme.colors.primary600;\n}, _Typography.Typography, function (_ref15) {\n  var theme = _ref15.theme;\n  return theme.colors.primary600;\n}, StyledAddIcon, function (_ref16) {\n  var theme = _ref16.theme;\n  return theme.colors.primary600;\n}, function (_ref17) {\n  var theme = _ref17.theme;\n  return theme.colors.neutral100;\n}, _Typography.Typography, function (_ref18) {\n  var theme = _ref18.theme;\n  return theme.colors.primary600;\n}, StyledAddIcon, function (_ref19) {\n  var theme = _ref19.theme;\n  return theme.colors.primary600;\n}, function (_ref20) {\n  var theme = _ref20.theme;\n  return theme.colors.neutral100;\n});\nvar BoxFullHeight = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Box.Box).withConfig({\n  displayName: \"AddComponentButton__BoxFullHeight\",\n  componentId: \"sc-1yhda8c-2\"\n})([\"height:100%;\"]);\n\nvar AddComponentButton = function AddComponentButton(_ref21) {\n  var hasError = _ref21.hasError,\n      hasMaxError = _ref21.hasMaxError,\n      hasMinError = _ref21.hasMinError,\n      isDisabled = _ref21.isDisabled,\n      isOpen = _ref21.isOpen,\n      label = _ref21.label,\n      missingComponentNumber = _ref21.missingComponentNumber,\n      name = _ref21.name,\n      onClick = _ref21.onClick;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var addLabel = formatMessage({\n    id: (0, _utils.getTrad)('components.DynamicZone.add-component'),\n    defaultMessage: 'Add a component to {componentName}'\n  }, {\n    componentName: label || name\n  });\n  var closeLabel = formatMessage({\n    id: 'app.utils.close-label',\n    defaultMessage: 'Close'\n  });\n  var buttonLabel = isOpen ? closeLabel : addLabel;\n\n  if (hasMaxError && !isOpen) {\n    buttonLabel = formatMessage({\n      id: 'components.Input.error.validation.max',\n      defaultMessage: 'The value is too high.'\n    });\n  }\n\n  if (hasMinError && !isOpen) {\n    buttonLabel = formatMessage({\n      id: (0, _utils.getTrad)(\"components.DynamicZone.missing-components\"),\n      defaultMessage: 'There {number, plural, =0 {are # missing components} one {is # missing component} other {are # missing components}}'\n    }, {\n      number: missingComponentNumber\n    });\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n    justifyContent: \"center\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    style: {\n      cursor: isDisabled ? 'not-allowed' : 'pointer'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(StyledButton, {\n    type: \"button\",\n    onClick: onClick,\n    disabled: isDisabled,\n    hasError: hasError\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(BoxFullHeight, {\n    \"aria-hidden\": true,\n    paddingRight: 2\n  }, /*#__PURE__*/_react[\"default\"].createElement(StyledAddIcon, {\n    $isOpen: isOpen,\n    $hasError: hasError && !isOpen\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"pi\",\n    fontWeight: \"bold\",\n    textColor: hasError && !isOpen ? 'danger600' : 'neutral500'\n  }, buttonLabel))))));\n};\n\nAddComponentButton.defaultProps = {\n  label: '',\n  missingComponentNumber: 0\n};\nAddComponentButton.propTypes = {\n  label: _propTypes[\"default\"].string,\n  hasError: _propTypes[\"default\"].bool.isRequired,\n  hasMaxError: _propTypes[\"default\"].bool.isRequired,\n  hasMinError: _propTypes[\"default\"].bool.isRequired,\n  isDisabled: _propTypes[\"default\"].bool.isRequired,\n  isOpen: _propTypes[\"default\"].bool.isRequired,\n  missingComponentNumber: _propTypes[\"default\"].number,\n  name: _propTypes[\"default\"].string.isRequired,\n  onClick: _propTypes[\"default\"].func.isRequired\n};\nvar _default = AddComponentButton;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}