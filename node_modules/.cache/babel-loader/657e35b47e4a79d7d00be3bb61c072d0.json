{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _SimpleMenu = require(\"@strapi/design-system/SimpleMenu\");\n\nvar _Plus = _interopRequireDefault(require(\"@strapi/icons/Plus\"));\n\nvar _utils = require(\"../../../utils\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _RelationalFieldButton = _interopRequireDefault(require(\"./RelationalFieldButton\"));\n\nvar RelationalFields = function RelationalFields(_ref) {\n  var relationsLayout = _ref.relationsLayout,\n      editRelationsLayoutRemainingFields = _ref.editRelationsLayoutRemainingFields,\n      onRemoveField = _ref.onRemoveField,\n      onAddField = _ref.onAddField;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useLayoutDnd = (0, _hooks.useLayoutDnd)(),\n      setEditFieldToSelect = _useLayoutDnd.setEditFieldToSelect,\n      modifiedData = _useLayoutDnd.modifiedData,\n      onMoveRelation = _useLayoutDnd.onMoveRelation;\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 4\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    fontWeight: \"bold\"\n  }, formatMessage({\n    id: (0, _utils.getTrad)('containers.SettingPage.relations'),\n    defaultMessage: 'Relational fields'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, null, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"pi\",\n    textColor: \"neutral600\"\n  }, formatMessage({\n    id: 'containers.SettingPage.editSettings.description',\n    defaultMessage: 'Drag & drop the fields to build the layout'\n  })))), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    padding: 4,\n    hasRadius: true,\n    borderStyle: \"dashed\",\n    borderWidth: \"1px\",\n    borderColor: \"neutral300\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 2\n  }, relationsLayout.map(function (relationName, index) {\n    var relationLabel = (0, _get[\"default\"])(modifiedData, ['metadatas', relationName, 'edit', 'label'], '');\n    return /*#__PURE__*/_react[\"default\"].createElement(_RelationalFieldButton[\"default\"], {\n      onEditField: function onEditField() {\n        return setEditFieldToSelect(relationName);\n      },\n      onDeleteField: function onDeleteField() {\n        return onRemoveField(index);\n      },\n      key: relationName,\n      index: index,\n      name: relationName,\n      onMoveField: onMoveRelation\n    }, relationLabel || relationName);\n  }), /*#__PURE__*/_react[\"default\"].createElement(_SimpleMenu.SimpleMenu, {\n    id: \"label\",\n    label: formatMessage({\n      id: 'containers.SettingPage.add.relational-field',\n      defaultMessage: 'Insert another relational field'\n    }),\n    \"data-testid\": \"add-relation\",\n    as: _Button.Button,\n    fullWidth: true,\n    startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null),\n    endIcon: null,\n    variant: \"secondary\",\n    disabled: editRelationsLayoutRemainingFields.length === 0\n  }, editRelationsLayoutRemainingFields.map(function (remainingRelation) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_SimpleMenu.MenuItem, {\n      id: \"menuItem-\".concat(remainingRelation),\n      key: \"menuItem-\".concat(remainingRelation),\n      onClick: function onClick() {\n        return onAddField(remainingRelation);\n      }\n    }, remainingRelation);\n  })))));\n};\n\nRelationalFields.propTypes = {\n  relationsLayout: _propTypes[\"default\"].array.isRequired,\n  editRelationsLayoutRemainingFields: _propTypes[\"default\"].array.isRequired,\n  onRemoveField: _propTypes[\"default\"].func.isRequired,\n  onAddField: _propTypes[\"default\"].func.isRequired\n};\nvar _default = RelationalFields;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}