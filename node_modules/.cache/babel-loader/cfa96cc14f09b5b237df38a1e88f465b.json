{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../../utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * We need to format the actions to an array of object that matches the ConditionsModal action's props\n * @param {array<object>} actions\n * @config {string} displayName the displayName of the action\n * @config {string} action requied, the name of the action\n * @param {object} modifiedData\n * @param {array} pathToData\n */\nvar formatActions = function formatActions(actions, modifiedData, pathToData) {\n  return actions.map(function (action) {\n    var checkboxName = [].concat((0, _toConsumableArray2[\"default\"])(pathToData), [action.action, 'properties', 'enabled']);\n    var checkboxValue = (0, _lodash.get)(modifiedData, checkboxName, false);\n    var conditionValue = (0, _lodash.get)(modifiedData, [].concat((0, _toConsumableArray2[\"default\"])(pathToData), [action.action, 'conditions']), {});\n    var hasConditions = (0, _utils.createArrayOfValues)(conditionValue).some(function (val) {\n      return val;\n    });\n    return _objectSpread(_objectSpread({}, action), {}, {\n      isDisplayed: checkboxValue,\n      checkboxName: checkboxName.join('..'),\n      hasSomeActionsSelected: checkboxValue,\n      value: checkboxValue,\n      hasConditions: hasConditions,\n      label: action.displayName,\n      actionId: action.action,\n      pathToConditionsObject: [].concat((0, _toConsumableArray2[\"default\"])(pathToData), [action.action])\n    });\n  });\n};\n\nvar _default = formatActions;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}