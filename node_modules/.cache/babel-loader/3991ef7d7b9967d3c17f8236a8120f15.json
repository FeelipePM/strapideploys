{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports[\"default\"] = void 0;\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar initialState = {\n  notifId: 0,\n  notifications: []\n};\nexports.initialState = initialState;\n\nvar notificationReducer = function notificationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return (// eslint-disable-next-line consistent-return\n    (0, _immer[\"default\"])(state, function (draftState) {\n      switch (action.type) {\n        case 'SHOW_NOTIFICATION':\n          {\n            draftState.notifications.push({\n              // No action.config spread to limit the notification API and avoid customization\n              id: state.notifId,\n              type: (0, _get[\"default\"])(action, ['config', 'type'], 'success'),\n              message: (0, _get[\"default\"])(action, ['config', 'message'], {\n                id: 'notification.success.saved',\n                defaultMessage: 'Saved'\n              }),\n              link: (0, _get[\"default\"])(action, ['config', 'link'], null),\n              timeout: (0, _get[\"default\"])(action, ['config', 'timeout'], 2500),\n              blockTransition: (0, _get[\"default\"])(action, ['config', 'blockTransition'], false),\n              onClose: (0, _get[\"default\"])(action, ['config', 'onClose'], null)\n            });\n            draftState.notifId = state.notifId + 1;\n            break;\n          }\n\n        case 'HIDE_NOTIFICATION':\n          {\n            var indexToRemove = state.notifications.findIndex(function (notif) {\n              return notif.id === action.id;\n            });\n\n            if (indexToRemove !== -1) {\n              draftState.notifications.splice(indexToRemove, 1);\n            }\n\n            break;\n          }\n\n        default:\n          {\n            return draftState;\n          }\n      }\n    })\n  );\n};\n\nvar _default = notificationReducer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}