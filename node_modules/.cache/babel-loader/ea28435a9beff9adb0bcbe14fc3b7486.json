{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _react = require(\"react\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _LiveRegions = require(\"@strapi/design-system/LiveRegions\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _utils = require(\"../../../core/utils\");\n\nvar _exposedHooks = require(\"../../../exposedHooks\");\n\nvar _utils2 = require(\"../../utils\");\n\nvar _actions = require(\"./actions\");\n\nvar _selectors = require(\"./selectors\");\n\nvar _getContentTypeLinks = _interopRequireDefault(require(\"./utils/getContentTypeLinks\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar useModels = function useModels() {\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n  var state = (0, _reactRedux.useSelector)((0, _selectors.selectAppDomain)());\n  var fetchDataRef = (0, _react.useRef)();\n\n  var _useRBACProvider = (0, _helperPlugin.useRBACProvider)(),\n      allPermissions = _useRBACProvider.allPermissions;\n\n  var _useStrapiApp = (0, _helperPlugin.useStrapiApp)(),\n      runHookWaterfall = _useStrapiApp.runHookWaterfall;\n\n  var CancelToken = _axios[\"default\"].CancelToken;\n  var source = CancelToken.source();\n\n  var _useNotifyAT = (0, _LiveRegions.useNotifyAT)(),\n      notifyStatus = _useNotifyAT.notifyStatus;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var _yield$Promise$all, _yield$Promise$all2, components, models, _yield$getContentType, authorizedCtLinks, authorizedStLinks, _runHookWaterfall, ctLinks, _runHookWaterfall2, stLinks, actionToDispatch;\n\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch((0, _actions.getData)());\n              _context.prev = 1;\n              _context.next = 4;\n              return Promise.all(['components', 'content-types'].map(function (endPoint) {\n                return _utils.axiosInstance.get((0, _utils2.getRequestUrl)(endPoint), {\n                  cancelToken: source.token\n                });\n              }));\n\n            case 4:\n              _yield$Promise$all = _context.sent;\n              _yield$Promise$all2 = (0, _slicedToArray2[\"default\"])(_yield$Promise$all, 2);\n              components = _yield$Promise$all2[0].data.data;\n              models = _yield$Promise$all2[1].data.data;\n              notifyStatus(formatMessage({\n                id: (0, _utils2.getTrad)('App.schemas.data-loaded'),\n                defaultMessage: 'The schemas have been successfully loaded.'\n              }));\n              _context.next = 11;\n              return (0, _getContentTypeLinks[\"default\"])(models, allPermissions, toggleNotification);\n\n            case 11:\n              _yield$getContentType = _context.sent;\n              authorizedCtLinks = _yield$getContentType.authorizedCtLinks;\n              authorizedStLinks = _yield$getContentType.authorizedStLinks;\n              _runHookWaterfall = runHookWaterfall(_exposedHooks.MUTATE_COLLECTION_TYPES_LINKS, {\n                ctLinks: authorizedCtLinks,\n                models: models\n              }), ctLinks = _runHookWaterfall.ctLinks;\n              _runHookWaterfall2 = runHookWaterfall(_exposedHooks.MUTATE_SINGLE_TYPES_LINKS, {\n                stLinks: authorizedStLinks,\n                models: models\n              }), stLinks = _runHookWaterfall2.stLinks;\n              actionToDispatch = (0, _actions.setContentTypeLinks)(ctLinks, stLinks, models, components);\n              dispatch(actionToDispatch);\n              _context.next = 26;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](1);\n\n              if (!_axios[\"default\"].isCancel(_context.t0)) {\n                _context.next = 24;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 24:\n              console.error(_context.t0);\n              toggleNotification({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 20]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  fetchDataRef.current = fetchData;\n  (0, _react.useEffect)(function () {\n    fetchDataRef.current();\n    return function () {\n      source.cancel('Operation canceled by the user.');\n      dispatch((0, _actions.resetProps)());\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, toggleNotification]);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    refetchData: fetchDataRef.current\n  });\n};\n\nvar _default = useModels;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}