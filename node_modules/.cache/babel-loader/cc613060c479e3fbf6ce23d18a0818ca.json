{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _lodash = require(\"lodash\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _Main = require(\"@strapi/design-system/Main\");\n\nvar _Layout = require(\"@strapi/design-system/Layout\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Grid = require(\"@strapi/design-system/Grid\");\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _TextInput = require(\"@strapi/design-system/TextInput\");\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _LiveRegions = require(\"@strapi/design-system/LiveRegions\");\n\nvar _Envelop = _interopRequireDefault(require(\"@strapi/icons/Envelop\"));\n\nvar _Configuration = _interopRequireDefault(require(\"./components/Configuration\"));\n\nvar _schema = _interopRequireDefault(require(\"../../utils/schema\"));\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\nvar _api = require(\"./utils/api\");\n\nvar _EmailHeader = _interopRequireDefault(require(\"./components/EmailHeader\"));\n\nvar _getTrad = _interopRequireDefault(require(\"../../utils/getTrad\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ProtectedSettingsPage = function ProtectedSettingsPage() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.CheckPagePermissions, {\n    permissions: _permissions[\"default\"].settings\n  }, /*#__PURE__*/_react[\"default\"].createElement(SettingsPage, null));\n};\n\nvar SettingsPage = function SettingsPage() {\n  var _formErrors$email, _formErrors$email2;\n\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useOverlayBlocker = (0, _helperPlugin.useOverlayBlocker)(),\n      lockApp = _useOverlayBlocker.lockApp,\n      unlockApp = _useOverlayBlocker.unlockApp;\n\n  var _useNotifyAT = (0, _LiveRegions.useNotifyAT)(),\n      notifyStatus = _useNotifyAT.notifyStatus;\n\n  (0, _helperPlugin.useFocusWhenNavigate)();\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      formErrors = _useState2[0],\n      setFormErrors = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      isSubmitting = _useState6[0],\n      setIsSubmitting = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      testAddress = _useState8[0],\n      setTestAddress = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2[\"default\"])(_useState9, 2),\n      isTestAddressValid = _useState10[0],\n      setIsTestAddressValid = _useState10[1];\n\n  var _useState11 = (0, _react.useState)({\n    provider: '',\n    settings: {\n      defaultFrom: '',\n      defaultReplyTo: '',\n      testAddress: ''\n    }\n  }),\n      _useState12 = (0, _slicedToArray2[\"default\"])(_useState11, 2),\n      config = _useState12[0],\n      setConfig = _useState12[1];\n\n  (0, _react.useEffect)(function () {\n    setIsLoading(true);\n    (0, _api.fetchEmailSettings)().then(function (config) {\n      notifyStatus(formatMessage({\n        id: (0, _getTrad[\"default\"])('Settings.email.plugin.notification.data.loaded'),\n        defaultMessage: 'Email settings data has been loaded'\n      }));\n      setConfig(config);\n      var testAddressFound = (0, _lodash.get)(config, 'settings.testAddress');\n\n      if (testAddressFound) {\n        setTestAddress(testAddressFound);\n      }\n    })[\"catch\"](function () {\n      return toggleNotification({\n        type: 'warning',\n        message: formatMessage({\n          id: (0, _getTrad[\"default\"])('Settings.email.plugin.notification.config.error'),\n          defaultMessage: 'Failed to retrieve the email config'\n        })\n      });\n    })[\"finally\"](function () {\n      return setIsLoading(false);\n    });\n  }, [formatMessage, toggleNotification, notifyStatus]);\n  (0, _react.useEffect)(function () {\n    if (formErrors.email) {\n      var input = document.querySelector('#test-address-input');\n      input.focus();\n    }\n  }, [formErrors]);\n  (0, _react.useEffect)(function () {\n    _schema[\"default\"].validate({\n      email: testAddress\n    }, {\n      abortEarly: false\n    }).then(function () {\n      return setIsTestAddressValid(true);\n    })[\"catch\"](function () {\n      return setIsTestAddressValid(false);\n    });\n  }, [testAddress]);\n\n  var handleChange = function handleChange(e) {\n    setTestAddress(function () {\n      return e.target.value;\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(event) {\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return _schema[\"default\"].validate({\n                email: testAddress\n              }, {\n                abortEarly: false\n              });\n\n            case 4:\n              setIsSubmitting(true);\n              lockApp();\n              (0, _api.postEmailTest)({\n                to: testAddress\n              }).then(function () {\n                toggleNotification({\n                  type: 'success',\n                  message: formatMessage({\n                    id: (0, _getTrad[\"default\"])('Settings.email.plugin.notification.test.success'),\n                    defaultMessage: 'Email test succeeded, check the {to} mailbox'\n                  }, {\n                    to: testAddress\n                  })\n                });\n              })[\"catch\"](function () {\n                toggleNotification({\n                  type: 'warning',\n                  message: formatMessage({\n                    id: (0, _getTrad[\"default\"])('Settings.email.plugin.notification.test.error'),\n                    defaultMessage: 'Failed to send a test mail to {to}'\n                  }, {\n                    to: testAddress\n                  })\n                });\n              })[\"finally\"](function () {\n                setIsSubmitting(false);\n                unlockApp();\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              setFormErrors((0, _helperPlugin.getYupInnerErrors)(_context.t0));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (isLoading) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, {\n      labelledBy: \"title\",\n      \"aria-busy\": \"true\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_EmailHeader[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_Layout.ContentLayout, null, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.LoadingIndicatorPage, null)));\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, {\n    labelledBy: \"title\",\n    \"aria-busy\": isSubmitting\n  }, /*#__PURE__*/_react[\"default\"].createElement(_EmailHeader[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_Layout.ContentLayout, null, /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 7\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    background: \"neutral0\",\n    hasRadius: true,\n    shadow: \"filterShadow\",\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 7,\n    paddingRight: 7\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Configuration[\"default\"], {\n    config: config\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    background: \"neutral0\",\n    hasRadius: true,\n    shadow: \"filterShadow\",\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 7,\n    paddingRight: 7\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 4\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n    variant: \"delta\",\n    as: \"h2\"\n  }, formatMessage({\n    id: (0, _getTrad[\"default\"])('Settings.email.plugin.title.test'),\n    defaultMessage: 'Test email delivery'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.Grid, {\n    gap: 5,\n    alignItems: \"end\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n    col: 6,\n    s: 12\n  }, /*#__PURE__*/_react[\"default\"].createElement(_TextInput.TextInput, {\n    id: \"test-address-input\",\n    name: \"test-address\",\n    onChange: handleChange,\n    label: formatMessage({\n      id: (0, _getTrad[\"default\"])('Settings.email.plugin.label.testAddress'),\n      defaultMessage: 'Recipient email'\n    }),\n    value: testAddress,\n    error: ((_formErrors$email = formErrors.email) === null || _formErrors$email === void 0 ? void 0 : _formErrors$email.id) && formatMessage({\n      id: (0, _getTrad[\"default\"])(\"\".concat((_formErrors$email2 = formErrors.email) === null || _formErrors$email2 === void 0 ? void 0 : _formErrors$email2.id)),\n      defaultMessage: 'This is an invalid email'\n    }),\n    placeholder: formatMessage({\n      id: (0, _getTrad[\"default\"])('Settings.email.plugin.placeholder.testAddress'),\n      defaultMessage: 'ex: developer@example.com'\n    })\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n    col: 7,\n    s: 12\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, {\n    loading: isSubmitting,\n    disabled: !isTestAddressValid,\n    type: \"submit\",\n    startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Envelop[\"default\"], null)\n  }, formatMessage({\n    id: (0, _getTrad[\"default\"])('Settings.email.plugin.button.test-email'),\n    defaultMessage: 'Send test email'\n  }))))))))));\n};\n\nvar _default = ProtectedSettingsPage;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}