{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _cloneDeep = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _checkPermissions = _interopRequireDefault(require(\"./checkPermissions\"));\n\nvar getGeneralLinks = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(permissions, generalSectionRawLinks, shouldUpdateStrapi) {\n    var generalSectionPermissionsPromises, generalSectionLinksPermissions, authorizedGeneralSectionLinks, settingsLinkIndex, authorizedGeneralLinksClone;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            generalSectionPermissionsPromises = (0, _checkPermissions[\"default\"])(permissions, generalSectionRawLinks);\n            _context.next = 3;\n            return Promise.all(generalSectionPermissionsPromises);\n\n          case 3:\n            generalSectionLinksPermissions = _context.sent;\n            authorizedGeneralSectionLinks = generalSectionRawLinks.filter(function (_, index) {\n              return generalSectionLinksPermissions[index];\n            });\n            settingsLinkIndex = authorizedGeneralSectionLinks.findIndex(function (obj) {\n              return obj.to === '/settings';\n            });\n\n            if (!(settingsLinkIndex === -1)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", []);\n\n          case 8:\n            authorizedGeneralLinksClone = (0, _cloneDeep[\"default\"])(authorizedGeneralSectionLinks);\n            authorizedGeneralLinksClone[settingsLinkIndex].notificationsCount = shouldUpdateStrapi ? 1 : 0;\n            return _context.abrupt(\"return\", authorizedGeneralLinksClone);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getGeneralLinks(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = getGeneralLinks;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}