{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.createPropertyArray = exports.createPermissionWithProperties = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../../utils\");\n\nvar _formatSettingsPermissionsToAPI = require(\"./formatSettingsPermissionsToAPI\");\n\n/**\n * Returns an array of property values\n * @param {object} propertyValue\n * @param {string} prefix\n * @returns {array<string>}\n */\nvar createPropertyArray = function createPropertyArray(propertyValue) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Object.entries(propertyValue).reduce(function (acc, current) {\n    var _current = (0, _slicedToArray2[\"default\"])(current, 2),\n        name = _current[0],\n        value = _current[1];\n\n    if ((0, _lodash.isObject)(value)) {\n      return [].concat((0, _toConsumableArray2[\"default\"])(acc), (0, _toConsumableArray2[\"default\"])(createPropertyArray(value, \"\".concat(prefix).concat(name, \".\"))));\n    }\n\n    if (value && !(0, _lodash.isObject)(value)) {\n      acc.push(\"\".concat(prefix).concat(name));\n    }\n\n    return acc;\n  }, []);\n};\n/**\n *\n * @param {string} action\n * @param {string} subject\n * @param {object} param2\n * @config {object} conditions\n * @config {object} the name of the properties array we need to fill\n * @returns {object}\n */\n\n\nexports.createPropertyArray = createPropertyArray;\n\nvar createPermissionWithProperties = function createPermissionWithProperties(action, subject, _ref) {\n  var conditions = _ref.conditions,\n      properties = _ref.properties;\n  return Object.entries(properties).reduce(function (acc, current) {\n    var _current2 = (0, _slicedToArray2[\"default\"])(current, 2),\n        propertyName = _current2[0],\n        propertyValue = _current2[1];\n\n    acc.properties[propertyName] = createPropertyArray(propertyValue);\n    return acc;\n  }, {\n    action: action,\n    subject: subject,\n    conditions: (0, _formatSettingsPermissionsToAPI.createConditionsArray)(conditions),\n    properties: {}\n  });\n};\n/**\n *\n * @param {string} action The name of the action\n * @param {string} subject The name of the subject\n * @param {object} param2\n * @returns {object}\n */\n\n\nexports.createPermissionWithProperties = createPermissionWithProperties;\n\nvar createPermissionWithoutProperties = function createPermissionWithoutProperties(action, subject, _ref2) {\n  var conditions = _ref2.conditions;\n  return {\n    action: action,\n    subject: subject,\n    properties: {},\n    conditions: (0, _formatSettingsPermissionsToAPI.createConditionsArray)(conditions)\n  };\n};\n/**\n *\n * @param {string} subject  The name of the subject\n * @param {object} actions The subject's actions\n * @returns {array<object>}\n */\n\n\nvar createSubjectPermissions = function createSubjectPermissions(subject, actions) {\n  var permissions = Object.entries(actions).reduce(function (acc, current) {\n    var _current3 = (0, _slicedToArray2[\"default\"])(current, 2),\n        actionName = _current3[0],\n        permissions = _current3[1];\n\n    var shouldCreatePermission = (0, _utils.createArrayOfValues)(permissions).some(function (val) {\n      return val;\n    });\n\n    if (!shouldCreatePermission) {\n      return acc;\n    }\n\n    if (!(0, _lodash.has)(permissions, 'properties.enabled')) {\n      var createdPermissionsArray = createPermissionWithProperties(actionName, subject, permissions);\n      return [].concat((0, _toConsumableArray2[\"default\"])(acc), [createdPermissionsArray]);\n    }\n\n    if (!permissions.properties.enabled) {\n      return acc;\n    }\n\n    var permission = createPermissionWithoutProperties(actionName, subject, permissions);\n    acc.push(permission);\n    return acc;\n  }, []);\n  return permissions;\n};\n/**\n *\n * @param {object} contentTypesPermissions\n * @returns {array<object>}\n */\n\n\nvar formatContentTypesPermissionToAPI = function formatContentTypesPermissionToAPI(contentTypesPermissions) {\n  var permissions = Object.entries(contentTypesPermissions).reduce(function (allPermissions, current) {\n    var _current4 = (0, _slicedToArray2[\"default\"])(current, 2),\n        subject = _current4[0],\n        currentSubjectActions = _current4[1];\n\n    var permissions = createSubjectPermissions(subject, currentSubjectActions);\n    return [].concat((0, _toConsumableArray2[\"default\"])(allPermissions), (0, _toConsumableArray2[\"default\"])(permissions));\n  }, []);\n  return permissions;\n};\n\nvar _default = formatContentTypesPermissionToAPI;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}