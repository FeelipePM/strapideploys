{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReplaceMediaButton = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _Button = require(\"@strapi/design-system/Button\");\n\nvar _VisuallyHidden = require(\"@strapi/design-system/VisuallyHidden\");\n\nvar _utils = require(\"../../utils\");\n\nvar _excluded = [\"onSelectMedia\", \"acceptedMime\", \"trackedLocation\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ReplaceMediaButton = function ReplaceMediaButton(_ref) {\n  var onSelectMedia = _ref.onSelectMedia,\n      acceptedMime = _ref.acceptedMime,\n      trackedLocation = _ref.trackedLocation,\n      props = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded);\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var inputRef = (0, _react.useRef)(null);\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var handleClick = function handleClick(e) {\n    e.preventDefault();\n\n    if (trackedLocation) {\n      trackUsage('didReplaceMedia', {\n        location: trackedLocation\n      });\n    }\n\n    inputRef.current.click();\n  };\n\n  var handleChange = function handleChange() {\n    var file = inputRef.current.files[0];\n    onSelectMedia(file);\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button.Button, (0, _extends2[\"default\"])({\n    variant: \"secondary\",\n    onClick: handleClick\n  }, props), formatMessage({\n    id: (0, _utils.getTrad)('control-card.replace-media'),\n    defaultMessage: 'Replace media'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_VisuallyHidden.VisuallyHidden, null, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n    accept: acceptedMime,\n    type: \"file\",\n    name: \"file\",\n    tabIndex: -1,\n    ref: inputRef,\n    onChange: handleChange,\n    \"aria-hidden\": true\n  })));\n};\n\nexports.ReplaceMediaButton = ReplaceMediaButton;\nReplaceMediaButton.defaultProps = {\n  trackedLocation: undefined\n};\nReplaceMediaButton.propTypes = {\n  acceptedMime: _propTypes[\"default\"].string.isRequired,\n  onSelectMedia: _propTypes[\"default\"].func.isRequired,\n  trackedLocation: _propTypes[\"default\"].string\n};","map":null,"metadata":{},"sourceType":"script"}