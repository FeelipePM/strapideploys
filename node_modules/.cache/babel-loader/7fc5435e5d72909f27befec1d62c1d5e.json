{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Pagination = require(\"./Pagination\");\n\nvar _components = require(\"./components\");\n\n/**\n * The component works as follows: this is a duplicate of the helper-plugin one but without the router\n * `1` , 2, 3, ... 10\n * 1, `2`, 3, ... 10\n * 1, 2, `3`, 4, ... 10\n * 1, 2, 3, `4`, 5, ... 10\n * 1, ..,4, `5`, 6, ... 10\n *\n * 1, ...., 8, 9, `10`\n * 1, ...., 8, `9`, 10\n * 1, ...., 7, `8`, 9, 10\n * 1, ... 6, `7`, 8, 9, 10\n */\nvar PaginationFooter = function PaginationFooter(_ref) {\n  var activePage = _ref.activePage,\n      onChangePage = _ref.onChangePage,\n      pageCount = _ref.pagination.pageCount;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var previousActivePage = activePage - 1;\n  var nextActivePage = activePage + 1;\n  var firstLinks = [/*#__PURE__*/_react[\"default\"].createElement(_components.PageLink, {\n    key: 1,\n    number: 1,\n    onClick: function onClick() {\n      onChangePage(1);\n    }\n  }, formatMessage({\n    id: 'components.pagination.go-to',\n    defaultMessage: 'Go to page {page}'\n  }, {\n    page: 1\n  }))];\n\n  if (pageCount <= 4) {\n    var links = Array.from({\n      length: pageCount\n    }).map(function (_, i) {\n      return i + 1;\n    }).map(function (number) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_components.PageLink, {\n        key: number,\n        number: number,\n        onClick: function onClick() {\n          return onChangePage(number);\n        }\n      }, formatMessage({\n        id: 'components.pagination.go-to',\n        defaultMessage: 'Go to page {page}'\n      }, {\n        page: number\n      }));\n    });\n    return /*#__PURE__*/_react[\"default\"].createElement(_Pagination.Pagination, {\n      activePage: activePage,\n      pageCount: pageCount\n    }, /*#__PURE__*/_react[\"default\"].createElement(_components.PreviousLink, {\n      onClick: function onClick() {\n        return onChangePage(previousActivePage);\n      }\n    }, formatMessage({\n      id: 'components.pagination.go-to-previous',\n      defaultMessage: 'Go to previous page'\n    })), links, /*#__PURE__*/_react[\"default\"].createElement(_components.NextLink, {\n      onClick: function onClick() {\n        return onChangePage(nextActivePage);\n      }\n    }, formatMessage({\n      id: 'components.pagination.go-to-next',\n      defaultMessage: 'Go to next page'\n    })));\n  }\n\n  var firstLinksToCreate = [];\n  var lastLinks = [];\n  var lastLinksToCreate = [];\n  var middleLinks = [];\n\n  if (pageCount > 1) {\n    lastLinks.push( /*#__PURE__*/_react[\"default\"].createElement(_components.PageLink, {\n      key: pageCount,\n      number: pageCount,\n      onClick: function onClick() {\n        return onChangePage(pageCount);\n      }\n    }, formatMessage({\n      id: 'components.pagination.go-to',\n      defaultMessage: 'Go to page {page}'\n    }, {\n      page: pageCount\n    })));\n  }\n\n  if (activePage === 1 && pageCount >= 3) {\n    firstLinksToCreate = [2];\n  }\n\n  if (activePage === 2 && pageCount >= 3) {\n    if (pageCount === 5) {\n      firstLinksToCreate = [2, 3, 4];\n    } else if (pageCount === 3) {\n      firstLinksToCreate = [2];\n    } else {\n      firstLinksToCreate = [2, 3];\n    }\n  }\n\n  if (activePage === 4 && pageCount >= 3) {\n    firstLinksToCreate = [2];\n  }\n\n  if (activePage === pageCount && pageCount >= 3) {\n    lastLinksToCreate = [pageCount - 1];\n  }\n\n  if (activePage === pageCount - 2 && pageCount > 3) {\n    lastLinksToCreate = [activePage + 1, activePage, activePage - 1];\n  }\n\n  if (activePage === pageCount - 3 && pageCount > 3 && activePage > 5) {\n    lastLinksToCreate = [activePage + 2, activePage + 1, activePage, activePage - 1];\n  }\n\n  if (activePage === pageCount - 1 && pageCount > 3) {\n    lastLinksToCreate = [activePage, activePage - 1];\n  }\n\n  lastLinksToCreate.forEach(function (number) {\n    lastLinks.unshift( /*#__PURE__*/_react[\"default\"].createElement(_components.PageLink, {\n      key: number,\n      number: number,\n      onClick: function onClick() {\n        return onChangePage(number);\n      }\n    }, \"Go to page \", number));\n  });\n  firstLinksToCreate.forEach(function (number) {\n    firstLinks.push( /*#__PURE__*/_react[\"default\"].createElement(_components.PageLink, {\n      key: number,\n      number: number,\n      onClick: function onClick() {\n        return onChangePage(number);\n      }\n    }, formatMessage({\n      id: 'components.pagination.go-to',\n      defaultMessage: 'Go to page {page}'\n    }, {\n      page: number\n    })));\n  });\n\n  if (![1, 2].includes(activePage) && activePage <= pageCount - 3 && firstLinks.length + lastLinks.length < 6) {\n    var middleLinksToCreate = [activePage - 1, activePage, activePage + 1];\n    middleLinksToCreate.forEach(function (number) {\n      middleLinks.push( /*#__PURE__*/_react[\"default\"].createElement(_components.PageLink, {\n        key: number,\n        number: number,\n        onClick: function onClick() {\n          return onChangePage(number);\n        }\n      }, formatMessage({\n        id: 'components.pagination.go-to',\n        defaultMessage: 'Go to page {page}'\n      }, {\n        page: number\n      })));\n    });\n  }\n\n  var shouldShowDotsAfterFirstLink = pageCount > 5 || pageCount === 5 && (activePage === 1 || activePage === 5);\n  var shouldShowMiddleDots = middleLinks.length > 2 && activePage > 4 && pageCount > 5;\n  var beforeDotsLinksLength = shouldShowMiddleDots ? pageCount - activePage - 1 : pageCount - firstLinks.length - lastLinks.length;\n  var afterDotsLength = shouldShowMiddleDots ? pageCount - firstLinks.length - lastLinks.length : pageCount - activePage - 1;\n  return /*#__PURE__*/_react[\"default\"].createElement(_Pagination.Pagination, {\n    activePage: activePage,\n    pageCount: pageCount\n  }, /*#__PURE__*/_react[\"default\"].createElement(_components.PreviousLink, {\n    onClick: function onClick() {\n      return onChangePage(previousActivePage);\n    }\n  }, formatMessage({\n    id: 'components.pagination.go-to-previous',\n    defaultMessage: 'Go to previous page'\n  })), firstLinks, shouldShowMiddleDots && /*#__PURE__*/_react[\"default\"].createElement(_components.Dots, null, formatMessage({\n    id: 'components.pagination.remaining-links',\n    defaultMessage: 'And {number} other links'\n  }, {\n    number: beforeDotsLinksLength\n  })), middleLinks, shouldShowDotsAfterFirstLink && /*#__PURE__*/_react[\"default\"].createElement(_components.Dots, null, formatMessage({\n    id: 'components.pagination.remaining-links',\n    defaultMessage: 'And {number} other links'\n  }, {\n    number: afterDotsLength\n  })), lastLinks, /*#__PURE__*/_react[\"default\"].createElement(_components.NextLink, {\n    onClick: function onClick() {\n      return onChangePage(nextActivePage);\n    }\n  }, formatMessage({\n    id: 'components.pagination.go-to-next',\n    defaultMessage: 'Go to next page'\n  })));\n};\n\nPaginationFooter.propTypes = {\n  activePage: _propTypes[\"default\"].number.isRequired,\n  onChangePage: _propTypes[\"default\"].func.isRequired,\n  pagination: _propTypes[\"default\"].shape({\n    pageCount: _propTypes[\"default\"].number.isRequired\n  }).isRequired\n};\nvar _default = PaginationFooter;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}