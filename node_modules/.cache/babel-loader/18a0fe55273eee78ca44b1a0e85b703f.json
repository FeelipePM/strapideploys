{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.initialState = void 0;\n\nvar _immer = _interopRequireDefault(require(\"immer\"));\n\nvar _lodash = require(\"lodash\");\n\n/* eslint-disable consistent-return */\nvar initialState = {\n  fieldsToPick: [],\n  formErrors: {},\n  initialData: {},\n  isLoading: true,\n  modifiedData: {},\n  showHeaderButtonLoader: false,\n  showHeaderLoader: true\n};\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  return (0, _immer[\"default\"])(state, function (draftState) {\n    switch (action.type) {\n      case 'GET_DATA_SUCCEEDED':\n        {\n          draftState.isLoading = false;\n          draftState.showHeaderLoader = false;\n          draftState.initialData = (0, _lodash.pick)(action.data, state.fieldsToPick);\n          draftState.modifiedData = (0, _lodash.pick)(action.data, state.fieldsToPick);\n          break;\n        }\n\n      case 'ON_CANCEL':\n        {\n          draftState.modifiedData = state.initialData;\n          draftState.formErrors = {};\n          break;\n        }\n\n      case 'ON_CHANGE':\n        {\n          if (action.inputType === 'password' && !action.value) {\n            (0, _lodash.unset)(draftState.modifiedData, action.keys.split('.'));\n          } else if (action.keys.includes('username') && !action.value) {\n            (0, _lodash.set)(draftState.modifiedData, action.keys.split('.'), null);\n          } else {\n            (0, _lodash.set)(draftState.modifiedData, action.keys.split('.'), action.value);\n          }\n\n          break;\n        }\n\n      case 'ON_SUBMIT':\n        {\n          draftState.showHeaderButtonLoader = true;\n          break;\n        }\n\n      case 'ON_SUBMIT_SUCCEEDED':\n        {\n          draftState.initialData = (0, _lodash.pick)(action.data, state.fieldsToPick);\n          draftState.modifiedData = (0, _lodash.pick)(action.data, state.fieldsToPick);\n          draftState.showHeaderButtonLoader = false;\n          break;\n        }\n\n      case 'SET_ERRORS':\n        {\n          draftState.formErrors = action.errors;\n          draftState.showHeaderButtonLoader = false;\n          break;\n        }\n\n      default:\n        return draftState;\n    }\n  });\n};\n\nexports.reducer = reducer;","map":null,"metadata":{},"sourceType":"script"}