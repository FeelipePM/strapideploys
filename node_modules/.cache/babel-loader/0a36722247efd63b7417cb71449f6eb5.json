{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Typography = require(\"@strapi/design-system/Typography\");\n\nvar _Media = _interopRequireDefault(require(\"./Media\"));\n\nvar _MultipleMedias = _interopRequireDefault(require(\"./MultipleMedias\"));\n\nvar _Relation = _interopRequireDefault(require(\"./Relation\"));\n\nvar _CellValue = _interopRequireDefault(require(\"./CellValue\"));\n\nvar TypographyMaxWidth = /*#__PURE__*/(0, _styledComponents[\"default\"])(_Typography.Typography).withConfig({\n  displayName: \"CellContent__TypographyMaxWidth\",\n  componentId: \"sc-neafof-0\"\n})([\"max-width:300px;\"]);\n\nvar CellContent = function CellContent(_ref) {\n  var content = _ref.content,\n      fieldSchema = _ref.fieldSchema,\n      metadatas = _ref.metadatas,\n      name = _ref.name,\n      queryInfos = _ref.queryInfos,\n      rowId = _ref.rowId;\n\n  if (content === null || content === undefined) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Typography.Typography, {\n      textColor: \"neutral800\"\n    }, \"-\");\n  }\n\n  if (fieldSchema.type === 'media' && !fieldSchema.multiple) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Media[\"default\"], content);\n  }\n\n  if (fieldSchema.type === 'media' && fieldSchema.multiple) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_MultipleMedias[\"default\"], {\n      value: content\n    });\n  }\n\n  if (fieldSchema.type === 'relation') {\n    return /*#__PURE__*/_react[\"default\"].createElement(_Relation[\"default\"], {\n      fieldSchema: fieldSchema,\n      queryInfos: queryInfos,\n      metadatas: metadatas,\n      value: content,\n      name: name,\n      rowId: rowId\n    });\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(TypographyMaxWidth, {\n    ellipsis: true,\n    textColor: \"neutral800\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CellValue[\"default\"], {\n    type: fieldSchema.type,\n    value: content\n  }));\n};\n\nCellContent.defaultProps = {\n  content: undefined,\n  queryInfos: undefined\n};\nCellContent.propTypes = {\n  content: _propTypes[\"default\"].any,\n  fieldSchema: _propTypes[\"default\"].shape({\n    multiple: _propTypes[\"default\"].bool,\n    type: _propTypes[\"default\"].string.isRequired\n  }).isRequired,\n  metadatas: _propTypes[\"default\"].object.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  rowId: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]).isRequired,\n  queryInfos: _propTypes[\"default\"].shape({\n    endPoint: _propTypes[\"default\"].string.isRequired\n  })\n};\nvar _default = CellContent;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}