{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _Plus = _interopRequireDefault(require(\"@strapi/icons/Plus\"));\n\nvar _Box = require(\"@strapi/design-system/Box\");\n\nvar _Field = require(\"@strapi/design-system/Field\");\n\nvar _Grid = require(\"@strapi/design-system/Grid\");\n\nvar _Flex = require(\"@strapi/design-system/Flex\");\n\nvar _Stack = require(\"@strapi/design-system/Stack\");\n\nvar _TextInput = require(\"@strapi/design-system/TextInput\");\n\nvar _TextButton = require(\"@strapi/design-system/TextButton\");\n\nvar _formik = require(\"formik\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Combobox = _interopRequireDefault(require(\"./Combobox\"));\n\nvar HeadersInput = function HeadersInput() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useFormikContext = (0, _formik.useFormikContext)(),\n      values = _useFormikContext.values,\n      errors = _useFormikContext.errors;\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Stack.Stack, {\n    spacing: 1\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Field.FieldLabel, null, formatMessage({\n    id: 'Settings.webhooks.form.headers',\n    defaultMessage: 'Headers'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n    padding: 8,\n    background: \"neutral100\",\n    hasRadius: true\n  }, /*#__PURE__*/_react[\"default\"].createElement(_formik.FieldArray, {\n    validateOnChange: false,\n    name: \"headers\",\n    render: function render(_ref) {\n      var _values$headers;\n\n      var push = _ref.push,\n          remove = _ref.remove;\n      return /*#__PURE__*/_react[\"default\"].createElement(_Grid.Grid, {\n        gap: 4\n      }, (_values$headers = values.headers) === null || _values$headers === void 0 ? void 0 : _values$headers.map(function (header, i) {\n        var _errors$headers, _errors$headers$i, _errors$headers$i2, _errors$headers$i3, _errors$headers2, _errors$headers2$i, _errors$headers$i4, _errors$headers$i5, _errors$headers3, _errors$headers3$i;\n\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line\n          _react[\"default\"].createElement(_react[\"default\"].Fragment, {\n            key: i\n          }, /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n            col: 6\n          }, /*#__PURE__*/_react[\"default\"].createElement(_formik.Field, {\n            as: _Combobox[\"default\"],\n            name: \"headers.\".concat(i, \".key\"),\n            \"aria-label\": \"row \".concat(i + 1, \" key\"),\n            label: formatMessage({\n              id: 'Settings.webhooks.key',\n              defaultMessage: 'Key'\n            }),\n            error: ((_errors$headers = errors.headers) === null || _errors$headers === void 0 ? void 0 : (_errors$headers$i = _errors$headers[i]) === null || _errors$headers$i === void 0 ? void 0 : _errors$headers$i.key) && formatMessage({\n              id: (_errors$headers$i2 = errors.headers[i]) === null || _errors$headers$i2 === void 0 ? void 0 : _errors$headers$i2.key,\n              defaultMessage: (_errors$headers$i3 = errors.headers[i]) === null || _errors$headers$i3 === void 0 ? void 0 : _errors$headers$i3.key\n            })\n          })), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n            col: 6\n          }, /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n            alignItems: \"flex-end\"\n          }, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, {\n            style: {\n              flex: 1\n            }\n          }, /*#__PURE__*/_react[\"default\"].createElement(_formik.Field, {\n            as: _TextInput.TextInput,\n            \"aria-label\": \"row \".concat(i + 1, \" value\"),\n            label: formatMessage({\n              id: 'Settings.webhooks.value',\n              defaultMessage: 'Value'\n            }),\n            name: \"headers.\".concat(i, \".value\"),\n            error: ((_errors$headers2 = errors.headers) === null || _errors$headers2 === void 0 ? void 0 : (_errors$headers2$i = _errors$headers2[i]) === null || _errors$headers2$i === void 0 ? void 0 : _errors$headers2$i.value) && formatMessage({\n              id: (_errors$headers$i4 = errors.headers[i]) === null || _errors$headers$i4 === void 0 ? void 0 : _errors$headers$i4.value,\n              defaultMessage: (_errors$headers$i5 = errors.headers[i]) === null || _errors$headers$i5 === void 0 ? void 0 : _errors$headers$i5.value\n            })\n          })), /*#__PURE__*/_react[\"default\"].createElement(_Flex.Flex, {\n            paddingLeft: 2,\n            style: {\n              alignSelf: 'center'\n            },\n            paddingTop: (_errors$headers3 = errors.headers) !== null && _errors$headers3 !== void 0 && (_errors$headers3$i = _errors$headers3[i]) !== null && _errors$headers3$i !== void 0 && _errors$headers3$i.value ? 0 : 5\n          }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.RemoveRoundedButton, {\n            onClick: function onClick() {\n              return values.headers.length !== 1 && remove(i);\n            },\n            label: formatMessage({\n              id: 'Settings.webhooks.headers.remove',\n              defaultMessage: 'Remove header row {number}'\n            }, {\n              number: i + 1\n            })\n          })))))\n        );\n      }), /*#__PURE__*/_react[\"default\"].createElement(_Grid.GridItem, {\n        col: 12\n      }, /*#__PURE__*/_react[\"default\"].createElement(_TextButton.TextButton, {\n        type: \"button\",\n        onClick: function onClick() {\n          push({\n            key: '',\n            value: ''\n          });\n        },\n        startIcon: /*#__PURE__*/_react[\"default\"].createElement(_Plus[\"default\"], null)\n      }, formatMessage({\n        id: 'Settings.webhooks.create.header',\n        defaultMessage: 'Create new header'\n      }))));\n    }\n  })));\n};\n\nvar _default = HeadersInput;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}