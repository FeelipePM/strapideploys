{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _Main = require(\"@strapi/design-system/Main\");\n\nvar _helperPlugin = require(\"@strapi/helper-plugin\");\n\nvar _utils = require(\"../../utils\");\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar _utils2 = require(\"./utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar EditViewDataManagerProvider = function EditViewDataManagerProvider(_ref) {\n  var allLayoutData = _ref.allLayoutData,\n      _ref$allowedActions = _ref.allowedActions,\n      canRead = _ref$allowedActions.canRead,\n      canUpdate = _ref$allowedActions.canUpdate,\n      children = _ref.children,\n      componentsDataStructure = _ref.componentsDataStructure,\n      contentTypeDataStructure = _ref.contentTypeDataStructure,\n      createActionAllowedFields = _ref.createActionAllowedFields,\n      from = _ref.from,\n      initialValues = _ref.initialValues,\n      isCreatingEntry = _ref.isCreatingEntry,\n      isLoadingForData = _ref.isLoadingForData,\n      isSingleType = _ref.isSingleType,\n      onPost = _ref.onPost,\n      onPublish = _ref.onPublish,\n      onPut = _ref.onPut,\n      onUnpublish = _ref.onUnpublish,\n      readActionAllowedFields = _ref.readActionAllowedFields,\n      redirectToPreviousPage = _ref.redirectToPreviousPage,\n      slug = _ref.slug,\n      status = _ref.status,\n      updateActionAllowedFields = _ref.updateActionAllowedFields;\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var formErrors = reducerState.formErrors,\n      initialData = reducerState.initialData,\n      modifiedData = reducerState.modifiedData,\n      modifiedDZName = reducerState.modifiedDZName,\n      shouldCheckErrors = reducerState.shouldCheckErrors;\n  var toggleNotification = (0, _helperPlugin.useNotification)();\n\n  var _useOverlayBlocker = (0, _helperPlugin.useOverlayBlocker)(),\n      lockApp = _useOverlayBlocker.lockApp,\n      unlockApp = _useOverlayBlocker.unlockApp;\n\n  var currentContentTypeLayout = (0, _lodash.get)(allLayoutData, ['contentType'], {});\n  var hasDraftAndPublish = (0, _react.useMemo)(function () {\n    return (0, _lodash.get)(currentContentTypeLayout, ['options', 'draftAndPublish'], false);\n  }, [currentContentTypeLayout]);\n  var shouldNotRunValidations = (0, _react.useMemo)(function () {\n    return hasDraftAndPublish && !initialData.publishedAt;\n  }, [hasDraftAndPublish, initialData.publishedAt]);\n\n  var _useTracking = (0, _helperPlugin.useTracking)(),\n      trackUsage = _useTracking.trackUsage;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var trackUsageRef = (0, _react.useRef)(trackUsage);\n  var shouldRedirectToHomepageWhenEditingEntry = (0, _react.useMemo)(function () {\n    if (isLoadingForData) {\n      return false;\n    }\n\n    if (isCreatingEntry) {\n      return false;\n    }\n\n    if (canRead === false && canUpdate === false) {\n      return true;\n    }\n\n    return false;\n  }, [isLoadingForData, isCreatingEntry, canRead, canUpdate]);\n  (0, _react.useEffect)(function () {\n    if (status === 'resolved') {\n      unlockApp();\n    } else {\n      lockApp();\n    }\n  }, [lockApp, unlockApp, status]); // TODO check this effect if it is really needed (not prio)\n\n  (0, _react.useEffect)(function () {\n    if (!isLoadingForData) {\n      checkFormErrors();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [shouldCheckErrors]);\n  (0, _react.useEffect)(function () {\n    var errorsInForm = Object.keys(formErrors); // TODO check if working with DZ, components...\n    // TODO use querySelector querySelectorAll('[data-strapi-field-error]')\n\n    if (errorsInForm.length > 0) {\n      var firstError = errorsInForm[0];\n      var el = document.getElementById(firstError);\n\n      if (el) {\n        el.focus();\n      }\n    }\n  }, [formErrors]);\n  (0, _react.useEffect)(function () {\n    if (shouldRedirectToHomepageWhenEditingEntry) {\n      toggleNotification({\n        type: 'info',\n        message: {\n          id: (0, _utils.getTrad)('permissions.not-allowed.update')\n        }\n      });\n    }\n  }, [shouldRedirectToHomepageWhenEditingEntry, toggleNotification]);\n  (0, _react.useEffect)(function () {\n    dispatch({\n      type: 'SET_DEFAULT_DATA_STRUCTURES',\n      componentsDataStructure: componentsDataStructure,\n      contentTypeDataStructure: contentTypeDataStructure\n    });\n  }, [componentsDataStructure, contentTypeDataStructure]);\n  (0, _react.useEffect)(function () {\n    if (initialValues) {\n      dispatch({\n        type: 'INIT_FORM',\n        initialValues: initialValues\n      });\n    }\n  }, [initialValues]);\n  var addComponentToDynamicZone = (0, _react.useCallback)(function (keys, componentUid) {\n    var shouldCheckErrors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    trackUsageRef.current('didAddComponentToDynamicZone');\n    dispatch({\n      type: 'ADD_COMPONENT_TO_DYNAMIC_ZONE',\n      keys: keys.split('.'),\n      componentUid: componentUid,\n      shouldCheckErrors: shouldCheckErrors\n    });\n  }, []);\n  var addNonRepeatableComponentToField = (0, _react.useCallback)(function (keys, componentUid) {\n    dispatch({\n      type: 'ADD_NON_REPEATABLE_COMPONENT_TO_FIELD',\n      keys: keys.split('.'),\n      componentUid: componentUid\n    });\n  }, []);\n  var addRelation = (0, _react.useCallback)(function (_ref2) {\n    var _ref2$target = _ref2.target,\n        name = _ref2$target.name,\n        value = _ref2$target.value;\n    dispatch({\n      type: 'ADD_RELATION',\n      keys: name.split('.'),\n      value: value\n    });\n  }, []);\n  var addRepeatableComponentToField = (0, _react.useCallback)(function (keys, componentUid) {\n    var shouldCheckErrors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    dispatch({\n      type: 'ADD_REPEATABLE_COMPONENT_TO_FIELD',\n      keys: keys.split('.'),\n      componentUid: componentUid,\n      shouldCheckErrors: shouldCheckErrors\n    });\n  }, []);\n  var yupSchema = (0, _react.useMemo)(function () {\n    var options = {\n      isCreatingEntry: isCreatingEntry,\n      isDraft: shouldNotRunValidations,\n      isFromComponent: false\n    };\n    return (0, _utils2.createYupSchema)(currentContentTypeLayout, {\n      components: allLayoutData.components || {}\n    }, options);\n  }, [allLayoutData.components, currentContentTypeLayout, isCreatingEntry, shouldNotRunValidations]);\n  var checkFormErrors = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var dataToSet,\n        errors,\n        updatedData,\n        _args = arguments;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataToSet = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            errors = {};\n            updatedData = (0, _lodash.cloneDeep)(modifiedData);\n\n            if (!(0, _lodash.isEmpty)(updatedData)) {\n              (0, _lodash.set)(updatedData, dataToSet.path, dataToSet.value);\n            }\n\n            _context.prev = 4;\n            _context.next = 7;\n            return yupSchema.validate(updatedData, {\n              abortEarly: false\n            });\n\n          case 7:\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](4);\n            errors = (0, _utils2.getYupInnerErrors)(_context.t0);\n\n            if (modifiedDZName) {\n              errors = Object.keys(errors).reduce(function (acc, current) {\n                var dzName = current.split('.')[0];\n\n                if (dzName !== modifiedDZName) {\n                  acc[current] = errors[current];\n                }\n\n                return acc;\n              }, {});\n            }\n\n          case 13:\n            dispatch({\n              type: 'SET_FORM_ERRORS',\n              errors: errors\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 9]]);\n  })), [modifiedDZName, modifiedData, yupSchema]);\n  var handleChange = (0, _react.useCallback)(function (_ref4) {\n    var _ref4$target = _ref4.target,\n        name = _ref4$target.name,\n        value = _ref4$target.value,\n        type = _ref4$target.type;\n    var shouldSetInitialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var inputValue = value; // Empty string is not a valid date,\n    // Set the date to null when it's empty\n\n    if (type === 'date' && value === '') {\n      inputValue = null;\n    }\n\n    if (type === 'password' && !value) {\n      dispatch({\n        type: 'REMOVE_PASSWORD_FIELD',\n        keys: name.split('.')\n      });\n      return;\n    } // Allow to reset enum\n\n\n    if (type === 'select-one' && value === '') {\n      inputValue = null;\n    } // Allow to reset number input\n\n\n    if (type === 'number' && value === '') {\n      inputValue = null;\n    }\n\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: name.split('.'),\n      value: inputValue,\n      shouldSetInitialValue: shouldSetInitialValue\n    });\n  }, []);\n  var createFormData = (0, _react.useCallback)(function (data) {\n    // First we need to remove the added keys needed for the dnd\n    var preparedData = (0, _utils.removeKeyInObject)((0, _lodash.cloneDeep)(data), '__temp_key__'); // Then we need to apply our helper\n\n    var cleanedData = (0, _utils2.cleanData)(preparedData, currentContentTypeLayout, allLayoutData.components);\n    return cleanedData;\n  }, [allLayoutData.components, currentContentTypeLayout]);\n  var trackerProperty = (0, _react.useMemo)(function () {\n    if (!hasDraftAndPublish) {\n      return {};\n    }\n\n    return shouldNotRunValidations ? {\n      status: 'draft'\n    } : {};\n  }, [hasDraftAndPublish, shouldNotRunValidations]);\n  var handleSubmit = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(e) {\n      var errors, formData;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              errors = {}; // First validate the form\n\n              _context2.prev = 2;\n              _context2.next = 5;\n              return yupSchema.validate(modifiedData, {\n                abortEarly: false\n              });\n\n            case 5:\n              formData = createFormData(modifiedData);\n\n              if (isCreatingEntry) {\n                onPost(formData, trackerProperty);\n              } else {\n                onPut(formData, trackerProperty);\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log('ValidationError');\n              console.log(_context2.t0);\n              errors = (0, _utils2.getYupInnerErrors)(_context2.t0);\n              toggleNotification({\n                type: 'warning',\n                message: {\n                  id: (0, _utils.getTrad)('containers.EditView.notification.errors'),\n                  defaultMessage: 'The form contains some errors'\n                }\n              });\n\n            case 15:\n              dispatch({\n                type: 'SET_FORM_ERRORS',\n                errors: errors\n              });\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), [createFormData, isCreatingEntry, modifiedData, onPost, onPut, toggleNotification, trackerProperty, yupSchema]);\n  var handlePublish = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n    var schema, errors;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // Create yup schema here's we need to apply all the validations\n            schema = (0, _utils2.createYupSchema)(currentContentTypeLayout, {\n              components: (0, _lodash.get)(allLayoutData, 'components', {})\n            }, {\n              isCreatingEntry: isCreatingEntry,\n              isDraft: false,\n              isFromComponent: false\n            });\n            errors = {};\n            _context3.prev = 2;\n            _context3.next = 5;\n            return schema.validate(modifiedData, {\n              abortEarly: false\n            });\n\n          case 5:\n            onPublish();\n            _context3.next = 13;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.error('ValidationError');\n            console.error(_context3.t0);\n            errors = (0, _utils2.getYupInnerErrors)(_context3.t0);\n\n          case 13:\n            dispatch({\n              type: 'SET_FORM_ERRORS',\n              errors: errors\n            });\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 8]]);\n  })), [allLayoutData, currentContentTypeLayout, isCreatingEntry, modifiedData, onPublish]);\n  var shouldCheckDZErrors = (0, _react.useCallback)(function (dzName) {\n    var doesDZHaveError = Object.keys(formErrors).some(function (key) {\n      return key.split('.')[0] === dzName;\n    });\n    var shouldCheckErrors = !(0, _lodash.isEmpty)(formErrors) && doesDZHaveError;\n    return shouldCheckErrors;\n  }, [formErrors]);\n  var moveComponentDown = (0, _react.useCallback)(function (dynamicZoneName, currentIndex) {\n    trackUsageRef.current('changeComponentsOrder');\n    dispatch({\n      type: 'MOVE_COMPONENT_DOWN',\n      dynamicZoneName: dynamicZoneName,\n      currentIndex: currentIndex,\n      shouldCheckErrors: shouldCheckDZErrors(dynamicZoneName)\n    });\n  }, [shouldCheckDZErrors]);\n  var moveComponentUp = (0, _react.useCallback)(function (dynamicZoneName, currentIndex) {\n    trackUsageRef.current('changeComponentsOrder');\n    dispatch({\n      type: 'MOVE_COMPONENT_UP',\n      dynamicZoneName: dynamicZoneName,\n      currentIndex: currentIndex,\n      shouldCheckErrors: shouldCheckDZErrors(dynamicZoneName)\n    });\n  }, [shouldCheckDZErrors]);\n  var moveComponentField = (0, _react.useCallback)(function (pathToComponent, dragIndex, hoverIndex) {\n    dispatch({\n      type: 'MOVE_COMPONENT_FIELD',\n      pathToComponent: pathToComponent,\n      dragIndex: dragIndex,\n      hoverIndex: hoverIndex\n    });\n  }, []);\n  var moveRelation = (0, _react.useCallback)(function (dragIndex, overIndex, name) {\n    dispatch({\n      type: 'MOVE_FIELD',\n      dragIndex: dragIndex,\n      overIndex: overIndex,\n      keys: name.split('.')\n    });\n  }, []);\n  var onRemoveRelation = (0, _react.useCallback)(function (keys) {\n    dispatch({\n      type: 'REMOVE_RELATION',\n      keys: keys\n    });\n  }, []);\n  var removeComponentFromDynamicZone = (0, _react.useCallback)(function (dynamicZoneName, index) {\n    trackUsageRef.current('removeComponentFromDynamicZone');\n    dispatch({\n      type: 'REMOVE_COMPONENT_FROM_DYNAMIC_ZONE',\n      dynamicZoneName: dynamicZoneName,\n      index: index,\n      shouldCheckErrors: shouldCheckDZErrors(dynamicZoneName)\n    });\n  }, [shouldCheckDZErrors]);\n  var removeComponentFromField = (0, _react.useCallback)(function (keys, componentUid) {\n    dispatch({\n      type: 'REMOVE_COMPONENT_FROM_FIELD',\n      keys: keys.split('.'),\n      componentUid: componentUid\n    });\n  }, []);\n  var removeRepeatableField = (0, _react.useCallback)(function (keys, componentUid) {\n    dispatch({\n      type: 'REMOVE_REPEATABLE_FIELD',\n      keys: keys.split('.'),\n      componentUid: componentUid\n    });\n  }, []);\n  var triggerFormValidation = (0, _react.useCallback)(function () {\n    dispatch({\n      type: 'TRIGGER_FORM_VALIDATION'\n    });\n  }, []); // Redirect the user to the previous page if he is not allowed to read/update a document\n\n  if (shouldRedirectToHomepageWhenEditingEntry) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Redirect, {\n      to: from\n    });\n  }\n\n  if (!modifiedData) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.ContentManagerEditViewDataManagerContext.Provider, {\n    value: {\n      addComponentToDynamicZone: addComponentToDynamicZone,\n      addNonRepeatableComponentToField: addNonRepeatableComponentToField,\n      addRelation: addRelation,\n      addRepeatableComponentToField: addRepeatableComponentToField,\n      allLayoutData: allLayoutData,\n      checkFormErrors: checkFormErrors,\n      createActionAllowedFields: createActionAllowedFields,\n      formErrors: formErrors,\n      hasDraftAndPublish: hasDraftAndPublish,\n      initialData: initialData,\n      isCreatingEntry: isCreatingEntry,\n      isSingleType: isSingleType,\n      shouldNotRunValidations: shouldNotRunValidations,\n      status: status,\n      layout: currentContentTypeLayout,\n      modifiedData: modifiedData,\n      moveComponentDown: moveComponentDown,\n      moveComponentField: moveComponentField,\n      moveComponentUp: moveComponentUp,\n      moveRelation: moveRelation,\n      onChange: handleChange,\n      onPublish: handlePublish,\n      onUnpublish: onUnpublish,\n      onRemoveRelation: onRemoveRelation,\n      readActionAllowedFields: readActionAllowedFields,\n      redirectToPreviousPage: redirectToPreviousPage,\n      removeComponentFromDynamicZone: removeComponentFromDynamicZone,\n      removeComponentFromField: removeComponentFromField,\n      removeRepeatableField: removeRepeatableField,\n      slug: slug,\n      triggerFormValidation: triggerFormValidation,\n      updateActionAllowedFields: updateActionAllowedFields\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, isLoadingForData || !isCreatingEntry && !initialData.id ? /*#__PURE__*/_react[\"default\"].createElement(_Main.Main, {\n    \"aria-busy\": \"true\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_helperPlugin.LoadingIndicatorPage, null)) : /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Prompt, {\n    when: !(0, _lodash.isEqual)(modifiedData, initialData),\n    message: formatMessage({\n      id: 'global.prompt.unsaved'\n    })\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, children))));\n};\n\nEditViewDataManagerProvider.defaultProps = {\n  from: '/',\n  initialValues: null,\n  redirectToPreviousPage: function redirectToPreviousPage() {}\n};\nEditViewDataManagerProvider.propTypes = {\n  allLayoutData: _propTypes[\"default\"].object.isRequired,\n  allowedActions: _propTypes[\"default\"].object.isRequired,\n  children: _propTypes[\"default\"].node.isRequired,\n  componentsDataStructure: _propTypes[\"default\"].object.isRequired,\n  contentTypeDataStructure: _propTypes[\"default\"].object.isRequired,\n  createActionAllowedFields: _propTypes[\"default\"].array.isRequired,\n  from: _propTypes[\"default\"].string,\n  initialValues: _propTypes[\"default\"].object,\n  isCreatingEntry: _propTypes[\"default\"].bool.isRequired,\n  isLoadingForData: _propTypes[\"default\"].bool.isRequired,\n  isSingleType: _propTypes[\"default\"].bool.isRequired,\n  onPost: _propTypes[\"default\"].func.isRequired,\n  onPublish: _propTypes[\"default\"].func.isRequired,\n  onPut: _propTypes[\"default\"].func.isRequired,\n  onUnpublish: _propTypes[\"default\"].func.isRequired,\n  readActionAllowedFields: _propTypes[\"default\"].array.isRequired,\n  redirectToPreviousPage: _propTypes[\"default\"].func,\n  slug: _propTypes[\"default\"].string.isRequired,\n  status: _propTypes[\"default\"].string.isRequired,\n  updateActionAllowedFields: _propTypes[\"default\"].array.isRequired\n};\nvar _default = EditViewDataManagerProvider;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}