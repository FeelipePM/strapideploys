{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar getDraftRelations = function getDraftRelations(data, ctSchema, components) {\n  var getDraftRelationsCount = function getDraftRelationsCount(data, schema) {\n    return Object.keys(data).reduce(function (acc, current) {\n      var type = (0, _lodash.get)(schema, ['attributes', current, 'type'], 'string');\n      var relationType = (0, _lodash.get)(schema, ['attributes', current, 'relationType'], '');\n      var isMorph = relationType.toLowerCase().includes('morph');\n      var oneWayTypes = ['oneWay', 'oneToOne', 'manyToOne'];\n      var currentData = data[current];\n\n      if ((0, _lodash.isNil)(currentData)) {\n        return acc;\n      }\n\n      if (type === 'dynamiczone') {\n        currentData.forEach(function (curr) {\n          var compoSchema = (0, _lodash.get)(components, curr.__component, {});\n          acc += getDraftRelationsCount(curr, compoSchema);\n        });\n      }\n\n      if (type === 'component') {\n        var isRepeatable = (0, _lodash.get)(schema, ['attributes', current, 'repeatable'], false);\n        var compoUID = (0, _lodash.get)(schema, ['attributes', current, 'component'], '');\n        var compoSchema = (0, _lodash.get)(components, compoUID, {});\n\n        if (isRepeatable) {\n          currentData.forEach(function (curr) {\n            acc += getDraftRelationsCount(curr, compoSchema);\n          });\n        } else {\n          acc += getDraftRelationsCount(currentData, compoSchema);\n        }\n      }\n\n      if (type === 'relation' && !isMorph) {\n        if (oneWayTypes.includes(relationType)) {\n          var hasDraftAndPublish = (0, _lodash.has)(currentData, 'publishedAt');\n\n          if (hasDraftAndPublish && (0, _lodash.isEmpty)(currentData.publishedAt)) {\n            acc += 1;\n          }\n        } else {\n          currentData.forEach(function (value) {\n            if ((0, _lodash.has)(value, 'publishedAt') && (0, _lodash.isEmpty)(value.publishedAt)) {\n              acc += 1;\n            }\n          });\n        }\n      }\n\n      return acc;\n    }, 0);\n  };\n\n  var count = getDraftRelationsCount(data, ctSchema, components);\n  return count;\n};\n\nvar _default = getDraftRelations;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}